<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SpringBoot+Vue前后端分离简易开发</title>
    <url>/2020/02/21/SpringBoot-Vue%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E7%AE%80%E6%98%93%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<p>本文主要是学习于B站的Spring Boot+Vue前后端分离开发，技术主要采用Springboot + Vue + Element Ui，来完成基本的数据表格操作。</p>
<br>
<br>
<br>
<br>
<br>
## 前端
### 界面
![](https://img-blog.csdnimg.cn/20200221153338242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70)
![](https://img-blog.csdnimg.cn/20200221153757210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70)
![](https://img-blog.csdnimg.cn/20200221153707819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70)

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./plugins/axios'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./plugins/element.js'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//element-ui的全部组件</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="comment">//element-ui的css</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"><span class="comment">//使用elementUI</span></span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure>

<h4 id="router"><a href="#router" class="headerlink" title="router"></a>router</h4><p><strong>index.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> List <span class="keyword">from</span> <span class="string">'../views/PageOne'</span></span><br><span class="line"><span class="keyword">import</span> Add <span class="keyword">from</span> <span class="string">'../views/PageTwo'</span></span><br><span class="line"><span class="keyword">import</span> Update <span class="keyword">from</span> <span class="string">'../views/PageThree.vue'</span></span><br><span class="line"><span class="keyword">import</span> PageFour <span class="keyword">from</span> <span class="string">'../views/PageFour.vue'</span></span><br><span class="line"><span class="keyword">import</span> Index <span class="keyword">from</span> <span class="string">'../views/index.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [&#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    name: <span class="string">"用户管理"</span>,</span><br><span class="line">    component: Index,</span><br><span class="line">    redirect: <span class="string">"/List"</span>,</span><br><span class="line">    show: <span class="literal">true</span>,</span><br><span class="line">    children: [&#123;</span><br><span class="line">        path: <span class="string">"/List"</span>,</span><br><span class="line">        name: <span class="string">"查询用户"</span>,</span><br><span class="line">        component: List</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"/Add"</span>,</span><br><span class="line">        name: <span class="string">"添加用户"</span>,</span><br><span class="line">        component: Add</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"/update"</span>,</span><br><span class="line">        name: <span class="string">"修改用户"</span>,</span><br><span class="line">        component: Update</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/authority"</span>,</span><br><span class="line">    name: <span class="string">"权限管理"</span>,</span><br><span class="line">    <span class="comment">// 利用v-show隐藏此模块</span></span><br><span class="line">    show: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  base: process.env.BASE_URL,</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<h4 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.el-header</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#b3c0d1</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">  line-height: 60px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.el-aside</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> item = &#123;</span></span><br><span class="line"><span class="actionscript">      date: <span class="string">"2016-05-02"</span>,</span></span><br><span class="line"><span class="actionscript">      name: <span class="string">"王小虎"</span>,</span></span><br><span class="line"><span class="actionscript">      address: <span class="string">"上海市普陀区金沙江路 1518 弄"</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      tableData: <span class="built_in">Array</span>(<span class="number">20</span>).fill(item)</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="views"><a href="#views" class="headerlink" title="views"></a>views</h4><p><strong>index.vue</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 构建整个页面框架 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">"height: 500px; border: 1px solid #eee"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 构建左侧菜单 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">style</span>=<span class="string">"background-color: rgb(238, 241, 246)"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 左侧菜单内容，</span></span><br><span class="line"><span class="comment">        常用属性 ：default-openeds默认展开的菜单，通过菜单的index直来关联</span></span><br><span class="line"><span class="comment">        default-active：默认选中的菜单，通过菜单的index值来关联--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;el-menu :default-openeds="['1', '3']"&gt;</span></span><br><span class="line"><span class="comment">          可展开的菜单，常用属性，index：菜单的下标，文本类型，不能是数值类型</span></span><br><span class="line"><span class="comment">          &lt;el-submenu index="1"&gt;</span></span><br><span class="line"><span class="comment">            对应el-submenu的菜单名</span></span><br><span class="line"><span class="comment">            &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="comment">              i：设置菜单图标，通过class属性实则. 如:el-icon-menu,el-icon-message,el-icon-setting</span></span><br><span class="line"><span class="comment">              &lt;i class="el-icon-message"&gt;&lt;/i&gt;导航一</span></span><br><span class="line"><span class="comment">            &lt;/template&gt;</span></span><br><span class="line"><span class="comment">            菜单的子节点,不可再展开,常用属性. index:菜单的下标,文本类型,不能是数值类型</span></span><br><span class="line"><span class="comment">            &lt;el-menu-item index="1-1"&gt;选项1&lt;/el-menu-item&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-menu-item index="1-2"&gt;选项2&lt;/el-menu-item&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-submenu index="1-3"&gt;</span></span><br><span class="line"><span class="comment">              &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="comment">                &lt;i class="el-icon-message"&gt;&lt;/i&gt;选项3</span></span><br><span class="line"><span class="comment">              &lt;/template&gt;</span></span><br><span class="line"><span class="comment">              &lt;el-menu-item index="1-3-1"&gt;选项3-1&lt;/el-menu-item&gt;</span></span><br><span class="line"><span class="comment">            &lt;/el-submenu&gt;</span></span><br><span class="line"><span class="comment">          &lt;/el-submenu&gt;</span></span><br><span class="line"><span class="comment">        &lt;/el-menu&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- menu 与 router的绑定：</span></span><br><span class="line"><span class="comment">          1.&lt;el-menu&gt;标签添加router属性</span></span><br><span class="line"><span class="comment">          2.在页面中添加&lt;router-view&gt;标签，它是一个容器，动态渲染你选择的router</span></span><br><span class="line"><span class="comment">          3.&lt;el-menu-item&gt;标签的index值就是要跳转的router</span></span><br><span class="line"><span class="comment">           --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">router</span> <span class="attr">:default-openeds</span>=<span class="string">"['0', '1']"</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- Custom elements in iteration require 'v-bind:key' directives. --&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 在el-menu-item 及el-submenu 标签上面，必须要加上 index属性，如果没有则报错。 </span></span><br><span class="line"><span class="comment">          :key属性为了避免点击菜单全部展开--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">v-for</span>=<span class="string">"(item,index)  in $router.options.routes"</span> <span class="attr">:index</span>=<span class="string">"index + ''"</span> <span class="attr">:key</span>=<span class="string">"index + ''"</span> <span class="attr">v-show</span>=<span class="string">"item.show"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-message"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&#123;&#123;index&#125;&#125;-&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">v-for</span>=<span class="string">"(item2,index2) in item.children"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:class</span>=<span class="string">"$route.path == item2.path ? 'isActive':''"</span> <span class="attr">:index</span>=<span class="string">"item2.path"</span> <span class="attr">v-bind:key</span>=<span class="string">"index + '-' + index2"</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- &lt;router-link :to="/路径"&gt;&lt;/router-link&gt; --&gt;</span></span><br><span class="line">              &#123;&#123;item2.name&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">style</span>=<span class="string">"text-align: right; font-size: 12px"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-setting"</span> <span class="attr">style</span>=<span class="string">"margin-right: 15px"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dropdown-menu</span> <span class="attr">slot</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>王小虎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 构建页面主体内容 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- &lt;el-table :data="tableData"&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-table-column prop="date" label="日期" width="140"&gt;&lt;/el-table-column&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-table-column prop="name" label="姓名" width="120"&gt;&lt;/el-table-column&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-table-column prop="address" label="地址"&gt;&lt;/el-table-column&gt;</span></span><br><span class="line"><span class="comment">          &lt;/el-table&gt;--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.isActive</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">  color: aquamarine;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>PageOne.vue-页面展示数据表</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 必须都套在一个div里 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">"tableData"</span> <span class="attr">border</span> <span class="attr">style</span>=<span class="string">"width: 50%"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span> <span class="attr">prop</span>=<span class="string">"id"</span> <span class="attr">label</span>=<span class="string">"编号"</span> <span class="attr">width</span>=<span class="string">"150"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"name"</span> <span class="attr">label</span>=<span class="string">"姓名"</span> <span class="attr">width</span>=<span class="string">"120"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"gender"</span> <span class="attr">label</span>=<span class="string">"性别"</span> <span class="attr">width</span>=<span class="string">"120"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"age"</span> <span class="attr">label</span>=<span class="string">"年龄"</span> <span class="attr">width</span>=<span class="string">"120"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span>=<span class="string">"right"</span> <span class="attr">label</span>=<span class="string">"操作"</span> <span class="attr">width</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"edit(scope.row)"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"small"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"deleteUserById(scope.row)"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"small"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分页 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- :total 默认每页十条记录数，总记录数是100，就是十页</span></span><br><span class="line"><span class="comment">    :page-size: 每页数据量(即记录数)，默认10--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">      <span class="attr">background</span></span></span><br><span class="line"><span class="tag">      <span class="attr">layout</span>=<span class="string">"prev, pager, next"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page-size</span>=<span class="string">"pageSize"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:total</span>=<span class="string">"total"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">current-change</span>=<span class="string">"page"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"PageOne"</span>,</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    edit(row) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$router.push(&#123;</span></span><br><span class="line"><span class="actionscript">        path: <span class="string">'/update'</span>,</span></span><br><span class="line">        query: &#123;</span><br><span class="line">          id: row.id</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    deleteUserById(row) &#123;</span><br><span class="line">      alert(row.id)</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line">      axios</span><br><span class="line"><span class="actionscript">        .delete(<span class="string">"http://localhost:8181/user/delete?id="</span> + row.id)</span></span><br><span class="line"><span class="actionscript">        .then(<span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          alert(<span class="string">"成功"</span>);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">window</span>.location.reload();</span></span><br><span class="line"><span class="javascript">        &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">          alert(<span class="string">"失败"</span>)</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    page(currentPage) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line">      axios</span><br><span class="line"><span class="actionscript">        .get(<span class="string">"http://localhost:8181/user/findAll/"</span> + (currentPage - <span class="number">1</span>) + <span class="string">"/6"</span>)</span></span><br><span class="line"><span class="actionscript">        .then(<span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line">          _this.tableData = resp.data.content;</span><br><span class="line">          _this.pageSize = resp.data.size;</span><br><span class="line">          _this.total = resp.data.totalElements;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      pageSize: 1,</span><br><span class="line">      total: 17,</span><br><span class="line">      tableData: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">    axios.get(<span class="string">"http://localhost:8181/user/findAll/0/5"</span>).then(<span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line">      _this.tableData = resp.data.content;</span><br><span class="line">      _this.pageSize = resp.data.size;</span><br><span class="line">      _this.total = resp.data.totalElements;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>PageTwo-页面添加功能</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref:不能少，相当于form表单的name属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">label-width</span>=<span class="string">"100px"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"demo-ruleForm"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户姓名"</span> <span class="attr">prop</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户性别"</span> <span class="attr">prop</span>=<span class="string">"gender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.gender"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户年龄"</span> <span class="attr">prop</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.age"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"submitForm('ruleForm')"</span>&gt;</span>立即创建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"resetForm('ruleForm')"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"test()"</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"PageTwo"</span>,</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      ruleForm: &#123;</span><br><span class="line"><span class="actionscript">        name: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        age: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        gender: <span class="string">""</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// region: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date1: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date2: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// delivery: false,</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// type: [],</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// resource: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// desc: ""</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="comment">// 定义rules对象，在rules对象中设置表单各个选项的校验规则：</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// trigger：触发事件，如 blur失焦</span></span></span><br><span class="line">      rules: &#123;</span><br><span class="line">        id: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户编号"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">1</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 1 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        name: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户名称"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">3</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 3 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        region: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请选择活动区域"</span>, trigger: <span class="string">"change"</span> &#125;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    test() &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 不能拼接 "内容" +，会变成Object</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.ruleForm);</span></span><br><span class="line">    &#125;,</span><br><span class="line">    submitForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span><br><span class="line">        if (valid) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// axios.post('http://localhost:8181/user/add', this.ruleForm)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   .then(function (response) &#123;</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//     console.log(response);</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   &#125;)</span></span></span><br><span class="line">          axios(&#123;</span><br><span class="line"><span class="actionscript">            url: <span class="string">"http://localhost:8181/user/add"</span>,</span></span><br><span class="line">            params: &#123;</span><br><span class="line"><span class="actionscript">              name: <span class="keyword">this</span>.ruleForm.name,</span></span><br><span class="line"><span class="actionscript">              age: <span class="keyword">this</span>.ruleForm.age,</span></span><br><span class="line"><span class="actionscript">              gender: <span class="keyword">this</span>.ruleForm.gender</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            method: <span class="string">"post"</span></span></span><br><span class="line"><span class="javascript">          &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">            _this.$alert(<span class="string">"《"</span> + _this.ruleForm.name + <span class="string">"》添加成功"</span>, <span class="string">"消息"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">              confirmButtonText: <span class="string">"确定"</span>,</span></span><br><span class="line"><span class="javascript">              callback: <span class="function"><span class="params">action</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                _this.$router.push(<span class="string">"/List"</span>);</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"error submit!!"</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    resetForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$refs[formName].resetFields();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>PageThree-页面修改功能</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref:不能少，相当于form表单的name属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">label-width</span>=<span class="string">"100px"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"demo-ruleForm"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户编号"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.id"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户姓名"</span> <span class="attr">prop</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户性别"</span> <span class="attr">prop</span>=<span class="string">"gender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.gender"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户年龄"</span> <span class="attr">prop</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.age"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"submitForm('ruleForm')"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"resetForm('ruleForm')"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"PageThree"</span>,</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      ruleForm: &#123;</span><br><span class="line"><span class="actionscript">        id: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        age: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        gender: <span class="string">""</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// region: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date1: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date2: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// delivery: false,</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// type: [],</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// resource: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// desc: ""</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="comment">// 定义rules对象，在rules对象中设置表单各个选项的校验规则：</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// trigger：触发事件，如 blur失焦</span></span></span><br><span class="line">      rules: &#123;</span><br><span class="line">        id: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户编号"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">1</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 1 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        name: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户名称"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">2</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 3 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        region: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请选择活动区域"</span>, trigger: <span class="string">"change"</span> &#125;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    submitForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span><br><span class="line">        if (valid) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// axios.post('http://localhost:8181/user/add', this.ruleForm)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   .then(function (response) &#123;</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//     console.log(response);</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   &#125;)</span></span></span><br><span class="line">          axios(&#123;</span><br><span class="line"><span class="actionscript">            url: <span class="string">"http://localhost:8181/user/update"</span>,</span></span><br><span class="line">            params: &#123;</span><br><span class="line"><span class="actionscript">              id: <span class="keyword">this</span>.ruleForm.id,</span></span><br><span class="line"><span class="actionscript">              name: <span class="keyword">this</span>.ruleForm.name,</span></span><br><span class="line"><span class="actionscript">              age: <span class="keyword">this</span>.ruleForm.age,</span></span><br><span class="line"><span class="actionscript">              gender: <span class="keyword">this</span>.ruleForm.gender</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            method: <span class="string">"put"</span></span></span><br><span class="line"><span class="javascript">          &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">            _this.$alert(<span class="string">"《"</span> + _this.ruleForm.name + <span class="string">"》修改成功"</span>, <span class="string">"消息"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">              confirmButtonText: <span class="string">"确定"</span>,</span></span><br><span class="line"><span class="javascript">              callback: <span class="function"><span class="params">action</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                _this.$router.push(<span class="string">"/List"</span>);</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"error submit!!"</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    resetForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$refs[formName].resetFields();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">    alert(<span class="keyword">this</span>.$route.query.id);</span></span><br><span class="line">    axios</span><br><span class="line"><span class="actionscript">      .get(<span class="string">"http://localhost:8181/user/findById/"</span> + <span class="keyword">this</span>.$route.query.id)</span></span><br><span class="line"><span class="actionscript">      .then(<span class="function"><span class="keyword">function</span><span class="params">(response)</span> </span>&#123;</span></span><br><span class="line">        _this.ruleForm = response.data;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p><strong>UserInfo.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置自增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>UserInfoRepository.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.demo.entity.UserInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserInfoRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">UserInfo</span>, <span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//右键 goto，创建测试类</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>UserInfoController.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.demo.entity.UserInfo;</span><br><span class="line"><span class="keyword">import</span> cn.blue.demo.repository.UserInfoRepository;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserInfoRepository userInfoRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page 当前页数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size 每页显示数据量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户列表信息；倘若让其直接通过访问user就请求此方法就是404</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll/&#123;page&#125;/&#123;size&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;UserInfo&gt; <span class="title">findAll</span><span class="params">(@PathVariable(<span class="string">"page"</span>)</span> Integer page, @<span class="title">PathVariable</span><span class="params">(<span class="string">"size"</span>)</span> Integer size) </span>&#123;</span><br><span class="line">        PageRequest pageRequest = PageRequest.of(page, size);</span><br><span class="line">        <span class="keyword">return</span> userInfoRepository.findAll(pageRequest);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        UserInfo user = userInfoRepository.save(userInfo);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"findById/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">findById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfoRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(userInfoRepository.save(userInfo) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            UserInfo userInfo = <span class="keyword">new</span> UserInfo();</span><br><span class="line">            userInfo.setId(id);</span><br><span class="line">            userInfoRepository.delete(userInfo);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>配置类CorsConfig: 解决跨域问题</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> * 解决跨域的问题</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">                .allowedMethods(<span class="string">"GET"</span>, <span class="string">"HEAD"</span>, <span class="string">"POST"</span>, <span class="string">"PUT"</span>, <span class="string">"DELETE"</span>, <span class="string">"OPTIONS"</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>pom.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Vue实战</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>SpringBoot</tag>
        <tag>Element Ui</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue学习笔记</title>
    <url>/2020/02/09/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>系统学习前端Vue框架，笔记记录于B站的why老师，具体视频<a href="https://www.bilibili.com/video/av89760569" target="_blank" rel="noopener">链接如下</a>,在此感谢老师的悉心授课</p>
<h2 id="初始化Vue"><a href="#初始化Vue" class="headerlink" title="初始化Vue"></a>初始化Vue</h2><h3 id="初始Vue"><a href="#初始Vue" class="headerlink" title="初始Vue"></a>初始Vue</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"../js/vue.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div id="hi"&gt;Hello &#123;&#123;name&#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"movie"</span>&gt;</span><br><span class="line">      &lt;ul&gt;</span><br><span class="line">          &lt;li v-<span class="keyword">for</span>=<span class="string">"item in movies"</span>&gt;</span><br><span class="line">              &#123;&#123;item&#125;&#125;</span><br><span class="line">          &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/u</span>l&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script&gt;</span></span><br><span class="line"><span class="regexp">      const hi = new Vue(&#123;</span></span><br><span class="line"><span class="regexp">          el: "#hi",</span></span><br><span class="line"><span class="regexp">          data: &#123;</span></span><br><span class="line"><span class="regexp">              name: 'Vue.js'</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      let movie = new Vue(&#123;</span></span><br><span class="line"><span class="regexp">          el: '.movie',</span></span><br><span class="line"><span class="regexp">          data: &#123;</span></span><br><span class="line"><span class="regexp">              movies: ["星际穿越", '大话西游', '海贼王之黄金城', '复仇者联盟']</span></span><br><span class="line"><span class="regexp">              /</span><span class="regexp">/ 注意：可以通过movie.movies.push('盗梦空间')</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">  &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="简易计数器"><a href="#简易计数器" class="headerlink" title="简易计数器"></a>简易计数器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- view --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"count"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button v-on:click="counter++"&gt;+&lt;/button&gt;</span></span><br><span class="line"><span class="comment">    &lt;button v-on:click="counter--"&gt;-&lt;/button&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>原因是你的body中的div中没有设置id，vue没有绑定<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>解决：body中加 div id="app" <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>双向绑定：view，model，ViewModel<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// proxy: model</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line">        counter: 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> count = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">"#count"</span>,</span></span><br><span class="line">        data: obj,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            add: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.counter++;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            sub: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.counter--;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Vue中的MVVM"><a href="#Vue中的MVVM" class="headerlink" title="Vue中的MVVM"></a>Vue中的MVVM</h3><p><strong>MVVM简介</strong><br>&emsp;&emsp;MVVM 是Model-View-ViewModel 的缩写，它是一种基于前端开发的架构模式，其核心是提供对View 和 ViewModel 的双向数据绑定，这使得ViewModel 的状态改变可以自动传递给 View，即所谓的数据双向绑定。<br>&emsp;&emsp;Vue.js 是一个提供了 MVVM 风格的双向数据绑定的 Javascript 库，专注于View 层。它的核心是 MVVM 中的 VM，也就是 ViewModel。 ViewModel负责连接 View 和 Model，保证视图和数据的一致性，这种轻量级的架构让前端开发更加高效、便捷。</p>
<p><strong>MVVM模型</strong><br><img src="https://img-blog.csdnimg.cn/20200209183429664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>MVVM拆开来即为Model-View-ViewModel，有View，ViewModel，Model三部分组成。</p>
<ul>
<li>View层:是视图、模版，负责将数据模型转化为UI展现出来。</li>
<li>Model层:是模型、数据，可以在Model层中定义数据修改和操作的业务逻辑。</li>
<li>ViewModel层:View层和Model层并没有直接联系，而是通过ViewModel层进行交互。ViewModel层通过双向数据绑定将View层和Model层连接了起来，使得View层和Model层的同步工作完全是自动的。</li>
</ul>
<p><strong>Vue.js中mvvm的体现</strong><br>&emsp;&emsp;Vue.js的实现方式，对数据（Model）进行劫持，当数据变动时，数据会出发劫持时绑定的方法，对视图进行更新。<br><img src="https://img-blog.csdnimg.cn/20200209183757872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>实例分析如下：<br><img src="https://img-blog.csdnimg.cn/20200209184419710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><strong>Vue.js关于双向数据绑定的一些实现细节</strong></p>
<p>&emsp;&emsp;vue是采用Object.defineProperty的getter和setter，并结合观察者模式来实现数据绑定的。当把一个普通的javascript对象传给Vue实例来作为它的data选项时，Vue将遍历它的属性，用Object.defineProperty将它们转为getter/setter。用户看不到getter/setter，但是在内部它们让Vue追踪依赖。在属性被访问和修改时通知变化。<br><img src="https://img-blog.csdnimg.cn/20200209184625254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<ul>
<li>Observer相当于Model层观察vue实例中的data数据，当数据发生变化时，通知Watcher订阅者。</li>
<li>Compile指令解析器位于View层，初始化View的视图，将数据变化与更新函数绑定，传给Watcher订阅者。</li>
<li>Watcher是整个模型的核心，对应ViewModel层，连接Observer和Compile。所有的Watchers存于Dep订阅器中，Watcher将Observer监听到的数据变化对应相应的回调函数，处理数据，反馈给View层更新界面视图。</li>
<li>Dep消息订阅器，内部维护了一个数组，用来收集订阅者（watcher）,数据变动触发notify函数，再调用订阅者的update方法。</li>
</ul>
<h3 id="基本模板语法"><a href="#基本模板语法" class="headerlink" title="基本模板语法"></a>基本模板语法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line">      display: none !important;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 让未被编译的重新编译加载 </span></span><br><span class="line"><span class="comment">    Vue加入了延缓响应的指令v-cloak,在与css:[v-cloak] &#123; display: none &#125; 的配合下，</span></span><br><span class="line"><span class="comment">    可以隐藏未编译 Mustache 的标签直到实例准备完毕，v-cloak属性才会被自动去除，对应的标签也才可见了</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span> &gt;</span>Hello &#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        count: <span class="string">'v-cloak'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;,</span><br><span class="line">      beforeMount () &#123;</span><br><span class="line"><span class="actionscript">        alert(<span class="string">"有趣"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="动态绑定属性"><a href="#动态绑定属性" class="headerlink" title="动态绑定属性"></a>动态绑定属性</h2><h3 id="class的绑定"><a href="#class的绑定" class="headerlink" title="class的绑定"></a>class的绑定</h3><p><strong>传给 <code>v-bind:class</code> 一个对象，以动态地切换 class(语法糖：’:表示’)</strong></p>
<blockquote>
<p>根据isActive的true,false变化，动态绑定单个class</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"&#123; active: isActive==true &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>计算属性的方式绑定class</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div :<span class="class"><span class="keyword">class</span></span>=<span class="string">"classObject"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">data: &#123;</span></span><br><span class="line"><span class="regexp">  isActive: true,</span></span><br><span class="line"><span class="regexp">  error: null</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br><span class="line"><span class="regexp">computed: &#123;</span></span><br><span class="line"><span class="regexp">  classObject: function () &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      active: this.isActive &amp;&amp; !this.error,	/</span><span class="regexp">/isActive为true，且error不为null</span></span><br><span class="line"><span class="regexp">      'text-danger': this.error &amp;&amp; this.error.type === 'fatal'</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/error为null且this.error.type === 'fatal'</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>数组的方式绑定class</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div v-bind:<span class="class"><span class="keyword">class</span></span>=<span class="string">"[activeClass, errorClass]"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">data: &#123;</span></span><br><span class="line"><span class="regexp">  activeClass: 'active',</span></span><br><span class="line"><span class="regexp">  errorClass: 'text-danger'</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">渲染为：</span></span><br><span class="line"><span class="regexp">&lt;div class="active text-danger"&gt;&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<p><strong>三元表达式动态切换class(推荐)</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"[isActive ? activeClass : '', errorClass]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="style的绑定"><a href="#style的绑定" class="headerlink" title="style的绑定"></a>style的绑定</h3><p>v-bind:style 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。CSS 属性名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用单引号括起来) 来命名：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">"&#123; color: activeColor, fontSize: fontSize + 'px' &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">data: &#123;</span><br><span class="line">  activeColor: 'red',</span><br><span class="line">  fontSize: 30</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接绑定到一个样式对象通常更好，这会让模板更清晰：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">"styleObject"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">data: &#123;</span><br><span class="line">  styleObject: &#123;</span><br><span class="line">    color: 'red',</span><br><span class="line">    fontSize: '13px'</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>v-bind:style 的数组语法可以将多个样式对象应用到同一个元素上：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">"[baseStyles, overridingStyles]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        fisrtName: <span class="string">'Lom'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'Name'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      computed: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// fullName: function()&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     return this.fisrtName + ' ' + this.lastName;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// fullName: &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   get: function () &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     return this.fisrtName + ' ' + this.lastName;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 底层方法</span></span></span><br><span class="line">        fullName: &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span> <span class="params">(newValue)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"---------"</span>, newValue);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//split() 方法用于把一个字符串分割成字符串数组。</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> value = newValue.split(<span class="string">' '</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.fisrtName = value[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.lastName = value[<span class="number">1</span>];</span></span><br><span class="line">          &#125;,</span><br><span class="line"><span class="actionscript">          <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="keyword">this</span>.fisrtName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="计算属性和methods的对比"><a href="#计算属性和methods的对比" class="headerlink" title="计算属性和methods的对比"></a>计算属性和methods的对比</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. 通过字符串直接拼接,不美观 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;fisrtName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2. 通过方法：调用方法一次就重新执行一次 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 通过计算属性：执行一次后，会将此缓存起来，后面在调用会直接有结果显示，不会频繁调用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        fisrtName: <span class="string">'Lom'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'Name'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"><span class="actionscript">        getFullName: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"fullName"</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.fisrtName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      computed: &#123;</span><br><span class="line">        fullName: &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"fullName"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="keyword">this</span>.fisrtName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><h3 id="v-on的基本使用"><a href="#v-on的基本使用" class="headerlink" title="v-on的基本使用"></a>v-on的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- v-on语法糖使用：@ --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不需要传参数，故函数的双括号可以省略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"decrement()"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                counter: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                increment()&#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.counter++</span></span><br><span class="line">                &#125;,</span><br><span class="line">                decrement()&#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.counter--</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-on的参数问题"><a href="#v-on的参数问题" class="headerlink" title="v-on的参数问题"></a>v-on的参数问题</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不需要传参数，故函数的双括号可以省略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn0Click"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不传参数，会显示event对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn1Click()"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 带括号传参数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn2Click(value)"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义方法时，我们既需要传参数，又需要获取到event对象，可以通过$event获得event对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn3Click(value, $event)"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                value: 13</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                btn0Click() &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"btn1Click"</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line">                btn1Click() &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"======"</span>, event);</span></span><br><span class="line">                &#125;,</span><br><span class="line">                btn2Click(value) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"------"</span>, value);</span></span><br><span class="line">                &#125;,</span><br><span class="line">                btn3Click(value, event) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"+++++"</span>, value, event);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-on的修饰符"><a href="#v-on的修饰符" class="headerlink" title="v-on的修饰符"></a>v-on的修饰符</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. .stop修饰符的使用：阻止单击事件继续传播给后续定义的函数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"divClick"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">"btnClick"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 2. .prevent修饰符的使用：阻止事件的自带默认行为， --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> @<span class="attr">click.prevent</span>=<span class="string">"submitClick"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 3. .keyup修饰符的使用：当键盘被释放时触发事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup</span>=<span class="string">"keyup"</span>&gt;</span>松开<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> @<span class="attr">click.keyup</span>=<span class="string">"keyup"</span>&gt;</span>鼠标点击松开<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. .enter修饰符的使用：当键盘按下回车键触发事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.enter</span>=<span class="string">"enter"</span>&gt;</span>回车<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 4. .once修饰符的使用: 只能触发一次回调 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">"once"</span>&gt;</span>只能点击一次<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"btnClick"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        divClick()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"divClick"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        submitClick()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"submitClick"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        keyup()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"keyup"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        enter()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"enter"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        once()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"once"</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><h3 id="v-if的基本使用"><a href="#v-if的基本使用" class="headerlink" title="v-if的基本使用"></a>v-if的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 从控制台输入 app.isShow = false就可以将其隐藏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'哈哈'</span>,</span></span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-if和v-else的使用"><a href="#v-if和v-else的使用" class="headerlink" title="v-if和v-else的使用"></a>v-if和v-else的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 从控制台输入 app.isShow = false就可以将其隐藏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>当v-if为false的时候，我就开始显示了,我和v-if要紧连着使用<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'哈哈'</span>,</span></span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-if和v-else-if和v-else的使用"><a href="#v-if和v-else-if和v-else的使用" class="headerlink" title="v-if和v-else-if和v-else的使用"></a>v-if和v-else-if和v-else的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"score &gt;= 90"</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">"score &gt;= 80"</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">"score &gt;= 60"</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>不及格<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        score: 99</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="用户登录切换的案例"><a href="#用户登录切换的案例" class="headerlink" title="用户登录切换的案例"></a>用户登录切换的案例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"isShowUserName"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"userName"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userName"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>用户邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户邮箱"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"isShowUser"</span>&gt;</span>切换类型1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"isShowUserName = !isShowUserName"</span>&gt;</span>切换类型2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShowUserName: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        isShowUser() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.isShowUserName = !<span class="keyword">this</span>.isShowUserName</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="用户登录切换的案例-复用的小问题"><a href="#用户登录切换的案例-复用的小问题" class="headerlink" title="用户登录切换的案例(复用的小问题)"></a>用户登录切换的案例(复用的小问题)</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      注意：Vue在进行DOM渲染时，出于性能考虑，会尽可能的复用先前的input框，而不是重新创建元素</span></span><br><span class="line"><span class="comment">      如若我们不需要复用input框，只需要添加一个 key就好，相同的key值才会复用</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"isShowUserName"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- label中的for指向input后，点击label可以将光标聚焦给input框 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"userName"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userName"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">key</span>=<span class="string">"userName"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>用户邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户邮箱"</span> <span class="attr">key</span>=<span class="string">"userName"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"isShowUser"</span>&gt;</span>切换类型1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShowUserName: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        isShowUser() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.isShowUserName = !<span class="keyword">this</span>.isShowUserName,</span></span><br><span class="line"><span class="actionscript">          <span class="comment">//第二种方式：使用js将input框值清空</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">"userName"</span>).value = <span class="string">''</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">"email"</span>).value = <span class="string">''</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-show的使用"><a href="#v-show的使用" class="headerlink" title="v-show的使用"></a>v-show的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      v-if 和 v-show的区别：</span></span><br><span class="line"><span class="comment">      v-if为false的时候，压根不会存在dom里面，</span></span><br><span class="line"><span class="comment">      v-show为false的时候，只是会增加个行内样式：display：none；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      建议：</span></span><br><span class="line"><span class="comment">      如果需要频繁切换的时候，使用v-show，</span></span><br><span class="line"><span class="comment">      只有一次切换时通常使用v-if</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span> <span class="attr">id</span>=<span class="string">"isShow"</span>&gt;</span>V-if<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span> <span class="attr">id</span>=<span class="string">"VShow"</span>&gt;</span>V-show<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h2><h3 id="v-for遍历数组"><a href="#v-for遍历数组" class="headerlink" title="v-for遍历数组"></a>v-for遍历数组</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.简单遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in movies"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.带索引遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in movies"</span>&gt;</span>&#123;&#123;index + 1&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.带索引遍历数组，且添加监听事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in movies"</span> @<span class="attr">click</span>=<span class="string">"showIndex(index)"</span>&gt;</span>&#123;&#123;index + 1&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'大话西游'</span>, <span class="string">'星际争霸'</span>, <span class="string">'三傻大闹宝莱坞'</span>]</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        showIndex(index) &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'第'</span> + (index + <span class="number">1</span>) + <span class="string">'个值'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-for遍历对象"><a href="#v-for遍历对象" class="headerlink" title="v-for遍历对象"></a>v-for遍历对象</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.在遍历对象的过程中，如果只是获得一个值，那么获取到的就是整个对象的value值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in obj"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.在遍历对象的同时附带格式：value和key (value, key) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, key) in obj"</span>&gt;</span>&#123;&#123;item&#125;&#125;--&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.在遍历对象的同时附带格式：value和key和index (value, key, index) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(value, key, index) in obj"</span>&gt;</span>&#123;&#123;value&#125;&#125;--&#123;&#123;key&#125;&#125;--&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        obj: &#123;</span><br><span class="line">          id: 12,</span><br><span class="line"><span class="actionscript">          name: <span class="string">'Luck'</span>,</span></span><br><span class="line">          height: 1.78</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-for使用过程添加key"><a href="#v-for使用过程添加key" class="headerlink" title="v-for使用过程添加key"></a>v-for使用过程添加key</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。</span></span><br><span class="line"><span class="comment">    1.app.obj.splice(4) 去除数组第五个值</span></span><br><span class="line"><span class="comment">    2.app.obj.splice(3,0,'F') 在数组第四个值的时候添加F</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 不添加key属性: 在数组中间插入数据，需要将插入位置后面的值都后移，效率慢 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 添加key属性：类似于链表一样，我插入中间只需要将两端值的指向指给我，效率高--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in obj"</span> <span class="attr">:key</span>=<span class="string">"item"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        obj: [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>]</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="那些数组的方法是响应式的"><a href="#那些数组的方法是响应式的" class="headerlink" title="那些数组的方法是响应式的"></a>那些数组的方法是响应式的</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in obj"</span> <span class="attr">:key</span>=<span class="string">"item"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        obj: [<span class="string">'R'</span>, <span class="string">'C'</span>, <span class="string">'B'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>],</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick() &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">//1.push()方法</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.push('F')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//2.pop()方法，从末尾依次删除</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.pop()</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//3.shift()方法，从头开始依次删除</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.shift()</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//4.unshift()，从头开始依次添加元素</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.unshift('G','L')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//5.splice()，方法向/从数组中添加/删除/替换元素，然后返回被删除的项目。</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//this.obj.splice(4) //去除数组第五个值</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//6.sort()，对数组的元素进行排序</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.sort()</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//7.reverse()，对数组进行反转</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.reverse()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">          <span class="comment">//注意：通过索引值修改数组中的元素方法，不可取，vue不会帮我渲染修改后的值</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj[0] = 'M'</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//解决方法：</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//删除第五个</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.splice(3, 4, 'N')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//①：在第三个位置修改成 N</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.splice(2, 1, 'N')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//②：建议：Vue自带的修改方法</span></span></span><br><span class="line"><span class="actionscript">          Vue.set(<span class="keyword">this</span>.obj, <span class="number">2</span>, <span class="string">'G'</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="对遍历出的列表，点击后对应的能变红"><a href="#对遍历出的列表，点击后对应的能变红" class="headerlink" title="对遍历出的列表，点击后对应的能变红"></a>对遍历出的列表，点击后对应的能变红</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 对遍历出来的结果列表，我能实现点击列表对应的值，能让它变成红色 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in obj"</span> <span class="attr">:key</span>=<span class="string">"item"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:class</span>=<span class="string">"&#123;active: currentIndex === index&#125;"</span> @<span class="attr">click</span>=<span class="string">"changeColor(index)"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        obj: [<span class="string">'R'</span>, <span class="string">'C'</span>, <span class="string">'B'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>],</span></span><br><span class="line">        currentIndex: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        changeColor(index) &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.currentIndex = index;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="书籍购物车案例"><a href="#书籍购物车案例" class="headerlink" title="书籍购物车案例"></a>书籍购物车案例</h2><h3 id="此案例包含JavaScript的高阶函数用法"><a href="#此案例包含JavaScript的高阶函数用法" class="headerlink" title="此案例包含JavaScript的高阶函数用法"></a>此案例包含JavaScript的高阶函数用法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// javascript的高阶函数：</span></span><br><span class="line"><span class="keyword">const</span> nums = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编程式范式：命令式编程/声明式编程</span></span><br><span class="line"><span class="comment">// 编程式编程（第一公民：对象），函数式编程（第一公民：函数）</span></span><br><span class="line"><span class="comment">// filter/map/reduce高阶函数</span></span><br><span class="line"><span class="comment">// ①：</span></span><br><span class="line"><span class="comment">// filter高阶函数的使用: 它的回调函数有一个要求，必须返回一个boolean值</span></span><br><span class="line"><span class="comment">// true：当返回true时，函数内部会自动将这次回调的n加入到新的数组中去</span></span><br><span class="line"><span class="comment">// false：当返回false时，函数内部会过滤掉这次的 n</span></span><br><span class="line"><span class="keyword">let</span> newNum1 = nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n &lt; <span class="number">100</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'newNum1==filter=='</span> + newNum1);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ②：</span></span><br><span class="line"><span class="comment">// map高阶函数的使用</span></span><br><span class="line"><span class="keyword">let</span> newNum2 = newNum1.map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n * <span class="number">2</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'newNum2==map=='</span> + newNum2);</span><br><span class="line"><span class="keyword">let</span> newNum21 = nums.map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 判断条件无效，输出结果与上面一样，看来还是需要filter来过滤</span></span><br><span class="line">  <span class="keyword">if</span> (n &lt; <span class="number">80</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> n * <span class="number">2</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'newNum21==map=='</span> + newNum21);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ③：</span></span><br><span class="line"><span class="comment">//6.reduce高阶函数的使用: 对数组中的所有数据进行汇总（相加，相乘......）</span></span><br><span class="line"><span class="keyword">let</span> total = newNum2.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> preValue + value;</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'total==='</span> + total);</span><br><span class="line"><span class="comment">// 长度为 5</span></span><br><span class="line"><span class="comment">//         preValue   value</span></span><br><span class="line"><span class="comment">//第一次：    0         20</span></span><br><span class="line"><span class="comment">//第二次：    20        40</span></span><br><span class="line"><span class="comment">//第三次：    60        60</span></span><br><span class="line"><span class="comment">//第四次：    120       80</span></span><br><span class="line"><span class="comment">//第五次：    200       100</span></span><br><span class="line"><span class="comment">//输出        300</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//④：将上面三个函数综合起来使用：</span></span><br><span class="line"><span class="keyword">let</span> sum = nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n &lt; <span class="number">50</span></span><br><span class="line">&#125;).map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n * <span class="number">2</span></span><br><span class="line">&#125;).reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> preValue + value</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'sum==='</span> + sum);</span><br><span class="line"></span><br><span class="line"><span class="comment">//⑤：使用箭头函数将上面三个函数综合起来使用（类似lombda表达式）</span></span><br><span class="line"><span class="keyword">let</span> sum1 = nums.filter(<span class="function"><span class="params">n</span> =&gt;</span> n &lt; <span class="number">50</span>).map(<span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>).reduce(<span class="function">(<span class="params">pre, value</span>) =&gt;</span> pre + value);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'sum1==='</span> + sum1);</span><br></pre></td></tr></table></figure>

<h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"isFull"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>书名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>出版日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in books"</span> <span class="attr">:class</span>=<span class="string">"&#123;changeColor: number == 1&#125;"</span> @<span class="attr">mouseenter</span>=<span class="string">"change(index)"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">mouseleave</span>=<span class="string">"remove(index)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用函数：&lt;td&gt;&#123;&#123;getfinalPrice(item.price)&#125;&#125;&lt;/td&gt; --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用过滤器： --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price | showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"subBtn(index)"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              &#123;&#123;item.count&#125;&#125;</span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"addBtn(index)"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-if</span>=<span class="string">"exchange"</span> @<span class="attr">click</span>=<span class="string">"addItemBtn(index)"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-else</span> @<span class="attr">click</span>=<span class="string">"removeBtn(index)"</span>&gt;</span>移除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"changeType()"</span>&gt;</span>切换类型<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价格：&#123;&#123;showTotalPrice | showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>购物车清空<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"main.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    books: [&#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        name: <span class="string">'算法导论'</span>,</span><br><span class="line">        date: <span class="string">'2019-2'</span>,</span><br><span class="line">        price: <span class="number">87.21</span>,</span><br><span class="line">        count: <span class="number">1</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">2</span>,</span><br><span class="line">        name: <span class="string">'UNIX编程艺术'</span>,</span><br><span class="line">        date: <span class="string">'2019-4'</span>,</span><br><span class="line">        price: <span class="number">97.21</span>,</span><br><span class="line">        count: <span class="number">2</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">3</span>,</span><br><span class="line">        name: <span class="string">'编程珠玑'</span>,</span><br><span class="line">        date: <span class="string">'2012-2'</span>,</span><br><span class="line">        price: <span class="number">77.21</span>,</span><br><span class="line">        count: <span class="number">1</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">4</span>,</span><br><span class="line">        name: <span class="string">'大话西游'</span>,</span><br><span class="line">        date: <span class="string">'2019-7'</span>,</span><br><span class="line">        price: <span class="number">100</span>,</span><br><span class="line">        count: <span class="number">1</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    number: <span class="number">2</span>,</span><br><span class="line">    exchange: <span class="literal">false</span>,</span><br><span class="line">    isFull: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    showTotalPrice() &#123;</span><br><span class="line">      <span class="keyword">let</span> totalPrice = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">//1.普通for循环</span></span><br><span class="line">      <span class="comment">// for (let i = 0; i &lt; this.books.length; i++) &#123;</span></span><br><span class="line">      <span class="comment">//   totalPrice += this.books[i].price * this.books[i].count</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">// return totalPrice</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//2.index是索引</span></span><br><span class="line">      <span class="comment">// for (let index in this.books) &#123;</span></span><br><span class="line">      <span class="comment">//   totalPrice += this.books[index].price * this.books[index].count</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//3.for of</span></span><br><span class="line">      <span class="comment">// for (let item of this.books) &#123;</span></span><br><span class="line">      <span class="comment">//   totalPrice += item.price * item.count</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//4.利用reduce函数来写</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.books.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, book</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> preValue + book.price * book.count</span><br><span class="line">      &#125;, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> totalPrice</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">// 行内按钮操作</span></span><br><span class="line">    subBtn(index) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.books[index].count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.books[index].count--</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    addBtn(index) &#123;</span><br><span class="line">      <span class="keyword">this</span>.books[index].count++</span><br><span class="line">    &#125;,</span><br><span class="line">    removeBtn(index) &#123;</span><br><span class="line">      <span class="keyword">this</span>.books.splice(index, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.books.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.isFull = !<span class="keyword">this</span>.isFull</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 鼠标移动进区域，改变背景颜色</span></span><br><span class="line">    change(index) &#123;</span><br><span class="line">      <span class="comment">// this</span></span><br><span class="line">      <span class="keyword">this</span>.number = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">this</span>.active = <span class="string">".changeColor&#123; background-color: #cae6e6&#125;"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    remove(index) &#123;</span><br><span class="line">      <span class="keyword">this</span>.number = <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 改变按钮类型</span></span><br><span class="line">    changeType() &#123;</span><br><span class="line">      <span class="keyword">this</span>.exchange = !<span class="keyword">this</span>.exchange</span><br><span class="line">    &#125;,</span><br><span class="line">    addItemBtn() &#123;</span><br><span class="line">      <span class="keyword">const</span> obj = [<span class="number">5</span>, <span class="string">'数值分析'</span>, <span class="string">'2018-8'</span>, <span class="number">96.10</span>, <span class="number">2</span>];</span><br><span class="line">      <span class="keyword">this</span>.books.push(obj)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 格式化价格</span></span><br><span class="line">    getfinalPrice(price) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">'￥'</span> + price.toFixed(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  filters: &#123;</span><br><span class="line">    showPrice(price) &#123;</span><br><span class="line">      <span class="comment">//.toFixed(2)：保留小数点后两位</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">'￥'</span> + price.toFixed(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="comment">/* 消除表格的边框内距 */</span></span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">  <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">thead</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* table tr:hover &#123;</span></span><br><span class="line"><span class="comment">  background-color: pink;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tr</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.changeColor</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cae6e6</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="v-model的使用"><a href="#v-model的使用" class="headerlink" title="v-model的使用"></a>v-model的使用</h2><h3 id="v-model双向绑定的基本原理"><a href="#v-model双向绑定的基本原理" class="headerlink" title="v-model双向绑定的基本原理"></a>v-model双向绑定的基本原理</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model的基本使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span>&#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model的原理： --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 监听input内容改变事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-on:input</span>=<span class="string">"changeInput($event)"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">input</span>=<span class="string">"changeInput"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此方法：input中会直接有message的值 , 其中target是事件源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-bind:value</span>=<span class="string">"message"</span> <span class="attr">v-on:input</span>=<span class="string">"message = $event.target.value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"message"</span> @<span class="attr">input</span>=<span class="string">"message = $event.target.value"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'你好呀'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        changeInput(event) &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.message = event.target.value;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合radio单选框使用"><a href="#v-model结合radio单选框使用" class="headerlink" title="v-model结合radio单选框使用"></a>v-model结合radio单选框使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name要一致，不然选择一个单选框，再选择另一个，之前那个还是被选中状态 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"女"</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;'你选中的值:' + message&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">''</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合checkbox多选框使用"><a href="#v-model结合checkbox多选框使用" class="headerlink" title="v-model结合checkbox多选框使用"></a>v-model结合checkbox多选框使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 单个多选框: 同意协议示范 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"agreeLisence"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"isAgree"</span>&gt;</span>统一协议</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">"!isAgree"</span>&gt;</span>下一步<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多个多选框：爱好 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"唱"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>唱</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"跳"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>跳</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"rap"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>rap</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"打篮球"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>打篮球</span><br><span class="line">    你选择的兴趣爱好是：&#123;&#123;hobbies&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isAgree: <span class="literal">false</span>, <span class="comment">//单选框</span></span></span><br><span class="line"><span class="actionscript">        hobbies: [] <span class="comment">//多选框</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合select下拉框使用"><a href="#v-model结合select下拉框使用" class="headerlink" title="v-model结合select下拉框使用"></a>v-model结合select下拉框使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 下拉框的单个使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"demo"</span> <span class="attr">v-model</span>=<span class="string">"fruit"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"香蕉"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"苹果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"葡萄"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"梨子"</span>&gt;</span>梨子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你选择的水果是：&#123;&#123;fruit&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 下拉框的多个选中使用: 注意添加multiple，然后选择多个需要按住ctrl键 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"demo"</span> <span class="attr">v-model</span>=<span class="string">"fruits"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"香蕉"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"苹果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"葡萄"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"梨子"</span>&gt;</span>梨子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你选择的水果是：&#123;&#123;fruits&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        fruit: <span class="string">'香蕉'</span>,</span></span><br><span class="line">        fruits: []</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合v-for使用"><a href="#v-model结合v-for使用" class="headerlink" title="v-model结合v-for使用"></a>v-model结合v-for使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 单个多选框: 同意协议示范 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in originalHobbies"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 如果绑定originalHobbies，点击下对应的多选框就会消失 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span> <span class="attr">:id</span>=<span class="string">"index+1"</span> <span class="attr">:value</span>=<span class="string">"item"</span>&gt;</span>&#123;&#123;item&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    你选择的兴趣爱好是：&#123;&#123;hobbies&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isAgree: <span class="literal">false</span>, <span class="comment">//单选框</span></span></span><br><span class="line"><span class="actionscript">        hobbies: [], <span class="comment">//多选框</span></span></span><br><span class="line"><span class="actionscript">        originalHobbies: [<span class="string">'唱'</span>, <span class="string">'跳'</span>, <span class="string">'rap'</span>, <span class="string">'打篮球'</span>]</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model的修饰符使用"><a href="#v-model的修饰符使用" class="headerlink" title="v-model的修饰符使用"></a>v-model的修饰符使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.lazy修饰符: 懒加载，可以让数据被按下回车失去焦点后才会更新 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.lazy</span>=<span class="string">"message"</span>&gt;</span>&#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.number修饰符：可以将 只能输入数字 的类型转换成String --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model</span>=<span class="string">"age"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;age&#125;&#125;--&#123;&#123;typeof age&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果不想转换成String类型，只要添加 .number --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model.number</span>=<span class="string">"height"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;height&#125;&#125;--&#123;&#123;typeof height&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.去掉两端的空格 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.trim</span>=<span class="string">"name"</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 添加多个修饰符只需叠加后面就行，无先后顺序要求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model.lazy.number</span>=<span class="string">"height"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'你好呀'</span>,</span></span><br><span class="line">        age: 0,</span><br><span class="line">        height: 1,</span><br><span class="line"><span class="actionscript">        name: <span class="string">''</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="组件化开发"><a href="#组件化开发" class="headerlink" title="组件化开发"></a>组件化开发</h2><h3 id="组件化的基本使用"><a href="#组件化的基本使用" class="headerlink" title="组件化的基本使用"></a>组件化的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 创建组件构造器</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC = Vue.extend(&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ES6语法：` 号可以支持内容里面换行比 ''更好使用</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//如果有多个标签使用,必须有个div包裹起来，否则内容显示不完全</span></span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>组件化<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'my-cpn'</span>, cpnC)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="全局组件和局部组件"><a href="#全局组件和局部组件" class="headerlink" title="全局组件和局部组件"></a>全局组件和局部组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC = Vue.extend(&#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>组件化<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, cpnC)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 注册局部组件，即只能在app里使用cpn这个组件</span></span></span><br><span class="line">        cpn: cpnC</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app2'</span>,</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="父组件和子组件"><a href="#父组件和子组件" class="headerlink" title="父组件和子组件"></a>父组件和子组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn2</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC = Vue.extend(&#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 父组件：root组件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC2 = Vue.extend(&#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>父组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 这个子组件需要先注册</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;<span class="name">cpn1</span>/&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn1: cpnC</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, cpnC)</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 注册局部组件，即只能在app里使用这个组件</span></span></span><br><span class="line">        cpn1: cpnC,</span><br><span class="line">        cpn2: cpnC2</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件的语法糖注册方式"><a href="#组件的语法糖注册方式" class="headerlink" title="组件的语法糖注册方式"></a>组件的语法糖注册方式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn2</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// const cpnC = Vue.extend()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 语法糖注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn1"</span>, &#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 语法糖注册局部组件，即只能在app里使用这个组件</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">'cpn2'</span>: &#123;</span></span><br><span class="line">          template: `</span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件模块的分离写法"><a href="#组件模块的分离写法" class="headerlink" title="组件模块的分离写法"></a>组件模块的分离写法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 1.使用script标签：注意类型需要添加：text/x-template --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-template"</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 2.使用template标签(推荐) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// const cpnC = Vue.extend()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 语法糖注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn1'</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件中的数据存放问题"><a href="#组件中的数据存放问题" class="headerlink" title="组件中的数据存放问题"></a>组件中的数据存放问题</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 想要获取title，必须在组件里面定义一个函数，且有返回值 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// const cpnC = Vue.extend()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 语法糖注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn1'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          title: <span class="string">'好好学习，天天向上'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 模板里的title不能获取到此值</span></span></span><br><span class="line"><span class="actionscript">        title: <span class="string">'好好学习，天天向上'</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件中的data为什么必须是函数"><a href="#组件中的data为什么必须是函数" class="headerlink" title="组件中的data为什么必须是函数"></a>组件中的data为什么必须是函数</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前计数：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"decrement"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前计数：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"decrement"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 推荐：count数据不会共享</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用data函数：不会引起连锁反应。即每个都是个新对象，值地址不一样，</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn1'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">          count: 0</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        increment() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count++</span></span><br><span class="line">        &#125;,</span><br><span class="line">        decrement() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count--</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// count数据共享</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 都是使用的这个obj常量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line">      count: 0</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn1"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn2'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> obj</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        increment() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count++</span></span><br><span class="line">        &#125;,</span><br><span class="line">        decrement() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count--</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父组件向子组件传递数据"><a href="#组件通信-父组件向子组件传递数据" class="headerlink" title="组件通信-父组件向子组件传递数据"></a>组件通信-父组件向子组件传递数据</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    &#123;&#123;movies.toString()&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加了前缀v-bind，vue会帮我们解析movies，不会当成字符串处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-bind:vmoives</span>=<span class="string">"movies"</span> <span class="attr">:vmessage</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当成字符串处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">vmoives</span>=<span class="string">"movies"</span> <span class="attr">vmessage</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;vmessage&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in vmoives"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line"><span class="actionscript">      props: [<span class="string">'vmoives'</span>, <span class="string">'vmessage'</span>], <span class="comment">//这种其实是表示变量名字，不能当成字符串</span></span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// Vue.component('cpn', cpn)</span></span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'海贼王'</span>, <span class="string">'航空母舰'</span>],</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'真香'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// ES6中的高阶写法，等同于 cpn: cpn</span></span></span><br><span class="line">        cpn</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-props用法详解"><a href="#组件通信-props用法详解" class="headerlink" title="组件通信-props用法详解"></a>组件通信-props用法详解</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    &#123;&#123;movies.toString()&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-bind:propF</span>=<span class="string">"movies"</span> <span class="attr">:propC</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;propC&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in propF"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">      props: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 基础的类型检查('null'匹配任何类型)</span></span></span><br><span class="line"><span class="javascript">        propA: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 多个可能的类型</span></span></span><br><span class="line"><span class="javascript">        propB: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 必填的字符串</span></span></span><br><span class="line">        propC: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="actionscript">          required: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="string">'你好呀'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的数字</span></span></span><br><span class="line">        propD: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="number">100</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 注意：类型是对象/数组时，默认值必须是一个函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propE: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              message: <span class="string">'hello'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propF: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'大话西游'</span>, <span class="string">'造梦西游'</span>]</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 自定义验证函数</span></span></span><br><span class="line">        propG: &#123;</span><br><span class="line"><span class="actionscript">          validator: <span class="function"><span class="keyword">function</span> <span class="params">(value)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 这个值必须匹配下列字符串的一个</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'success'</span>, <span class="string">'warning'</span>, <span class="string">'danger'</span>].indexOf(value) !== <span class="number">-1</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'海贼王'</span>, <span class="string">'航空母舰'</span>],</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'真香'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父传子-props不支持驼峰标识"><a href="#组件通信-父传子-props不支持驼峰标识" class="headerlink" title="组件通信-父传子(props不支持驼峰标识)"></a>组件通信-父传子(props不支持驼峰标识)</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-bind:prop-f</span>=<span class="string">"movies"</span> <span class="attr">v-bind:prop-g</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;propG&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in propF"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">      props: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propE: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              message: <span class="string">'hello'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propF: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'大话西游'</span>, <span class="string">'造梦西游'</span>]</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 自定义验证函数</span></span></span><br><span class="line">        propG: &#123;</span><br><span class="line"><span class="actionscript">          validator: <span class="function"><span class="keyword">function</span> <span class="params">(value)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 这个值必须匹配下列字符串的一个:如果要检索的字符串值没有出现，则该方法返回 -1。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log([<span class="string">'success'</span>, <span class="string">'warning'</span>, <span class="string">'danger'</span>].indexOf(value) !== <span class="number">-1</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 校验失败：Invalid prop: custom validator check failed for prop "propG".</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'success'</span>, <span class="string">'warning'</span>, <span class="string">'danger'</span>].indexOf(value) !== <span class="number">-1</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'海贼王'</span>, <span class="string">'航空母舰'</span>],</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'succe'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父子组件通信的案例"><a href="#组件通信-父子组件通信的案例" class="headerlink" title="组件通信-父子组件通信的案例"></a>组件通信-父子组件通信的案例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- cpnClick在父组件中定义的方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-on:item-click</span>=<span class="string">"cpnClick"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> @<span class="attr">item-click</span>=<span class="string">"cpnClick($event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in categories"</span> @<span class="attr">click</span>=<span class="string">"btnClick(item)"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /*步骤:</span><br><span class="line">    1.子组件:触发监听的事件,比如被点击了,</span><br><span class="line"><span class="actionscript">    <span class="number">2.</span>然后发送自定义事件<span class="keyword">this</span>.$emit(<span class="string">'cpn中的自定义事件名'</span>, item)</span></span><br><span class="line">    3.调用Vue中的事件监听函数,如若在html文件中,不饿能使用驼峰命名自定义函数</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="comment">// 子组件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">          categories: [</span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a1'</span>, name: <span class="string">'热门推荐'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a2'</span>, name: <span class="string">'手机数码'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a3'</span>, name: <span class="string">'家用家电'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a4'</span>, name: <span class="string">'电脑办公'</span>&#125;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick(item) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">//发射事件：自定义事件(父组件的cpn中接收此事件的名字)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// html不区分大小写,这里不能使用驼峰命名</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.$emit(<span class="string">'item-click'</span>, item)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">    // <span class="comment">&lt;!-- 父组件 --&gt;</span></span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        cpnClick(item) &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'cpnClick'</span>, item);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-数字游戏-1"><a href="#组件通信-数字游戏-1" class="headerlink" title="组件通信-数字游戏-1"></a>组件通信-数字游戏-1</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">:number1</span>=<span class="string">"num1"</span> <span class="attr">:number2</span>=<span class="string">"num2"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num1:&#123;&#123;dnum1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"dnum1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num2:&#123;&#123;dnum2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">v-model</span>=<span class="string">"dnum2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        num1: 0,</span><br><span class="line">        num2: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          props: &#123;</span><br><span class="line"><span class="javascript">            number1: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript">            number2: <span class="built_in">Number</span></span></span><br><span class="line">          &#125;,</span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">              /* </span><br><span class="line"><span class="actionscript">              Property or method <span class="string">"num2"</span> <span class="keyword">is</span> not defined on the instance but referenced during render.</span></span><br><span class="line"><span class="actionscript">              Make sure that <span class="keyword">this</span> property <span class="keyword">is</span> reactive, either <span class="keyword">in</span> the data option, </span></span><br><span class="line"><span class="actionscript">              or <span class="keyword">for</span> <span class="class"><span class="keyword">class</span>-<span class="title">based</span> <span class="title">components</span>, <span class="title">by</span> <span class="title">initializing</span> <span class="title">the</span> <span class="title">property</span></span></span></span><br><span class="line">              即需要添加data()&#123;&#125;</span><br><span class="line">              */</span><br><span class="line"><span class="actionscript">              dnum1: <span class="keyword">this</span>.number1,</span></span><br><span class="line"><span class="actionscript">              dnum2: <span class="keyword">this</span>.number2</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-数字游戏-2"><a href="#组件通信-数字游戏-2" class="headerlink" title="组件通信-数字游戏-2"></a>组件通信-数字游戏-2</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- number1的值来源与Vue中data的num1 但是在组件中取值要用&#123;&#123;number1&#125;&#125;，也就是props对应的值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">:number1</span>=<span class="string">"num1"</span> <span class="attr">:number2</span>=<span class="string">"num2"</span> @<span class="attr">change1props</span>=<span class="string">"change1props"</span> @<span class="attr">change2props</span>=<span class="string">"change2props"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.父组件接收传过来的自定义事件，Vue中的 "change2props"方法 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num1:&#123;&#123;dnum1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 这方式同 v-model: 监听input框，调用组件中的 changeInputValue1事件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"dnum1"</span> @<span class="attr">input</span>=<span class="string">"changeInputValue1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num2:&#123;&#123;dnum2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"dnum2"</span> @<span class="attr">input</span>=<span class="string">"changeInputValue2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        num1: 0,</span><br><span class="line">        num2: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          props: &#123;</span><br><span class="line"><span class="javascript">            number1: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript">            number2: <span class="built_in">Number</span></span></span><br><span class="line">          &#125;,</span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              dnum1: <span class="keyword">this</span>.number1,</span></span><br><span class="line"><span class="actionscript">              dnum2: <span class="keyword">this</span>.number2</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          methods: &#123;</span><br><span class="line">            changeInputValue1(event) &#123;</span><br><span class="line"><span class="actionscript">              <span class="comment">// 1.将input的值赋值到 dnum1 中去</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum1 = event.target.value;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">              <span class="comment">// 2.为了让父组件可以修改值，发送一个事件</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change1props'</span>, <span class="keyword">this</span>.dnum1)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">              <span class="comment">// 将下面输入框的props值: 变成1/2</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum2 = <span class="keyword">this</span>.dnum1 / <span class="number">2</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change2props'</span>, <span class="keyword">this</span>.dnum2)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            changeInputValue2() &#123;</span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum2 = event.target.value;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change2props'</span>, <span class="keyword">this</span>.dnum2)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">              <span class="comment">// 将上面输入框的props值: 变成2倍</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum1 = <span class="keyword">this</span>.dnum2 * <span class="number">2</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change1props'</span>, <span class="keyword">this</span>.dnum1)</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        change1props(value) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// 改变 prop 中的num1的值</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'dum1'</span> + value);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.num1 = <span class="built_in">parseFloat</span>(value);</span></span><br><span class="line">        &#125;,</span><br><span class="line">        change2props(value) &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'dum2'</span> + value);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.num2 = <span class="built_in">parseFloat</span>(value);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父访问子-children-refs"><a href="#组件通信-父访问子-children-refs" class="headerlink" title="组件通信-父访问子-children-refs"></a>组件通信-父访问子-children-refs</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">ref</span>=<span class="string">"refA"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      我是子组件</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'Lemon'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick() &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// 1. $.chlidren</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> <span class="keyword">this</span>.$children) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(item.name);</span></span><br><span class="line">            item.showMessage()</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">          <span class="comment">// 2. $.refs: 仅仅会调动带有refs标示的</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 这样有时候我们想即使在新增数据后，依旧能操控它</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'refs'</span> + <span class="keyword">this</span>.$refs.refA.name);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              name: <span class="string">'Lemon'</span>,</span></span><br><span class="line">              id: 1,</span><br><span class="line">              height: 1.78</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          methods: &#123;</span><br><span class="line">            showMessage() &#123;</span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="keyword">this</span>.id);</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-子访问父-parent-root"><a href="#组件通信-子访问父-parent-root" class="headerlink" title="组件通信-子访问父-parent-root"></a>组件通信-子访问父-parent-root</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ccpn</span>&gt;</span><span class="tag">&lt;/<span class="name">ccpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是cpn子组件<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- cpn的子组件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"ccpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是cpn的子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick"</span>&gt;</span>ccpn按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> ccpn = Vue.component(<span class="string">'ccpn'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">              template: <span class="string">'#ccpn'</span>,</span></span><br><span class="line">              methods: &#123;</span><br><span class="line">                btnClick() &#123;</span><br><span class="line"><span class="actionscript">                  <span class="comment">// 按理这个是cpn的子组件，this应该指ccpn对象，</span></span></span><br><span class="line"><span class="actionscript">                  <span class="comment">// 调用this.$parent时，访问的是ccpn的父组件cpn，即返回对象是vuecomponents</span></span></span><br><span class="line"><span class="actionscript">                  <span class="comment">// 调用this.$root时，访问的才应该是cpn的父组件，即返回对象是vue</span></span></span><br><span class="line"><span class="actionscript">                  <span class="comment">// 可是我放在cpn的components里说ccpn没有注册</span></span></span><br><span class="line"><span class="javascript">                  <span class="built_in">console</span>.log(<span class="string">'ccpn='</span>, <span class="keyword">this</span>.$root.message)</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'Lemon'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              name: <span class="string">'我是cpn的name'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          components: &#123;</span><br><span class="line">            ccpn</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="组件化高级"><a href="#组件化高级" class="headerlink" title="组件化高级"></a>组件化高级</h2><h3 id="slot-插槽的基本使用"><a href="#slot-插槽的基本使用" class="headerlink" title="slot-插槽的基本使用"></a>slot-插槽的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    1.插槽的基本使用：&lt;slot&gt;&lt;/slot&gt;</span></span><br><span class="line"><span class="comment">    2.插槽的默认值：&lt;slot&gt;传的元素/值：eg 哈哈哈&lt;/slot&gt;</span></span><br><span class="line"><span class="comment">    3.如果有多个值，同时被放入到组件中进行替换，会一起作为替换元素</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span>嘻嘻嘻<span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>组件化开发<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="slot-具名插槽的使用"><a href="#slot-具名插槽的使用" class="headerlink" title="slot-具名插槽的使用"></a>slot-具名插槽的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span>嘻嘻嘻<span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"right"</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"left"</span>&gt;</span>左边<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"center"</span>&gt;</span>中间<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"right"</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="什么是编译的作用域"><a href="#什么是编译的作用域" class="headerlink" title="什么是编译的作用域"></a>什么是编译的作用域</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 总结：</span></span><br><span class="line"><span class="comment">  父组件模板的所有东西都会在父级作用域内编译</span></span><br><span class="line"><span class="comment">  子组件模板的所有东西都会在子级作用域内编译 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这个里面的isShow会先从所在模板里面顺下去找，即从Vue里找寻，</span></span><br><span class="line"><span class="comment">    因此Vue中的data的isShow才能影响显示与否 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 这个里面的isShowCpn会先从所在模板里面顺下去找，即从cpn里找寻， --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-show</span>=<span class="string">"isShowCpn"</span>&gt;</span>我是哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              isShow: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">              isShowCpn: <span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="作用域插槽的准备"><a href="#作用域插槽的准备" class="headerlink" title="作用域插槽的准备"></a>作用域插槽的准备</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 作用域插槽：父组件替换插槽的标签，但是内容由子组件来提供 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line">      哈哈哈哈·</span><br><span class="line">      <span class="comment">&lt;!-- 目标获得子组件中的pLanguages --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot-scope</span>=<span class="string">"slot"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in slot.data"</span>&gt;</span>- &#123;&#123;item&#125;&#125; &#123;&#123;item&#125;&#125; - <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 目标获得子组件中的pLanguagesv-slot:todo todo指向slot中的name="todo" --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:todo</span>=<span class="string">"slotProps"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">          加join()：<span class="tag">&lt;<span class="name">span</span>&gt;</span>- &#123;&#123;slotProps.data.join(' - ')&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;slotProps.data&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- :名字="cpn中对应需要获取的值" --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:data</span>=<span class="string">"pLanguages"</span>  <span class="attr">name</span>=<span class="string">"todo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in pLanguages"</span>&gt;</span></span><br><span class="line">            &#123;&#123;item&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              pLanguages: [<span class="string">'Java'</span>, <span class="string">'C'</span>, <span class="string">'C++'</span>, <span class="string">'Python'</span>, <span class="string">'C#'</span>]</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="前端模块化"><a href="#前端模块化" class="headerlink" title="前端模块化"></a>前端模块化</h2><h3 id="ES模块化的实现"><a href="#ES模块化的实现" class="headerlink" title="ES模块化的实现"></a>ES模块化的实现</h3><p><strong>aaa.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'小红'</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(sum(<span class="number">200</span>, <span class="number">300</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  flag, sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>bbb.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'小红'</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var name = '小明'</span></span><br><span class="line"><span class="comment">// let age = 18</span></span><br><span class="line"><span class="comment">// var flag = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// function sum(num1, num2) &#123;</span></span><br><span class="line"><span class="comment">//   return num1 + num2</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if (flag) &#123;</span></span><br><span class="line"><span class="comment">//   console.log(sum(20, 30));</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// export &#123;</span></span><br><span class="line"><span class="comment">//   flag, sum</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>index.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 出现了跨域的问题，但是原理基本这样 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"aaa.js"</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bbb.js"</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"mmm.js"</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>mmm.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;flag&#125; <span class="keyword">from</span> <span class="string">"./aaa.js"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'小明是天才，哈哈哈哈'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="webpack使用"><a href="#webpack使用" class="headerlink" title="webpack使用"></a>webpack使用</h2><h3 id="webpack的起步"><a href="#webpack的起步" class="headerlink" title="webpack的起步"></a>webpack的起步</h3><p><strong>info.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">'why'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> height = <span class="number">1.78</span></span><br></pre></td></tr></table></figure>

<p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.使用commonjs的模块化规范</span></span><br><span class="line"><span class="keyword">const</span> &#123;add, mul&#125; = <span class="built_in">require</span>(<span class="string">'./mathUtils.js'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">20</span>, <span class="number">30</span>));</span><br><span class="line"><span class="built_in">console</span>.log(mul(<span class="number">25</span>, <span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.使用ES6的模块化的规范</span></span><br><span class="line"><span class="keyword">import</span> &#123;name, age, height&#125; <span class="keyword">from</span> <span class="string">"./info"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name);</span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br><span class="line"><span class="built_in">console</span>.log(height);</span><br></pre></td></tr></table></figure>

<p><strong>mathUtils.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 * num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  add,</span><br><span class="line">  mul</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>index.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    PS D:\Web_Study\vue.js学习&gt; cd  12-webpack使用\1-webpack的起步</span></span><br><span class="line"><span class="comment">    PS D:\Web_Study\vue.js学习\12-webpack使用\1-webpack的起步&gt; webpack ./src/main.js ./dist/bundle.js --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生成文件的位置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./dist/bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="webpack的配置"><a href="#webpack的配置" class="headerlink" title="webpack的配置"></a>webpack的配置</h3><p><strong>webpack.config.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// npm init; npm install</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/main.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">// 动态获取路径：resolve拼接地址</span></span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>package.json</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"meetwebpack"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"webpack.config.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"webpack"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^3.6.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="webpack配置loader和vue"><a href="#webpack配置loader和vue" class="headerlink" title="webpack配置loader和vue"></a>webpack配置loader和vue</h3><p><strong>webpack.config.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// npm init; npm install</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/main.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">// 动态获取路径：resolve拼接地址</span></span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    <span class="comment">// 可以显示加载后的图片</span></span><br><span class="line">    <span class="comment">// publicPath: '/dist'</span></span><br><span class="line">    publicPath: <span class="string">'dist/'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [&#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [&#123;</span><br><span class="line">          loader: <span class="string">"style-loader"</span> <span class="comment">// creates style nodes from JS strings</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          loader: <span class="string">"css-loader"</span> <span class="comment">// translates CSS into CommonJS</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          loader: <span class="string">"less-loader"</span> <span class="comment">// compiles Less to CSS</span></span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|gif)$/</span>,</span><br><span class="line">        use: [&#123;</span><br><span class="line">          loader: <span class="string">'url-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            <span class="comment">// 如果limit小于文件大小 * 1024，就会报错，Cannot find module 'file-loader'</span></span><br><span class="line">            <span class="comment">// 一般配置成8kb</span></span><br><span class="line">            limit: <span class="number">8192</span>,</span><br><span class="line">            name: <span class="string">'img/[name].[hash:8].[ext]'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        <span class="comment">// 排除</span></span><br><span class="line">        exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">        use: &#123;</span><br><span class="line">          loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            presets: [<span class="string">'es2015'</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><p><strong>index.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    webpack官网：https://www.webpackjs.com/loaders/babel-loader/</span></span><br><span class="line"><span class="comment">    重命名会让配置正确的出错，需要重新安装</span></span><br><span class="line"><span class="comment">    如若出现，ERROR in Entry module not found: Error: Can't resolve 'babel-loader' in 'D:\Web_Study\vue.js学习\12-webpack使用\4-webpack配置vue'</span></span><br><span class="line"><span class="comment">    请 cnpm install babel-loader@8.0.0-beta.0 @babel/core @babel/preset-env webpack</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    0. 动态获取webpack的dist配置路径</span></span><br><span class="line"><span class="comment">        //入口</span></span><br><span class="line"><span class="comment">        entry: './src/main.js',</span></span><br><span class="line"><span class="comment">        //输出</span></span><br><span class="line"><span class="comment">        output: &#123;</span></span><br><span class="line"><span class="comment">          // 动态获取路径：resolve拼接地址</span></span><br><span class="line"><span class="comment">          path: path.resolve(__dirname, 'dist'),</span></span><br><span class="line"><span class="comment">          filename: 'bundle.js',</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">    使用 cnpm run build 启动方式配值：</span></span><br><span class="line"><span class="comment">    1.安装本地webpack</span></span><br><span class="line"><span class="comment">    2.在package.json文件中的script添加 "build": "webpack"</span></span><br><span class="line"><span class="comment">    3.然后输入cnpm run build，就会在webpack.config.js中根据动态路径创建</span></span><br><span class="line"><span class="comment">    4.加载css文件：cnpm install --save-dev css-loader</span></span><br><span class="line"><span class="comment">    5.解析加载进去的css文件：cnpm install --save-dev style-loader</span></span><br><span class="line"><span class="comment">    6.在webpack.config.js中的module.exports = &#123;&#125;中添加</span></span><br><span class="line"><span class="comment">    module: &#123;</span></span><br><span class="line"><span class="comment">      rules: [</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">          test: /\.css$/i,</span></span><br><span class="line"><span class="comment">          use: ['style-loader', 'css-loader'],</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">      ],</span></span><br><span class="line"><span class="comment">    &#125;,</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    7.导入less文件，并转换成css文件：cnpm install --save-dev less-loader less</span></span><br><span class="line"><span class="comment">    8.在webpack.config.js中的module.exports = &#123;&#125;中添加</span></span><br><span class="line"><span class="comment">     module: &#123;</span></span><br><span class="line"><span class="comment">        rules: [&#123;</span></span><br><span class="line"><span class="comment">            test: /\.less$/,</span></span><br><span class="line"><span class="comment">            use: [&#123;</span></span><br><span class="line"><span class="comment">                loader: "style-loader" // creates style nodes from JS strings</span></span><br><span class="line"><span class="comment">            &#125;, &#123;</span></span><br><span class="line"><span class="comment">                loader: "css-loader" // translates CSS into CommonJS</span></span><br><span class="line"><span class="comment">            &#125;, &#123;</span></span><br><span class="line"><span class="comment">                loader: "less-loader" // compiles Less to CSS</span></span><br><span class="line"><span class="comment">            &#125;]</span></span><br><span class="line"><span class="comment">        &#125;]</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    9.加载图片：cnpm install --save-dev url-loader</span></span><br><span class="line"><span class="comment">    10.&#123;</span></span><br><span class="line"><span class="comment">        test: /\.(png|jpg|gif)$/,</span></span><br><span class="line"><span class="comment">        use: [</span></span><br><span class="line"><span class="comment">          &#123;</span></span><br><span class="line"><span class="comment">            loader: 'url-loader',</span></span><br><span class="line"><span class="comment">            options: &#123;</span></span><br><span class="line"><span class="comment">              // 如果limit小于文件大小 * 1024，就会报错，Cannot find module 'file-loader'</span></span><br><span class="line"><span class="comment">              // 如果要加载的图片小于8kb，就会将加载的图片转换成base64</span></span><br><span class="line"><span class="comment">              // 一般配置成8kb</span></span><br><span class="line"><span class="comment">              limit:8192</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">        ]</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      11.404  会把图片发布在dist文件夹里，但是我们css文件中还是在找img里的图片</span></span><br><span class="line"><span class="comment">      GET file:///D:/Web_Study/vue.js%E5%AD%A6%E4%B9%A0/12-webpack%E4%BD%BF%E7%94%A8/4-webpack%E7%9A%84lcss%E6%A0%B7%E5%BC%8F-</span></span><br><span class="line"><span class="comment">        less%E6%96%87%E4%BB%B6/c67dcb9e8b50af7c2550f6da0c40f7e0.jpg net::ERR_FILE_NOT_FOUND</span></span><br><span class="line"><span class="comment">      12. 解决方法：可以显示加载后的图片 publicPath: '/dist'</span></span><br><span class="line"><span class="comment">      在webpack.config.js中的output里添加</span></span><br><span class="line"><span class="comment">      // 可以显示加载后的图片</span></span><br><span class="line"><span class="comment">      publicPath: '/dist'</span></span><br><span class="line"><span class="comment">      13. 让加载后的图片在dist里的指定目录：</span></span><br><span class="line"><span class="comment">      图片名字  img文件夹/[name]此为变量名/hash为32位，截取8位/ext：拓展名</span></span><br><span class="line"><span class="comment">      注意：若只写name就是固定值，即一直都是这个名字</span></span><br><span class="line"><span class="comment">      name: 'img/[name].[hash:8].[ext]'</span></span><br><span class="line"><span class="comment">      14. 显示图片：publicPath: 'dist/'</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      15. ES6语法 转换成 ES5语法：</span></span><br><span class="line"><span class="comment">      ①：cnpm install --save-dev babel-loader@7 babel-core babel-preset-es2015</span></span><br><span class="line"><span class="comment">      ②：配置文件中添加:</span></span><br><span class="line"><span class="comment">            module: &#123;</span></span><br><span class="line"><span class="comment">        rules: [</span></span><br><span class="line"><span class="comment">          &#123;</span></span><br><span class="line"><span class="comment">            test: /\.js$/,</span></span><br><span class="line"><span class="comment">            exclude: /(node_modules|bower_components)/,</span></span><br><span class="line"><span class="comment">            use: &#123;</span></span><br><span class="line"><span class="comment">              loader: 'babel-loader',</span></span><br><span class="line"><span class="comment">              options: &#123;</span></span><br><span class="line"><span class="comment">                presets: ['@babel/preset-env']</span></span><br><span class="line"><span class="comment">              &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">        ]</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./dist/bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.使用commonjs的模块化规范</span></span><br><span class="line"><span class="keyword">const</span> &#123;add, mul&#125; = <span class="built_in">require</span>(<span class="string">'./js/mathUtils.js'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">20</span>, <span class="number">30</span>));</span><br><span class="line"><span class="built_in">console</span>.log(mul(<span class="number">25</span>, <span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.使用ES6的模块化的规范</span></span><br><span class="line"><span class="keyword">import</span> &#123;name, age, height&#125; <span class="keyword">from</span> <span class="string">"./js/info"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name);</span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br><span class="line"><span class="built_in">console</span>.log(height);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.依赖css文件</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./css/normal.css'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.依赖less文件</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./css/special.less'</span>)</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">'&lt;h2&gt;你好呀，李银河&lt;/h2&gt;'</span>)</span><br></pre></td></tr></table></figure>

<p><strong>info.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">'why'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> height = <span class="number">1.78</span></span><br></pre></td></tr></table></figure>

<p><strong>mathUtils.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 * num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  add,</span><br><span class="line">  mul</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p><strong>normal.css</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="comment">/* background: mediumaquamarine; */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">"../img/timg1.jpg"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>special.less</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">@fontSize: 50px;</span><br><span class="line">@fontColor: orange;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: @fontSize;</span><br><span class="line">  <span class="attribute">color</span>: @fontColor</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>模块展示<br><img src="https://img-blog.csdnimg.cn/20200210194545975.png" alt=""></p>
<h2 id="vue-cli3使用"><a href="#vue-cli3使用" class="headerlink" title="vue-cli3使用"></a>vue-cli3使用</h2><p><strong>App.vue</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"Vue logo"</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">msg</span>=<span class="string">"Welcome to Your Vue.js App"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'./components/HelloWorld.vue'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'app'</span>,</span></span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line">  font-family: 'Avenir', Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>HelloWorld.vue</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">  props: &#123;</span><br><span class="line"><span class="javascript">    msg: <span class="built_in">String</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line">h3 &#123;</span><br><span class="line">  margin: 40px 0 0;</span><br><span class="line">&#125;</span><br><span class="line">ul &#123;</span><br><span class="line">  list-style-type: none;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">li &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin: 0 10px;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#42b983</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// 使用的是runtime-only</span></span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">  <span class="comment">// render: h =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   return h(App)</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure>

<h2 id="vue-router前端路由"><a href="#vue-router前端路由" class="headerlink" title="vue-router前端路由"></a>vue-router前端路由</h2><h2 id="vue-tabbar"><a href="#vue-tabbar" class="headerlink" title="vue-tabbar"></a>vue-tabbar</h2><h2 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h2><h2 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h2><p><strong>request.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处不使用defaults，为了能导出多个自定义的</span></span><br><span class="line"><span class="comment">// 强烈推荐：回调方式四：Promise</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 1.创建axios的实例</span></span><br><span class="line">  <span class="keyword">const</span> instance = axios.create(&#123;</span><br><span class="line">    baseURL: <span class="string">'http://123.207.32.32:8000'</span>,</span><br><span class="line">    timeout: <span class="number">5000</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.axios的拦截器</span></span><br><span class="line">  <span class="comment">// 2.1请求拦截</span></span><br><span class="line">  <span class="comment">// instance.interceptors.request.use(config =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   console.log(config);</span></span><br><span class="line">  <span class="comment">//   // 拦截放行，否则报错TypeError: Cannot read property 'cancelToken' of undefined</span></span><br><span class="line">  <span class="comment">//   // 1.比如config中的一些信息不符合服务器的要求</span></span><br><span class="line">  <span class="comment">//   // 2.比如每次发送网络请求时，都希望在界面中显示一个请求的图标</span></span><br><span class="line">  <span class="comment">//   // 3.某些网络请求(比如登录(token))，必须携带一些特殊的信息</span></span><br><span class="line">  <span class="comment">//   return config</span></span><br><span class="line">  <span class="comment">// &#125;, err =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   console.log(err);</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 2.2响应拦截</span></span><br><span class="line">  instance.interceptors.response.use(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">  &#125;, err =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 底层已经帮我们封装好了new Promise()，我们可以直接return</span></span><br><span class="line">  <span class="keyword">return</span> instance(config)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐：回调方式三：Promise</span></span><br><span class="line"><span class="comment">// export function request(config) &#123;</span></span><br><span class="line"><span class="comment">//   return new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     // 1.创建axios的实例</span></span><br><span class="line"><span class="comment">//     const instance = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//       baseURL: 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//       timeout: 5000</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     // 发送真正的网络请求</span></span><br><span class="line"><span class="comment">//     instance(config)</span></span><br><span class="line"><span class="comment">//       .then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//         resolve(res)</span></span><br><span class="line"><span class="comment">//       &#125;)</span></span><br><span class="line"><span class="comment">//       .catch(err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//         reject(err)</span></span><br><span class="line"><span class="comment">//       &#125;)</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式一：</span></span><br><span class="line"><span class="comment">// export function request(config, success, failure) &#123;</span></span><br><span class="line"><span class="comment">//   // 1.创建axios的实例</span></span><br><span class="line"><span class="comment">//   const instance = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//     baseURL: 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//     timeout: 5000</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   // 发送真正的网络请求</span></span><br><span class="line"><span class="comment">//   instance(config)</span></span><br><span class="line"><span class="comment">//     .then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       success(res)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">//     .catch(err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       failure(err)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式二：</span></span><br><span class="line"><span class="comment">// export function request(config) &#123;</span></span><br><span class="line"><span class="comment">//   // 1.创建axios的实例</span></span><br><span class="line"><span class="comment">//   const instance = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//     baseURL: 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//     timeout: 5000</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   // 发送真正的网络请求</span></span><br><span class="line"><span class="comment">//   instance(config.baseConfig)</span></span><br><span class="line"><span class="comment">//     .then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       success(res)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">//     .catch(err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       failure(err)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios的多种请求方式：</span></span><br><span class="line"><span class="comment">// axios(config), axios.request(config), axios.get(url[,config])</span></span><br><span class="line"><span class="comment">// axios.delete(url[, config]), axios.head(url[,config])</span></span><br><span class="line"><span class="comment">// axios.post(url[,data[,config]]), axios.put(url[,data[,config]])</span></span><br><span class="line"><span class="comment">// axios.patch(url[,data[,config]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.axios基本使用，默认get请求</span></span><br><span class="line"><span class="comment">// axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/multidata',</span></span><br><span class="line"><span class="comment">//   method: 'get'</span></span><br><span class="line"><span class="comment">// &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/data',</span></span><br><span class="line"><span class="comment">// url: 'http://123.207.32.32:8000/home/data?type=sell&amp;&amp;page=1',</span></span><br><span class="line"><span class="comment">//   params: &#123;</span></span><br><span class="line"><span class="comment">//     type: 'sell',</span></span><br><span class="line"><span class="comment">//     page: 1</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line"><span class="comment">//   method: 'get'</span></span><br><span class="line"><span class="comment">// &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.axios发送并发请求</span></span><br><span class="line"><span class="comment">// axios.all([axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;), axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/data',</span></span><br><span class="line"><span class="comment">//   params: &#123;</span></span><br><span class="line"><span class="comment">//     type: 'pop',</span></span><br><span class="line"><span class="comment">//     page: 4</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;)]).then(results =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   // 返回的是数组形式的</span></span><br><span class="line"><span class="comment">//   console.log(results);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.axios公共配置的相关信息</span></span><br><span class="line"><span class="comment">// axios.defaults.baseURL = 'http://123.207.32.32:8000'</span></span><br><span class="line"><span class="comment">// 5秒</span></span><br><span class="line"><span class="comment">// axios.defaults.timeout = 5000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// axios.all([axios(&#123;</span></span><br><span class="line"><span class="comment">//   // baseURL = 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//   url: '/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;), axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: '/home/data',</span></span><br><span class="line"><span class="comment">//   params: &#123;</span></span><br><span class="line"><span class="comment">//     type: 'pop',</span></span><br><span class="line"><span class="comment">//     page: 4</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   // spread可以将数组中的元素依次展开</span></span><br><span class="line"><span class="comment">// &#125;)]).then(axios.spread((res1, res2) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   // 返回的是数组中的值</span></span><br><span class="line"><span class="comment">//   console.log(res1);</span></span><br><span class="line"><span class="comment">//   console.log(res2);</span></span><br><span class="line"><span class="comment">// &#125;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.创建对应的axios的实例：可以设置多个不同的baseURL</span></span><br><span class="line"><span class="comment">// const instance1 = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//   baseURL: 'http://123.207.32.32:8000/',</span></span><br><span class="line"><span class="comment">//   timeout: 5000</span></span><br><span class="line"><span class="comment">//   // headers: &#123;&#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// instance1(&#123;</span></span><br><span class="line"><span class="comment">//   url: '/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.封装request模块</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  request</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">"./network/request"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调方式三、四：Promise:推荐</span></span><br><span class="line">request(&#123;</span><br><span class="line">  url: <span class="string">'/home/multidata'</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式一：</span></span><br><span class="line"><span class="comment">// request(&#123;</span></span><br><span class="line"><span class="comment">//   url: '/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;, res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;, err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(err);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式二：</span></span><br><span class="line"><span class="comment">// request(&#123;</span></span><br><span class="line"><span class="comment">//   baseConfig: &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line"><span class="comment">//   success: function(res)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line"><span class="comment">//   failure: function(err)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Promise异步编程</title>
    <url>/2020/02/06/Promise%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="Promise的使用"><a href="#Promise的使用" class="headerlink" title="Promise的使用"></a>Promise的使用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 参数 -&gt; 函数(resolve, reject)</span></span><br><span class="line">    <span class="comment">// resolve, reject本身它们又是函数</span></span><br><span class="line">    <span class="comment">// 链式编程</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 第一次网路请求的代码 </span></span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve()</span><br><span class="line">      &#125;, <span class="number">2000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第二次网络请求的代码</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          resolve()</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 第二次处理的代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第三次网络请求的代码</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          resolve()</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 第三次处理的代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 成功的时候</span></span><br><span class="line">        resolve(<span class="string">'异步传数据'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 失败的时候</span></span><br><span class="line">        <span class="comment">// reject('error message')</span></span><br><span class="line">      &#125;, <span class="number">5000</span>)</span><br><span class="line">    <span class="comment">// .then((data) =&gt; 只有一个参数,data括号可以省略</span></span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'成功反馈'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 捕获错误信息</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'错误信息'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><font color="black" face="黑体">什么情况下用到Promise? </font><br>  一般情况下是有异步操作时,使用Promise对这个异步操作进行封装<br>  new -&gt; 构造函数(1.保存了一些状态信息 2.执行传入的函数)<br>  在执行传入的回调函数时,会传入两个参数,resolve,reject,本身又是函数</p>
</blockquote>
<h2 id="Promise的另种处理形式"><a href="#Promise的另种处理形式" class="headerlink" title="Promise的另种处理形式"></a>Promise的另种处理形式</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// then(函数一:成功, 函数二:失败)</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// resolve('Hello Vue.js')</span></span><br><span class="line">        reject(<span class="string">'error message'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;, err =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;)  </span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Promise的链式调用"><a href="#Promise的链式调用" class="headerlink" title="Promise的链式调用"></a>Promise的链式调用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// wrapped into 内部包装</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">'aaa'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 1.自己处理10行代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第一层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.对结果进行第一次处理</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(res + <span class="string">'111'</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第二层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(res + <span class="string">'222'</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第三层的10行处理代码'</span>)</span><br><span class="line">    &#125;)  </span><br><span class="line"></span><br><span class="line">    <span class="comment">//简写</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">'aaa'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 1.自己处理10行代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第一层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.对结果进行第一次处理</span></span><br><span class="line">      <span class="comment">// 捕获失败信息</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(<span class="string">'error'</span>)</span><br><span class="line">      <span class="comment">//手动抛出异常</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="string">'error message'</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(res + <span class="string">'111'</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第二层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(res + <span class="string">'222'</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第三层的10行处理代码'</span>)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;) </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略Promise.resolve</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">'aaa'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 1.自己处理10行代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第一层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.对结果进行第一次处理</span></span><br><span class="line">      <span class="keyword">return</span> res + <span class="string">'111'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第二层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> res + <span class="string">'222'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第三层的10行处理代码'</span>)</span><br><span class="line">    &#125;)  </span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Promise的all方法使用"><a href="#Promise的all方法使用" class="headerlink" title="Promise的all方法使用"></a>Promise的all方法使用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="built_in">Promise</span>.all([</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// resolve('result1')</span></span><br><span class="line">        resolve(&#123;<span class="attr">name</span>: <span class="string">'why'</span>, <span class="attr">age</span>: <span class="number">18</span>&#125;)</span><br><span class="line">      &#125;, <span class="number">2000</span>)</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// resolve('result2')</span></span><br><span class="line">        resolve(&#123;<span class="attr">name</span>: <span class="string">'blue'</span>, <span class="attr">age</span>: <span class="number">19</span>&#125;)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  ]).then(<span class="function"><span class="params">results</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(results)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>ES6</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>箭头函数</title>
    <url>/2020/02/06/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h2 id="箭头函数的基本使用"><a href="#箭头函数的基本使用" class="headerlink" title="箭头函数的基本使用"></a>箭头函数的基本使用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//  箭头函数：也是一种定义方式 </span></span><br><span class="line">    <span class="comment">// 1.定义函数的方式 function</span></span><br><span class="line">    <span class="keyword">const</span> fun = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.对象字面量中定义函数</span></span><br><span class="line">    <span class="keyword">const</span> obj = &#123;</span><br><span class="line">      fun: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      fun1() &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.ES6中的箭头函数</span></span><br><span class="line">    <span class="keyword">const</span> abc = <span class="function">(<span class="params">参数列表</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 无参数:</span></span><br><span class="line">    <span class="keyword">const</span> abc = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="箭头函数参数和返回值"><a href="#箭头函数参数和返回值" class="headerlink" title="箭头函数参数和返回值"></a>箭头函数参数和返回值</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1.参数问题</span></span><br><span class="line">    <span class="comment">// 1.1放入两个参数:</span></span><br><span class="line">    <span class="keyword">const</span> sum = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> num1 + num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.2放入一个参数</span></span><br><span class="line">    <span class="keyword">const</span> mul = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> num * num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> mul = <span class="function"><span class="params">num</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> num * num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.函数中</span></span><br><span class="line">    <span class="comment">// 2.1函数代码块中有多行代码时</span></span><br><span class="line">    <span class="keyword">const</span> test = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.2函数代码块中只有一行代码时</span></span><br><span class="line">    <span class="keyword">const</span> mul1 = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> num1 * num2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ①:有返回值</span></span><br><span class="line">    <span class="keyword">const</span> mul1 = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> num1 * num2</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'mul'</span> + mul1(<span class="number">200</span>, <span class="number">3</span>));</span><br><span class="line">    <span class="comment">// ②:无返回值:</span></span><br><span class="line">    <span class="keyword">const</span> mul2 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Hello Demo'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'mul2=='</span> + mul2);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="箭头函数的this使用"><a href="#箭头函数的this使用" class="headerlink" title="箭头函数的this使用"></a>箭头函数的this使用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 问题：箭头函数中的this是如何查找的</span></span><br><span class="line">    <span class="comment">// 答案：向外层作用域中，一层层查找this，直到有this的定义</span></span><br><span class="line">    <span class="comment">// 结论：箭头函数中的this引用的就是最近作用域中的this</span></span><br><span class="line">    <span class="keyword">const</span> obj = &#123;</span><br><span class="line">      aaa() &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//window  </span></span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 外层的setTimeout函数指向的就是window</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//window</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//window  </span></span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 外层的setTimeout函数指向的就是obj对象</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//obj对象</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    obj.aaa()</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>ES6</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6的基本语法</title>
    <url>/2020/02/06/ES6%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h2 id="块级作用域讲解"><a href="#块级作用域讲解" class="headerlink" title="块级作用域讲解"></a>块级作用域讲解</h2><p>ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。</p>
<p>ES6 主要是为了解决 ES5 的先天不足，比如 JavaScript 里并没有类的概念，但是目前浏览器的 JavaScript 是 ES5 版本，大多数高版本的浏览器也支持 ES6，不过只实现了 ES6 的部分特性和功能。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮4<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮5<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> btns = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'button'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式1（错误方法）：var全局变量，没有块级作用域</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式2：使用闭包</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        (<span class="function"><span class="keyword">function</span> <span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 方式3. 使用ES6中的let</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        btns[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//详解：</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span><span class="params">(i)</span> </span>&#123; <span class="comment">//i = 0，点击第一次</span></span></span><br><span class="line"><span class="actionscript">         btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">             <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">         &#125;)</span><br><span class="line">     &#125;</span><br><span class="line"><span class="actionscript">     <span class="function"><span class="keyword">function</span><span class="params">(i)</span> </span>&#123; </span></span><br><span class="line"><span class="actionscript">      <span class="comment">//i = 1,点击第二次。</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ①：由于使用的是var，前面i = 0/的函数里i又会被重新赋值成i = 1，故点击五次后，不论点击哪个按钮，都是打印的第5个按钮被点击</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ②：闭包方式，此循环的函数调用完后，会寻找i，然后由于是闭包形式，此i就相当于局部变量使用，其他循环下的i不相互影响</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ③：let方式：局部变量，有作用域范围</span></span></span><br><span class="line"><span class="actionscript">         btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">             <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">         &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="const使用和注意"><a href="#const使用和注意" class="headerlink" title="const使用和注意"></a>const使用和注意</h2><p><strong>在使用ES6开发中我们优先使用const，只当有需要改变一个标识符时才使用let</strong></p>
<ol>
<li>const的注意一：一旦给const修饰的标识符被赋值后，不能修改<ul>
<li>const a = 20;</li>
<li>a = 12;</li>
</ul>
</li>
<li>const的注意二:<ul>
<li>const name; //错误，必须赋值。</li>
</ul>
</li>
<li>const的注意三：常量的含义是指向的对象的指针引用不能被修改，但是内部属性可以被修改<ul>
<li>const obj = {<br>  id: 10,<br>  name: ‘why’,<br>  weight: 88<br>}</li>
<li>obj.id = 12;</li>
<li>obj.name = ‘Lemon’;</li>
<li>obj.weight = 90;</li>
</ul>
</li>
</ol>
<h2 id="ES6字面量的增强写法"><a href="#ES6字面量的增强写法" class="headerlink" title="ES6字面量的增强写法"></a>ES6字面量的增强写法</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.属性的增强写法</span></span><br><span class="line">    <span class="keyword">const</span> name = <span class="string">'lemon'</span>;</span><br><span class="line">    <span class="keyword">const</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="keyword">const</span> height = <span class="number">1.88</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ES5的写法</span></span><br><span class="line">    <span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">      name: name,</span><br><span class="line">      age: age,</span><br><span class="line">      height: height</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ES6的写法</span></span><br><span class="line">    <span class="keyword">const</span> obj2 = &#123;</span><br><span class="line">      name,</span><br><span class="line">      age,</span><br><span class="line">      height</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.方法的简写：</span></span><br><span class="line">    <span class="comment">//ES6之前</span></span><br><span class="line">    <span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">      test: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">""</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ES6的写法</span></span><br><span class="line">    <span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">      test() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">""</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.jianshu.com/p/d23a506cdca2" target="_blank" rel="noopener">进阶链接</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>ES6</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis小笔记</title>
    <url>/2020/01/14/Mybatis%E5%B0%8F%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文旨在记录我在idea中使用mybatis时的经验总结</p>
<h2 id="基本规范："><a href="#基本规范：" class="headerlink" title="基本规范："></a>基本规范：</h2><ol>
<li><p>Base_Column</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;sql id="Base_Column"&gt;</span><br><span class="line">  ID,USER_NAME,PASSWORD,CREATE_TIME,UPDATE_TIME,HEAD_PORTRAIT,STATUS</span><br><span class="line">&lt;/sql&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Base_Where</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;sql id="Base_Where"&gt;</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">      &lt;if test="id != null and id != ''"&gt;</span><br><span class="line">          AND ID=<span class="comment">#&#123;id&#125;</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test="userName != null and userName != ''"&gt;</span><br><span class="line">          AND USER_NAME like concat('%',<span class="comment">#&#123;userName&#125;,'%')</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test="password != null and password != ''"&gt;</span><br><span class="line">          AND PASSWORD=md5(<span class="comment">#&#123;password&#125;)</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test="status != null"&gt;</span><br><span class="line">          AND STATUS=<span class="comment">#&#123;status&#125;</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">&lt;/sql&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Update_Column</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;sql id="Update_Column"&gt;</span><br><span class="line">  &lt;set&gt;</span><br><span class="line">      &lt;if test="userName != null and userName!= ''"&gt;USER_NAME =#&#123;userName&#125;,&lt;/if&gt;</span><br><span class="line">      &lt;if test="password != null and password!= ''"&gt;PASSWORD=md5(#&#123;password&#125;),&lt;/if&gt;</span><br><span class="line">      &lt;if test="headPortrait != null and headPortrait != ''"&gt;HEAD_PORTRAIT=#&#123;headPortrait&#125;,&lt;/if&gt;</span><br><span class="line">      &lt;if test="updateTime != null"&gt;UPDATE_TIME=#&#123;updateTime&#125;,&lt;/if&gt;</span><br><span class="line">      &lt;if test="status != null"&gt;STATUS=#&#123;status&#125;,&lt;/if&gt;</span><br><span class="line">  &lt;/set&gt;</span><br><span class="line">&lt;/sql&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="单表操作"><a href="#单表操作" class="headerlink" title="单表操作"></a>单表操作</h3><ol>
<li><p>新增</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;insert id="insertOneUser" parameterType="cn.blue.项目工程名.bean.UserInfo"</span><br><span class="line">        useGeneratedKeys="true" keyColumn="id" keyProperty="id"&gt;</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">    user_info(<span class="keyword">ID</span>,USER_NAME,<span class="keyword">PASSWORD</span>,CREATE_TIME)</span><br><span class="line">    <span class="keyword">VALUES</span>(<span class="comment">#&#123;id&#125;,#&#123;userName&#125;,md5(#&#123;password&#125;),now())</span></span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询: 根据封装进userInfo对象里的条件查询，结果可以是单个对象也可以是集合</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findOneUser" parameterType="cn.blue.项目工程名.bean.UserInfo" </span><br><span class="line">    resultType="cn.blue.项目工程名.bean.UserInfo"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;delete id="deleteById" parameterType="string"&gt;</span><br><span class="line">    <span class="keyword">DELETE</span> <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">delete</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;update id="deleteById" parameterType="string"&gt;</span><br><span class="line">    <span class="keyword">UPDATE</span> user_info <span class="keyword">SET</span> <span class="keyword">STATUS</span> = <span class="number">1</span></span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">    <span class="keyword">id</span>=<span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/<span class="keyword">update</span>&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="两表查询"><a href="#两表查询" class="headerlink" title="两表查询"></a>两表查询</h3><ol>
<li><p>resultMap：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;resultMap type="cn.blue.项目工程名.bean.UserInfo" id="userInfoMap"&gt;</span><br><span class="line">    &lt;id column="ID" property="id"/&gt;</span><br><span class="line">    &lt;result column="USER_NAME" property="userName"/&gt;</span><br><span class="line">    &lt;result column="PASSWORD" property="password"/&gt;</span><br><span class="line">    &lt;result column="CREATE_TIME" property="createTime"/&gt;</span><br><span class="line">    &lt;result column="UPDATE_TIME" property="updateTime"/&gt;</span><br><span class="line">    &lt;result column="HEAD_PORTRAIT" property="headPortrait"/&gt;</span><br><span class="line">    &lt;result column="STATUS" property="status"/&gt;</span><br><span class="line">    &lt;collection column="ID" property="roles" ofType="cn.blue.项目工程名.bean.Role"</span><br><span class="line">                <span class="keyword">select</span>=<span class="string">"cn.blue.项目工程名.mapper.RoleMapper.findRoleById"</span>/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>UserInfoMapper中的查询语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findAll" parameterType="cn.blue.项目工程名.bean.UserInfo"</span><br><span class="line">        resultMap="userInfoMap"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>RoleMapper表中的查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findById" parameterType="int"</span><br><span class="line">    resultMap="roleMap"&gt;</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>&gt;&lt;/<span class="keyword">include</span>&gt;</span><br><span class="line">    <span class="keyword">from</span> <span class="keyword">role</span></span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">id</span>=<span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h3 id="利用中间表过渡的两表查询"><a href="#利用中间表过渡的两表查询" class="headerlink" title="利用中间表过渡的两表查询"></a>利用中间表过渡的两表查询</h3><ol>
<li><p>resultMap：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;resultMap type="cn.blue.项目工程名.bean.UserInfo" id="userInfoMap"&gt;</span><br><span class="line">    &lt;id column="ID" property="id"/&gt;</span><br><span class="line">    &lt;result column="USER_NAME" property="userName"/&gt;</span><br><span class="line">    &lt;result column="PASSWORD" property="password"/&gt;</span><br><span class="line">    &lt;result column="CREATE_TIME" property="createTime"/&gt;</span><br><span class="line">    &lt;result column="UPDATE_TIME" property="updateTime"/&gt;</span><br><span class="line">    &lt;result column="HEAD_PORTRAIT" property="headPortrait"/&gt;</span><br><span class="line">    &lt;result column="STATUS" property="status"/&gt;</span><br><span class="line">    &lt;collection column="ID" property="roles" ofType="cn.blue.项目工程名.bean.Role"</span><br><span class="line">                <span class="keyword">select</span>=<span class="string">"cn.blue.项目工程名.mapper.RoleMapper.findRoleByUserId"</span>/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>UserInfoMapper中的查询语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findAll" parameterType="cn.blue.项目工程名.bean.UserInfo"</span><br><span class="line">        resultMap="userInfoMap"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>RoleMapper中的查询语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findRoleByUserId" parameterType="int" resultType="cn.blue.项目工程名.bean.Role"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> <span class="keyword">role</span> r, user_role ur</span><br><span class="line">    <span class="keyword">WHERE</span> r.id=ur.role_id</span><br><span class="line">    <span class="keyword">AND</span> ur.user_id=<span class="comment">#&#123;userId&#125;</span></span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="遍历操作"><a href="#遍历操作" class="headerlink" title="遍历操作"></a>遍历操作</h3><ol>
<li>根据ids来删除:<br>注：前面ids是个数组，故需要以此表达：String[] ids<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*  支持批量删除用户</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> ids 多个用户id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 受影响行数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteByIds</span><span class="params">(@Param(<span class="string">"ids"</span>)</span>String... ids)</span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;delete id="deleteByIds" parameterType="string"&gt;</span><br><span class="line">    <span class="keyword">DELETE</span> <span class="keyword">FROM</span> user_info</span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">    &lt;foreach collection=<span class="string">"ids"</span> <span class="keyword">open</span>=<span class="string">"id in ("</span> <span class="keyword">close</span>=<span class="string">")"</span></span><br><span class="line">              separator=<span class="string">","</span> item=<span class="string">"id"</span>&gt;</span><br><span class="line">        <span class="comment">#&#123;id&#125;</span></span><br><span class="line">    &lt;/foreach&gt;</span><br><span class="line">&lt;/<span class="keyword">delete</span>&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>根据用户id来在中间表中新增与之对应的角色ids：一对一或者一对多的关系<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 修改中间表user_role的id</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> userId 用户id</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> roleIds 角色id</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 受影响行数</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addRolesByUserId</span><span class="params">(@Param(<span class="string">"userId"</span>)</span> String userId, @<span class="title">Param</span><span class="params">(<span class="string">"roleIds"</span>)</span> String[] roleIds)</span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;insert id="addRolesByUserId"&gt;</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_role</span><br><span class="line">    &lt;foreach collection=<span class="string">"roleIds"</span> <span class="keyword">open</span>=<span class="string">"values"</span> item=<span class="string">"roleId"</span> separator=<span class="string">","</span>&gt;</span><br><span class="line">        (<span class="comment">#&#123;userId&#125;,#&#123;roleId&#125;)</span></span><br><span class="line">    &lt;/foreach&gt;</span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>ssm-crud项目</title>
    <url>/2020/01/13/ssm-crud%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>本文记录着我搭建ssm-crud项目时的主要代码实现，依次来熟悉ssm项目的搭建</p>
<h2 id="前端页面代码"><a href="#前端页面代码" class="headerlink" title="前端页面代码"></a>前端页面代码</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    /*引用<span class="attr">jsp-api</span>*/</span></span><br><span class="line"><span class="tag">    <span class="attr">pageContext.setAttribute</span>("<span class="attr">APP_PATH</span>", <span class="attr">request.getContextPath</span>());</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/bootstrap/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/bootstrap/css/bootstrap-theme.min.css"</span>&gt;</span>--%&gt;</span><br><span class="line">    <span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--搭建显示页面--%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--标题--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--按钮--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"table_add"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn"</span> <span class="attr">data-target</span>=<span class="string">"#myModal"</span>&gt;</span></span><br><span class="line">                新增</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"table_del"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--显示表格数据--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%--设置表的网格状：table-bordered--%</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span> <span class="attr">checkbox</span>=<span class="string">"true"</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>DeptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--显示分页信息--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%--分页文字信息--%</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%--分页条信息--%</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">"Page navigation"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%--员工修改的模态框--%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"updateModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span>&gt;</span>员工修改<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>EmpName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--</span>                            只读：<span class="attr">Readonly--</span>%&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_update"</span> <span class="attr">Readonly</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入员工用户名"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"empId"</span> <span class="attr">id</span>=<span class="string">"empId_update"</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--</span>                            静态实列<span class="attr">--</span>%&gt;</span></span><br><span class="line">                            &lt;%--&lt;p id="empName_update" class="form-control-static"&gt;&lt;/p&gt;--%&gt;</span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_update"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入合法邮箱"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--多选框--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_update"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_update"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span> 女</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>DeptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--部门提交部门id--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"deptId"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"btn_update"</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-dialog --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%--员工添加的模态框--%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span>&gt;</span>员工添加<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>EmpName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_add"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入员工用户名"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empEmail_add"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入合法邮箱"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--多选框--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_add"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_add"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span> 女</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>DeptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--部门提交部门id--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"deptId"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"model_save"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-dialog --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//定义一个总记录数，为了后面新增后直接跳转到最后一页</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> totalRecord;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $(function () ncaught TypeError: e.indexOf is not a function</span></span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">window</span>).on(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"input[name='checkbox']"</span>).prop(<span class="string">"checked"</span>, <span class="literal">true</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// window.onload = function () ,同页面加载就会调函数</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"tr:checkbox"</span>).prop(<span class="string">"checked"</span>, <span class="keyword">this</span>.checked);</span></span><br><span class="line">        to_page(1);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">to_page</span><span class="params">(page)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/emps'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            data: <span class="string">"page="</span> + page,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(result)</span> </span>&#123;</span></span><br><span class="line">                if (result.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//解析并显示员工数据</span></span></span><br><span class="line">                    build_emps_table(result);</span><br><span class="line"><span class="actionscript">                    <span class="comment">//将总记录数复制给全局变量</span></span></span><br><span class="line">                    totalRecord = result.pageInfo.total;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//解析并显示分页信息</span></span></span><br><span class="line">                    build_page_info(result);</span><br><span class="line"><span class="actionscript">                    <span class="comment">//解析并显示分页条数据</span></span></span><br><span class="line">                    build_page_nav(result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">build_emps_table</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> emps = result.pageInfo.list;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#emps_table tbody"</span>).empty();</span></span><br><span class="line"><span class="javascript">        $.each(emps, <span class="function"><span class="keyword">function</span> (<span class="params">index, item</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> empId = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empId);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> empName = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empName);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> gender = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.gender ? <span class="string">'男'</span> : <span class="string">'女'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> email = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.email);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> deptName = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.department.deptName);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> editBtn = $(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-primary btn-sm edit_btn"</span>)</span></span><br><span class="line"><span class="handlebars"><span class="xml">                .append("<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'padding-right: 3px;'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-paperclip")</span></span></span><br><span class="line"><span class="actionscript">                .append(<span class="string">"编辑"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//为每一行的编辑按钮添加一个属性,赋值给它</span></span></span><br><span class="line"><span class="actionscript">            editBtn.attr(<span class="string">"edit-id"</span>, item.empId);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> delBtn = $(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-primary btn-sm delete_btn"</span>)</span></span><br><span class="line"><span class="handlebars"><span class="xml">                .append("<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'padding-right: 3px;'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")</span></span></span><br><span class="line"><span class="actionscript">                .append(<span class="string">"删除"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btnOperation = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(editBtn).append(delBtn);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//append方法执行后还是返回的原来的元素</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>).append(empId)</span></span><br><span class="line">                .append(empName)</span><br><span class="line">                .append(email)</span><br><span class="line">                .append(gender)</span><br><span class="line">                .append(deptName)</span><br><span class="line">                .append(btnOperation)</span><br><span class="line"><span class="actionscript">                .appendTo(<span class="string">"#emps_table tbody"</span>);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">/*解析显示分页信息*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">build_page_info</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空元素方法，避免重复添加数据，成倍增长</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#page_info_area"</span>).empty();</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#page_info_area"</span>).append(<span class="string">"当前"</span> + result.pageInfo.pageNum + <span class="string">"页,总"</span> + result.pageInfo.pages + <span class="string">"页,总记录数"</span> + result.pageInfo.total);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">/*解析显示分页条*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">build_page_nav</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空元素方法，避免重复添加数据，成倍增长</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#page_nav_area"</span>).empty();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ul = $(<span class="string">"&lt;ul&gt;&lt;/ul&gt;"</span>).addClass(<span class="string">"pagination"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//首页的li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> firstPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"首页"</span>).attr(<span class="string">'href'</span>, <span class="string">'#'</span>));</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prePageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).append(<span class="string">"&amp;laquo;"</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//判断是否有上一页，为false就是首页，禁用</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (result.pageInfo.hasPreviousPage == <span class="literal">false</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            firstPageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">            prePageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//为首页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            firstPageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(1)</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">//为前一页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            prePageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(result.pageInfo.pageNum - 1);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> nextPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).append(<span class="string">"&amp;raquo;"</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//末页的li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> lastPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"末页"</span>).attr(<span class="string">'href'</span>, <span class="string">'#'</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//如果为尾页，没有下一页，就禁用，也就不需要click函数触发</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (result.pageInfo.hasNextPage == <span class="literal">false</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            nextPageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">            lastPageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//为下一页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            nextPageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(result.pageInfo.pageNum + 1);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">//为末页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            lastPageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(result.pageInfo.pages);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//添加首页和上一页在分页条中</span></span></span><br><span class="line">        ul.append(firstPageLi).append(prePageLi);</span><br><span class="line"><span class="actionscript">        <span class="comment">//遍历当前需要的导航条页码数,ep:1,2,3,4,5</span></span></span><br><span class="line"><span class="javascript">        $.each(result.pageInfo.navigatepageNums, <span class="function"><span class="keyword">function</span> (<span class="params">index, item</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> numLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(item));</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//如果当前页码等于正在显示数据的页面，就激活图标颜色</span></span></span><br><span class="line">            if (result.pageInfo.pageNum == item) &#123;</span><br><span class="line"><span class="actionscript">                numLi.addClass(<span class="string">"active"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            numLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(item);</span><br><span class="line">            &#125;);</span><br><span class="line">            ul.append(numLi);</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">//添加下一页和尾页在分页条中</span></span></span><br><span class="line">        ul.append(nextPageLi).append(lastPageLi);</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> navEle = $(<span class="string">"&lt;nav&gt;&lt;/nav&gt;"</span>).append(ul);</span></span><br><span class="line"><span class="actionscript">        navEle.appendTo(<span class="string">"#page_nav_area"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//点击新增按钮，弹出模态框</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#table_add"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//重置表单数据,但是span里的信息、input框颜色仍然有</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#myModal form"</span>)[<span class="number">0</span>].reset();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空span信息，重置input颜色</span></span></span><br><span class="line"><span class="actionscript">        show_validate_msg(<span class="string">"#empName_add"</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="actionscript">        show_validate_msg(<span class="string">"#empEmail_add"</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//查出下拉框里的部门名字</span></span></span><br><span class="line"><span class="actionscript">        getDepts(<span class="string">"#myModal select"</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#myModal'</span>).modal(&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//点击背景空白处不被关闭；</span></span></span><br><span class="line"><span class="actionscript">            backdrop: <span class="string">'static'</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//触发键盘esc事件时不关闭。</span></span></span><br><span class="line"><span class="actionscript">            keyboard: <span class="literal">false</span></span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//校验员工添加的表单数据</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">validate_add_form</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//1.拿到想要的数据，校验.  前端校验用户名</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> empName = $(<span class="string">"#empName_add"</span>).val();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//6-16位 或者 2-5位中文</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> regName = <span class="regexp">/(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/</span>;</span></span><br><span class="line">        if (!regName.test(empName)) &#123;</span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"error"</span>, <span class="string">"需要输入6-16位字母和数字或者2-5位中文的组合"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"success"</span>, <span class="string">""</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> email = $(<span class="string">"#empEmail_add"</span>).val();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//双斜杠，转义</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> regEmail = <span class="regexp">/^([a-z0-9_-]+)@([\da-z.-]+)\.([a-z.]&#123;2,6&#125;)$/</span>;</span></span><br><span class="line">        if (!regEmail.test(email)) &#123;</span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empEmail_add"</span>, <span class="string">"error"</span>, <span class="string">"邮箱格式不合法"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empEmail_add"</span>, <span class="string">"success"</span>, <span class="string">""</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//显示校验信息</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">show_validate_msg</span><span class="params">(ele, status, msg)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//每次点击都需要清空先前添加的元素</span></span></span><br><span class="line"><span class="javascript">        $(ele).parent().removeClass(<span class="string">"has-success has-error"</span>);</span></span><br><span class="line"><span class="javascript">        $(ele).next(<span class="string">"span"</span>).text();</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (status == <span class="string">"success"</span>) &#123;</span></span><br><span class="line"><span class="javascript">            $(ele).parent().addClass(<span class="string">"has-success"</span>);</span></span><br><span class="line"><span class="javascript">            $(ele).next(<span class="string">"span"</span>).text(msg);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status == <span class="string">"error"</span>) &#123;</span></span><br><span class="line"><span class="javascript">            $(ele).parent().addClass(<span class="string">"has-error"</span>);</span></span><br><span class="line"><span class="javascript">            $(ele).next(<span class="string">"span"</span>).text(msg);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            $(ele).next(<span class="string">"span"</span>).text(msg);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//校验用户名是否可用，无重复</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#empName_add"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取员工用户名输入框的值, this表示当前#empName_add,这个含此id的对象html标签</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> empName = <span class="keyword">this</span>.value;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/checkName'</span>,</span></span><br><span class="line"><span class="actionscript">            data: <span class="string">'empName='</span> + empName,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"success"</span>, rs.msg);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#model_save"</span>).attr(<span class="string">"is_save"</span>, <span class="string">"success"</span>);</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"error"</span>, rs.msg);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#model_save"</span>).attr(<span class="string">"is_save"</span>, <span class="string">"error"</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//监听表头新增里模态框的保存按钮</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#model_save"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//序列化表单数据，</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> data = $(<span class="string">"#myModal form"</span>).serialize();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//校验数据</span></span></span><br><span class="line">        if (!validate_add_form()) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//检验是否有无错误信息，若有则不允许提交</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="keyword">this</span>).attr(<span class="string">"is_save"</span>) == <span class="string">"error"</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/save'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line">            data: data,</span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//关闭模态框，注意顺序</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#myModal'</span>).modal(<span class="string">'hide'</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//返回到最后一页，显示添加的数据</span></span></span><br><span class="line">                    to_page(totalRecord);</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(rs);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (rs.error.empName != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(rs.error.empName);</span></span><br><span class="line"><span class="actionscript">                        show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"error"</span>, rs.error.empName);</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (rs.error.email != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                        show_validate_msg(<span class="string">"#email_add"</span>, <span class="string">"error"</span>, rs.error.email);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//查出所有的部门信息并显示在x下拉列表中</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getDepts</span><span class="params">(ele)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//重置下拉框的值</span></span></span><br><span class="line"><span class="javascript">        $(ele).empty();</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/depts'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//显示部门信息在下拉框</span></span></span><br><span class="line"><span class="javascript">                    $.each(rs.depts, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> optionEle = $(<span class="string">"&lt;option&gt;&lt;/option&gt;"</span>).append(<span class="keyword">this</span>.deptName).attr(<span class="string">"value"</span>, <span class="keyword">this</span>.deptId);</span></span><br><span class="line">                        optionEle.appendTo(ele)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//员工修改的模态框</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.我们是按钮创建前就绑定click事件，所以绑定不上 或者直接在 c:forEach 遍历时就添加onclick();</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//在生成的动态标签 $.each()里不建议使用onclick函数,不像thymeleaf遍历时还可以传值，这个用item.名称，显示item未定义</span></span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).on(<span class="string">"click"</span>, <span class="string">".edit_btn"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//得到员工信息</span></span></span><br><span class="line"><span class="javascript">        getEmp($(<span class="keyword">this</span>).attr(<span class="string">'edit-id'</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//得到下拉框的部门信息</span></span></span><br><span class="line"><span class="actionscript">        getDepts(<span class="string">"#updateModal select"</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#updateModal"</span>).modal(&#123;</span></span><br><span class="line"><span class="actionscript">            backdrop: <span class="string">'static'</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">//遍历时添加函数onclik=edit()</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// function edit() &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     var empId = $(".edit_btn").attr('edit-id');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     getEmp(empId);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     getDepts("#updateModal select");</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     $("#updateModal").modal(&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         backdrop: 'static'</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &#125;)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getEmp</span><span class="params">(empId)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//直接赋值在url中，取不到数据</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//var empId = $(".edit_btn").attr('edit-id');</span></span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/emp/'</span> + empId,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//清楚邮箱校验消息</span></span></span><br><span class="line"><span class="actionscript">                show_validate_msg(<span class="string">"#email_update"</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> empData = rs.emp;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#empName_update"</span>).val(empData.empName);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#email_update"</span>).val(empData.email);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#updateModal input[name=gender]"</span>).val([empData.gender]);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#updateModal select"</span>).val([empData.deptId]);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#empId_update"</span>).val(empData.empId);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn_update"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//序列化表单数据，</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> data = $(<span class="string">"#updateModal form"</span>).serialize();</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/update'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            data: data + <span class="string">"&amp;_method=PUT"</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code !== 0) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(rs);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (rs.error.email != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                        show_validate_msg(<span class="string">"#email_update"</span>, <span class="string">"error"</span>, rs.error.email);</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//关闭模态框，注意顺序</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#updateModal'</span>).modal(<span class="string">'hide'</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//返回到最后一页，显示添加的数据</span></span></span><br><span class="line">                    to_page(totalRecord);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> cn.blue.service.EmployeeService;</span><br><span class="line"><span class="keyword">import</span> cn.blue.utils.Result;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.FieldError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Pattern;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    EmployeeService employeeService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转到emps页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/list"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"emps"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有员工信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/emps"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getEmpsWithJson</span><span class="params">(@RequestParam(value = <span class="string">"page"</span>, defaultValue = <span class="string">"1"</span>)</span> Integer page) </span>&#123;</span><br><span class="line">        <span class="comment">//在查询之前只需调用，传入页码，每页数据量</span></span><br><span class="line">        PageHelper.startPage(page, <span class="number">5</span>);</span><br><span class="line">        List&lt;Employee&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//使用pageInfo包装后的结果，只需要将pageInfo传给页面就好了</span></span><br><span class="line">        <span class="comment">//封装了详细的分页信息，包括我们查询出来的数据，传入连续显示的页数</span></span><br><span class="line">        PageInfo pageInfo = <span class="keyword">new</span> PageInfo(emps, <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> Result.success().add(<span class="string">"pageInfo"</span>, pageInfo).setMsg(<span class="string">"查询成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据员工id获取员工信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> empId 员工id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Emp员工信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/emp/&#123;empId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getEmp</span><span class="params">(@PathVariable(<span class="string">"empId"</span>)</span> Integer empId)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Employee emp = employeeService.getEmp(empId);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"查询成功"</span>).add(<span class="string">"emp"</span>,emp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"查询失败"</span>).add(<span class="string">"error"</span>,e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工信息修改</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> employee 员工信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">updateEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                employeeService.updateEmp(employee);</span><br><span class="line">                <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/find"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmps</span><span class="params">(@RequestParam(value = <span class="string">"page"</span>, defaultValue = <span class="string">"1"</span>)</span> Integer page, ModelMap map) </span>&#123;</span><br><span class="line">        <span class="comment">//在查询之前只需调用，传入页码，每页数据量</span></span><br><span class="line">        PageHelper.startPage(page, <span class="number">5</span>);</span><br><span class="line">        List&lt;Employee&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//使用pageInfo包装后的结果，只需要将pageInfo传给页面就好了</span></span><br><span class="line">        <span class="comment">//封装了详细的分页信息，包括我们查询出来的数据，传入连续显示的页数</span></span><br><span class="line">        PageInfo pageInfo = <span class="keyword">new</span> PageInfo(emps, <span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">"pageInfo"</span>, pageInfo);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工信息保存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> employee 员工信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">saveEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            employeeService.saveEmp(employee);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检验员工用户名是否存在</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/checkName"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">checkName</span><span class="params">(@RequestParam(<span class="string">"empName"</span>)</span> String empName) </span>&#123;</span><br><span class="line">        String regx = <span class="string">"(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)$"</span>;</span><br><span class="line">        <span class="keyword">if</span>(!empName.matches(regx))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"需要输入6-16位字母和数字或者2-5位中文的组合"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> b = employeeService.checkName(empName);</span><br><span class="line">        <span class="keyword">if</span> (b) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"此用户名可用"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"此用户名重复"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Department;</span><br><span class="line"><span class="keyword">import</span> cn.blue.service.DepartmentService;</span><br><span class="line"><span class="keyword">import</span> cn.blue.utils.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/19</span></span><br><span class="line"><span class="comment"> * 处理和部门有关的请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/depts"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DepartmentController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentService departmentService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查出部门所有信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getDepts</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Department&gt; list = departmentService.getDepts();</span><br><span class="line">        <span class="keyword">return</span> Result.success().add(<span class="string">"depts"</span>,list).setMsg(<span class="string">"查询成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="逆向工程使用"><a href="#逆向工程使用" class="headerlink" title="逆向工程使用"></a>逆向工程使用</h2><ol>
<li>MBGTest</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.InvalidConfigurationException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.XMLParserException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MBGTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, XMLParserException, InvalidConfigurationException, SQLException, InterruptedException </span>&#123;</span><br><span class="line">        List&lt;String&gt; warnings = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">boolean</span> overwrite = <span class="keyword">true</span>;</span><br><span class="line">        File configFile = <span class="keyword">new</span> File(<span class="string">"mbg.xml"</span>);</span><br><span class="line">        ConfigurationParser cp = <span class="keyword">new</span> ConfigurationParser(warnings);</span><br><span class="line">        Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">        DefaultShellCallback callback = <span class="keyword">new</span> DefaultShellCallback(overwrite);</span><br><span class="line">        MyBatisGenerator myBatisGenerator = <span class="keyword">new</span> MyBatisGenerator(config, callback, warnings);</span><br><span class="line">        myBatisGenerator.generate(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>mbg.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"DB2Tables"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">&lt;!--表示在mybatis逆向工程是不需要添加注释--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--配置数据库连接--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm_crud"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"账号"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"密码"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--指定javaBean生成位置: .\src\main\java--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"cn.blue.bean"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--指定sql映射文件生成的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/resources"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--指定接口生成的位置,比如mapper接口--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> <span class="attr">targetPackage</span>=<span class="string">"cn.blue.dao"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--table表,指定每个表生成策略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_emp"</span> <span class="attr">domainObjectName</span>=<span class="string">"Employee"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_dept"</span> <span class="attr">domainObjectName</span>=<span class="string">"Department"</span>/&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>pom.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis的逆向工程--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li><p>结果<br><img src="https://img-blog.csdnimg.cn/20191225104333311.png" alt="bean层生成"></p>
<ul>
<li>指定sql映射文件生成的位置<br><img src="https://img-blog.csdnimg.cn/20191225104456258.png" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20191225104530149.png" alt="在这里插入图片描述"></li>
</ul>
</li>
</ol>
<ul>
<li>指定接口生成的位置,比如mapper接口<br><img src="https://img-blog.csdnimg.cn/20191225104619717.png" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20191225104644537.png" alt="在这里插入图片描述"></li>
</ul>
<h2 id="curd-调用mapper方法进行数据库操作"><a href="#curd-调用mapper方法进行数据库操作" class="headerlink" title="curd-调用mapper方法进行数据库操作"></a>curd-调用mapper方法进行数据库操作</h2><ol>
<li>MapperTest</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.mapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Department;</span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> cn.blue.dao.DepartmentMapper;</span><br><span class="line"><span class="keyword">import</span> cn.blue.dao.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/17</span></span><br><span class="line"><span class="comment"> * 推荐spring的项目，就可以使用spring的单元测试，可以自动注入我们需要的组件</span></span><br><span class="line"><span class="comment"> * 1.导入Spring-Test模块</span></span><br><span class="line"><span class="comment"> * 2.<span class="doctag">@ContextConfiguration</span>指定的spring配置文件位置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">locations</span> </span>= &#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试DepartmentMapper</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DepartmentMapper departmentMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeMapper employeeMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SqlSession sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCurd</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.创建SpringIoc容器</span></span><br><span class="line">        ApplicationContext ioc = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">//2.从容器中获取mapper</span></span><br><span class="line">        DepartmentMapper bean = ioc.getBean(DepartmentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.err.println(<span class="string">"值："</span>+departmentMapper);</span><br><span class="line">        <span class="comment">//1.插入部门</span></span><br><span class="line">        departmentMapper.insertSelective(<span class="keyword">new</span> Department(<span class="keyword">null</span>, <span class="string">"开发部"</span>));</span><br><span class="line">        departmentMapper.insertSelective(<span class="keyword">new</span> Department(<span class="keyword">null</span>, <span class="string">"测试部"</span>));</span><br><span class="line">        <span class="comment">//2.生成员工数据，测试员工插入</span></span><br><span class="line">        employeeMapper.insertSelective(<span class="keyword">new</span> Employee(<span class="keyword">null</span>,<span class="string">"jerry"</span>,<span class="number">1</span>,<span class="string">"Jerry@qq.com"</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="comment">//3.批量插入员工数据</span></span><br><span class="line">        EmployeeMapper mapper = sqlSession.getMapper(EmployeeMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            String uid = UUID.randomUUID().toString().substring(<span class="number">0</span>, <span class="number">5</span>) + i;</span><br><span class="line">            mapper.insertSelective(<span class="keyword">new</span> Employee(<span class="keyword">null</span>, uid, <span class="number">1</span>, uid + <span class="string">"@qq.com"</span>, <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"批量完成"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>依赖<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--junit单元测试，需要版本对应--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--是一个为了测试为目的,且能组合成灵活表达式的匹配器类库--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hamcrest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hamcrest-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--对Junit等测试框架的简单封装--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="crud-配置文件"><a href="#crud-配置文件" class="headerlink" title="crud-配置文件"></a>crud-配置文件</h2><img src="https://img-blog.csdnimg.cn/20191225131208708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>applicationContext.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--这里是spring的配置文件，主要配置业务和逻辑有关的东西--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.blue"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据源，事务控制，--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:dbconfig.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"pooledDataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.jdbcUrl&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driverClass&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--===========================--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置和mybatis的整合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定mybatis全局配置文件的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"pooledDataSource"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定mybatis，mapper的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:mapper/*.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置扫描器，将mybatis接口的实现加入到ioc容器中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--扫描所有的dao接口，加入到ioc容器中--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"cn.blue.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置一个可以执行批量的sqlSession--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSession"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sessionFactory"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"executorType"</span> <span class="attr">value</span>=<span class="string">"BATCH"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--===========================--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--事务控制的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--控制数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"pooledDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启基于注解的事务，使用xml配置形式的事务(必要主要的都是配置式)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--切入点表达式:service及其service子包下的都用事务控制--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"txPoint"</span> <span class="attr">expression</span>=<span class="string">"execution(* cn.blue.service..*(..))"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置事务增强, pointcut-ref指切入哪方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"txPoint"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置事务增强，事务如何切入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所有方法都是事务方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--以get开始的所有方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>log4j.properties</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Global logging configuration</span><br><span class="line">log4j.rootLogger=TRACE, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line">#TRACE-&gt;DEBUG-&gt;WRAN-&gt;ERROR</span><br><span class="line">log4j.logger.cn.blue=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%t] - %m%n</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>mybatis-config.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"cn.blue.bean"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--分页插件配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">"com.github.pagehelper.PageInterceptor"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--分页合理化，页码正确：要是-1页就是首页--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"reasonable"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>dispatcherServlet-servlet.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.blue"</span> <span class="attr">use-default-filters</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--两个配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将springmvc不能处理的请求交给tomcat--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--能支持一些更高级的功能，JSR303校验，ajax等--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>web.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://java.sun.com/dtd/web-app_2_3.dtd"</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--启动spring的容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--前端控制器，拦截所有请求--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--字符编码过滤器,一定要放在所有过滤器之前的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncodingM<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用Rest风格的URI，将页面从普通的get/post请求转变成Put/delete方式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>dbconfig.properties</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jdbc.jdbcUrl=jdbc:mysql://localhost:3306/ssm_crud?serverTimezone=GMT%2b8</span><br><span class="line">jdbc.driverClass=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.user=账号</span><br><span class="line">jdbc.password=密码</span><br></pre></td></tr></table></figure>

<p>7<br> pom.xml</p>
<ul>
<li><strong><em>注意版本对应，不然可能会有兼容性问题</em></strong><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring相关的包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring mvc相关，实现SpringMVC的操作--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring提供对事务的支持，事务的相关处理以及实现类就在这个Jar包中--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--包含Spring 框架基本的核心工具类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit单元测试，需要版本对应--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--是一个为了测试为目的,且能组合成灵活表达式的匹配器类库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hamcrest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hamcrest-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--对Junit等测试框架的简单封装--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--导入mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--导入日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis的逆向工程--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--转换解析json--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--JSR303数据校验--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.18.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="JSR303数据校验"><a href="#JSR303数据校验" class="headerlink" title="JSR303数据校验"></a>JSR303数据校验</h2><ol>
<li><p>添加bean层校验规则</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span>,</span><br><span class="line">    message = <span class="string">"用户名需要输入6-16位字母和数字或者2-5位中文的组合\""</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Email</span></span><br><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"^([a-z0-9_.-]+)@([\\da-z.-]+)\\.([a-z.]&#123;2,6&#125;)$"</span> ,</span><br><span class="line">    message = <span class="string">"邮箱格式不合法"</span>)</span><br><span class="line"><span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取校验信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">saveEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            employeeService.saveEmp(employee);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>导入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSR303数据校验--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.18.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自定义封装Ajax返回值"><a href="#自定义封装Ajax返回值" class="headerlink" title="自定义封装Ajax返回值"></a>自定义封装Ajax返回值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于ajax</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span> <span class="keyword">extends</span> <span class="title">HashMap</span>&lt;<span class="title">String</span>, <span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">Result</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Result().setCode(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">error</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Result().setCode(code);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Result <span class="title">add</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.put(key, value);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Result <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.put(<span class="string">"code"</span>, code);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getValue(<span class="string">"code"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Result <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.put(<span class="string">"msg"</span>, msg);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getValue(<span class="string">"msg"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getValue</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (T) <span class="keyword">this</span>.get(key);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>ssm</tag>
        <tag>curd</tag>
      </tags>
  </entry>
  <entry>
    <title>前端小笔记</title>
    <url>/2020/01/12/%E5%89%8D%E7%AB%AF%E5%B0%8F%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文主要记录前端小笔记</p>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="绝对定位、相对定位、固定定位："><a href="#绝对定位、相对定位、固定定位：" class="headerlink" title="绝对定位、相对定位、固定定位："></a>绝对定位、相对定位、固定定位：</h3><p>绝对定位脱离了文档流，绝对定位元素渲染时它依赖的元素已经渲染完成 百分比是可以计算出来的。<br>而相对定位，子元素的高度会影响父元素，此时父元素高度未知，要等子元素高度确定，父元素高度才确定。<br>注意:单独使用relative的时候，top:%不会移动，但是换成px会移动。</p>
<h4 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位 relative"></a>相对定位 relative</h4><blockquote>
<p>设置right为正值，元素往左移动，bottom设置正值，元素往上移动。负值则往与正值相反的方向移动<br>设置left为正值，元素往右移动，top设置正值，元素往下移动。</p>
</blockquote>
<ul>
<li><strong>设置相对定位的盒子会相对它原来的位置，通过指定偏移</strong>，到达新的位置</li>
<li><strong>设置相对定位的盒子仍在标准文档流中</strong>，它对父级盒子和相邻的盒子都没有任何影响（没有脱离标准文档流）</li>
<li>设置相对定位的盒子原来的位置会被保留下来（之前的位置被空出来了，会影响页面布局）</li>
<li>相对定位的特性<ul>
<li>相对于自己的初始位置来定位</li>
<li>元素位置发生偏移后，它原来的位置会被保留下来（所以其他元素因此移动）</li>
<li>层级提高，可以把标准文档流中的元素及浮动元素盖在下边</li>
</ul>
</li>
<li>相对定位的使用场景<ul>
<li>相对定位一般情况下很少自己单独使用，都是配合绝对定位使用，为绝对定位创造定位父级而又不设置偏移量</li>
</ul>
</li>
</ul>
<h4 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位 absolute"></a>绝对定位 absolute</h4><ul>
<li>使用了绝对定位的元素以它<strong>最近的一个“已经定位”的“祖先元素” 为基准进行偏移</strong>（ 定位的基准是相对于最近的祖先元素在定位，没有则以浏览器窗口进行定位 ）</li>
<li>如果没有已经定位的祖先元素，会以浏览器窗口为基准进行定位</li>
<li>绝对定位的元素脱离标准文档流，这意味着它们对其他元素的定位不会造成影响</li>
<li>元素位置发生偏移后，它原来的位置不会被保留下来</li>
<li><strong>设置了绝对定位但没有设置偏移量的元素将保持在原来的位置。</strong><br>在网页制作中可以用于需要使某个元素脱离标准流，而仍然希望它保持在原来的位置的情况</li>
</ul>
<h4 id="固定定位-fixed"><a href="#固定定位-fixed" class="headerlink" title="固定定位 fixed"></a>固定定位 fixed</h4><ul>
<li>固定定位的特性<ul>
<li>相对浏览器窗口来定位</li>
<li>偏移量不会随滚动条的移动而移动</li>
</ul>
</li>
<li>固定定位的使用场景<ul>
<li>一般在网页中被用在窗口左右两边的固定广告、返回顶部图标、吸顶导航栏等</li>
</ul>
</li>
</ul>
<h3 id="CSS3渐变"><a href="#CSS3渐变" class="headerlink" title="CSS3渐变"></a>CSS3渐变</h3><h4 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h4><ul>
<li>颜色沿着一条直线过渡：从左到右、从右到左、从上到下等</li>
<li><strong>linear-gradient ( position渐变方向,  color1第一种颜色值,  color2第二种颜色,…)</strong><br>  To right从左到右</li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Java队列实现</title>
    <url>/2020/01/11/Java%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="队列简单介绍"><a href="#队列简单介绍" class="headerlink" title="队列简单介绍"></a>队列简单介绍</h2><p>队列是一种常用的数据结构之一，与之前的栈类似，不过队列是“先进先出”。队列有队头（front）和队尾（rear），数据从队尾进入队列，从队头出队列，队头（front）指向队列的第一个数据，队尾（rear）指向队列中的最后一个数据。</p>
<h2 id="队列实现"><a href="#队列实现" class="headerlink" title="队列实现"></a>队列实现</h2><p>队列有很多种，这里只是介绍最基本的实现，采用链式存储，也就是链式队列，与之前的链表存储形式一样，通过结点对象描述一个数据，结点对象包含具体数据和下一个结点的引用。<br><img src="https://img-blog.csdnimg.cn/20200111092616449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>队列有两个重要的概念，一个叫队头，一个叫队尾，队头指向的是第一个元素，而队尾指向的是最后一个元素。队列跟栈一样也是访问受限制的，所以队列也只有两个主要的操作：<strong>入队(enqueue)操作</strong> 和 <strong>出队(dequeue)操作</strong> 。入队操作就是将一个元素添加到队尾，出队操作就是从队头取出一个元素。</p>
<p>队列的底层实现可以用数组和链表，基于数组实现的队列叫作顺序队列，基于链表实现的队列叫作链式队列，下面我们分别用数组和链表来简单的实现这两种队列。</p>
<h2 id="基于数组的队列"><a href="#基于数组的队列" class="headerlink" title="基于数组的队列"></a>基于数组的队列</h2><p>不管使用那种方式来实现队列，都需要定义两个指针分别指向队头和队尾，本文中我们用head指向队头，tail指向队尾，后面的示例中这将默认使用这个，有特殊的地方我会进行说明，先来看看顺序队列的入队、出队操作。<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E9%98%9F%E5%88%97" alt=""><br>图中可以看出，入队时，队尾往后移动，队头保持不变，出队是队头往后移动，队尾保持不变。入队、出队操作的逻辑都比较简单，可能你有疑问的地方是：出队时为什么队头要往后移动而不是一直指向数组下标为0的位置？ 为什么呢？如果我们保持队头一直指向数组下标为0的位置，那每次出队操作后，后面的数据都需要往前挪一位，换句话说每次出队操作都需要进行数据迁移，而数据迁移的代价比较大，每次数据迁移的时间复杂度为O(n)，这样会极大的影响队列的使用性能。如果我们出队时，队头往后移动一位，这样我们就避免每次出队都进行数据迁移，我们只需要在只有在tail等于数组大小且head不等于0时，进行一次数据迁移，将已经出队留下的空间继续供入队时使用。下图是数据迁移的过程：<br><img src="https://img-blog.csdnimg.cn/20200111093909448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>数据迁移时，从head位置开始的数据都需要往前移动head位，这样就把出队后的空间腾出来，供后续入队操作使用。</p>
<h3 id="基于数组的队列实现代码："><a href="#基于数组的队列实现代码：" class="headerlink" title="基于数组的队列实现代码："></a>基于数组的队列实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于数组的队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存放数据的数组</span></span><br><span class="line">    <span class="keyword">private</span> String[] items;</span><br><span class="line">    <span class="comment">// 容器的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 最后一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tail = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">        items = <span class="keyword">new</span> String[size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 如果最后一个节点等于容器大小，说明队列满了</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 判断队列满了的条件，tail = size,head = 0,</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (tail == size &amp;&amp; head == <span class="number">0</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 如果tail = size，但是head != 0,说明前有数据删除，队列未满，需要数据迁移</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (tail == size)&#123;</span><br><span class="line">            <span class="comment">// head 后面的数据都需要往前迁移 head 位</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i= head;i&lt; size;i++)&#123;</span><br><span class="line">                items[i-head] = items[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 将最后一个元素迁移 head 位</span></span><br><span class="line">            tail -=head;</span><br><span class="line">            <span class="comment">// 第一个元素指向 0</span></span><br><span class="line">            head = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 向队列中添加元素</span></span><br><span class="line">        items[tail] = data;</span><br><span class="line"></span><br><span class="line">        tail++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 第一个元素和最后一个元素相等时，队列为空</span></span><br><span class="line">        <span class="keyword">if</span> (head == tail) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        String result = items[head];</span><br><span class="line">        <span class="comment">// 第一个元素后移一次，这样做的好处是在出队时不需要数据迁移</span></span><br><span class="line">        head ++ ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="链式队列"><a href="#链式队列" class="headerlink" title="链式队列"></a>链式队列</h2><p>链式队列实现起来相对顺序队列来说要简单很多，我们先来看看链式队列的入队、出队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E9%93%BE%E5%BC%8F%E9%98%9F%E5%88%97" alt=""><br>从图中可以看出链式队列入队操作是将tail的next指向新增的节点，然后将tail指向新增的节点，出队操作时，将head节点指向head.next节点。链式队列与顺序队列比起来不需要进行数据的迁移，但是链式队列增加了存储成本。</p>
<h3 id="基于链表的队列实现代码"><a href="#基于链表的队列实现代码" class="headerlink" title="基于链表的队列实现代码"></a>基于链表的队列实现代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于链表的队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指向队首</span></span><br><span class="line">    <span class="keyword">private</span> Node head;</span><br><span class="line">    <span class="comment">// 指向队尾</span></span><br><span class="line">    <span class="keyword">private</span> Node tail;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">        Node node = <span class="keyword">new</span> Node(data,<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">// 判断队列中是否有元素</span></span><br><span class="line">        <span class="keyword">if</span> (tail == <span class="keyword">null</span>) &#123;</span><br><span class="line">            tail = node;</span><br><span class="line">            head = node;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            tail.next = node;</span><br><span class="line">            tail = node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        String data = head.data;</span><br><span class="line">        head = head.next;</span><br><span class="line">        <span class="comment">// 取出元素后，头指针为空，说明队列中没有元素，tail也需要制为空</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            tail = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String data;</span><br><span class="line">        <span class="keyword">private</span> Node next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(String data,Node node)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.data = data;</span><br><span class="line">            next = node;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h2><p>循环队列是对顺序队列的改进，因为顺序队列不可避免的数据迁移操作，数据迁移操作会导致队列的性能下降，为了避免这个问题，将队列改造成循环的，当tail到达数组的最大下标时，重新指回数组下标为0的位置，这样就避免了数据迁移。先来看看循环队列的出队、入队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E9%98%9F%E5%88%97" alt=""><br>因为队列是循环队列，所以在进行入队、出队操作时，就不能像顺序队列那样对<strong>tail</strong>、<strong>head</strong>进行简单的加1操作，我们需要对<strong>tail</strong>、<strong>head</strong>加1后与数组的大小进行求余操作，来得出<strong>tail</strong>、<strong>head</strong>的值，这样才能进行循环操作。循环队列需要牺牲一个存储空间，对于一个存储空间为<strong>n</strong>的循环队列来说只能存放<strong>n-1</strong>为数据，因为如果不牺牲一个存储空间的话，当<strong>tail</strong>==<strong>head</strong>时，就有可能存在队空或者队满的情况。</p>
<h3 id="循环队列的实现代码"><a href="#循环队列的实现代码" class="headerlink" title="循环队列的实现代码"></a>循环队列的实现代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 环形队列,不需要数据迁移，提高性能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircularQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存放数据的数组</span></span><br><span class="line">    <span class="keyword">private</span> String[] items;</span><br><span class="line">    <span class="comment">// 容器的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 最后一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tail = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircularQueue</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">        items = <span class="keyword">new</span> String[size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 判断环形队列满了的条件，(tail+1)求余等于head</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> ((tail+<span class="number">1</span>)%size == head) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向队列中添加元素</span></span><br><span class="line">        items[tail] = data;</span><br><span class="line">        <span class="comment">// 因为是环形队列，所以下边是数组长度的余数</span></span><br><span class="line">        tail= (tail+<span class="number">1</span>)%size;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 第一个元素和最后一个元素相等时，队列为空</span></span><br><span class="line">        <span class="keyword">if</span> (head == tail) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        String result = items[head];</span><br><span class="line">        <span class="comment">// 因为是环形队列，所以下边是数组长度的余数</span></span><br><span class="line">        head = (head+<span class="number">1</span>)% size ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="双端队列"><a href="#双端队列" class="headerlink" title="双端队列"></a>双端队列</h2><p>双端队列是一种队头、队尾都可以进行入队、出队操作的队列，双端队列采用双向链表来实现，先来看一下双端队列的入队、出队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97" alt=""><br>可以从动态图中看出，双端队列的每一端都是一个栈，都符合栈先进后出的特性，如果我们对双端队列进行禁止队头入队和队尾出队操作的限制，双端队列又变成了一个链式队列，双端队列是一种多功能的数据结构，我们可以使用它来提供队列和栈两种功能。</p>
<h3 id="双端队列的实现代码"><a href="#双端队列的实现代码" class="headerlink" title="双端队列的实现代码"></a>双端队列的实现代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 双端队列，使用双向链表实现</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoubleEndsQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        String item;</span><br><span class="line">        Node next;</span><br><span class="line">        Node prev;</span><br><span class="line"></span><br><span class="line">        Node(Node prev, String element, Node next) &#123;</span><br><span class="line">            <span class="keyword">this</span>.item = element;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">            <span class="keyword">this</span>.prev = prev;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> Node first;</span><br><span class="line">    <span class="comment">// 最后一个节点</span></span><br><span class="line">    <span class="keyword">private</span> Node last;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 在第一个节点前面入队</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueueFirst</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Node f = first;</span><br><span class="line">        <span class="keyword">final</span> Node newNode = <span class="keyword">new</span> Node(<span class="keyword">null</span>, e, f);</span><br><span class="line">        <span class="comment">// 第一个节点指向新节点</span></span><br><span class="line">        first = newNode;</span><br><span class="line">        <span class="keyword">if</span> (f == <span class="keyword">null</span>)</span><br><span class="line">            <span class="comment">// 最后一个节点也指向该节点</span></span><br><span class="line">            last = newNode;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">// 当前节点的前节点指向新节点</span></span><br><span class="line">            f.prev = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在最后一个元素后面入队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueueLast</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Node l = last;</span><br><span class="line">        <span class="keyword">final</span> Node newNode = <span class="keyword">new</span> Node(l, e, <span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">// 最后一个节点指向新节点</span></span><br><span class="line">        last = newNode;</span><br><span class="line">        <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">            <span class="comment">// 第一个节点指向新节点</span></span><br><span class="line">            first = newNode;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">// 当前节点的下节点指向新节点</span></span><br><span class="line">            l.next = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从第一个节点出队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeueFirst</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (first == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">final</span> Node f = first;</span><br><span class="line">        String element = f.item;</span><br><span class="line">        Node next = f.next;</span><br><span class="line">        f.item = <span class="keyword">null</span>;</span><br><span class="line">        f.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 第一个节点指向当先节点的next节点</span></span><br><span class="line">        first = next;</span><br><span class="line">        <span class="keyword">if</span> (next == <span class="keyword">null</span>)</span><br><span class="line">            <span class="comment">// 说明队列为空</span></span><br><span class="line">            last = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            next.prev = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> element;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从最后节点出队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeueLast</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Node l = last;</span><br><span class="line">        <span class="keyword">if</span> (last == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        String element = l.item;</span><br><span class="line">        Node prev = l.prev;</span><br><span class="line">        l.item = <span class="keyword">null</span>;</span><br><span class="line">        l.prev = <span class="keyword">null</span>;</span><br><span class="line">        last = prev;</span><br><span class="line">        <span class="keyword">if</span> (prev == <span class="keyword">null</span>)</span><br><span class="line">            first = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            prev.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> element;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出队列全部内容</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (first !=<span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.print(first.item+<span class="string">" "</span>);</span><br><span class="line">            first = first.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"==============="</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="优先队列"><a href="#优先队列" class="headerlink" title="优先队列"></a>优先队列</h2><p>优先队列为一种不必遵循队列先进先出(FIFO)特性的特殊队列，优先队列跟普通队列一样都只有一个队头和一个队尾并且也是从队头出队，队尾入队，不过在优先队列中，每次入队时，都会按照入队数据项的关键值进行排序(从大到小、从小到大)，这样保证了关键字最小的或者最大的项始终在队头，出队的时候优先级最高的就最先出队，这个就像我们医院就医一样，急救的病人要比普通的病人先就诊。一起来看看优先队列的出队、入队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97" alt=""><br>在示例中，我们规定数值越小优先级越高。我们每执行一次入队操作时，小的元素都会靠近头队，在出队的时候，元素小的也就先出队。</p>
<h3 id="优先队列的代码实现"><a href="#优先队列的代码实现" class="headerlink" title="优先队列的代码实现"></a>优先队列的代码实现</h3><p>这里使用的数组实现优先队列，用数组实现主要原因是更好理解优先队列的思想。一般都是使用堆来实现优先队列，因为数组实现在插入的时候对数据的排序代价比较大。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 优先队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PriorityQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存放数据的数组</span></span><br><span class="line">    <span class="keyword">private</span> Integer[] items;</span><br><span class="line">    <span class="comment">// 容器的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PriorityQueue</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">        items = <span class="keyword">new</span> Integer[size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(Integer data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="number">0</span>)&#123;</span><br><span class="line">            items[head++] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (j=head-<span class="number">1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">                <span class="comment">// 将小的数往后排</span></span><br><span class="line">                <span class="keyword">if</span> (data &gt; items[j])&#123;</span><br><span class="line">                    items[j+<span class="number">1</span>] = items[j];</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            items[j+<span class="number">1</span>] = data;</span><br><span class="line">            head++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> items[--head];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li><p>队列是一种遵循先进先出(FIFO)的数据结构</p>
</li>
<li><p>队列可以使用数组和链表实现，数组实现叫作顺序队列，链表实现叫作链- 式队列</p>
</li>
<li><p>循环队列解决了顺序队列的数据迁移带来的性能损耗的问题</p>
</li>
<li><p>双端队列是队头和队尾都可以进行入队、出队操作的队列</p>
</li>
<li><p>优先队列是一种不必遵循先进先出规则的队列，任意元素加入时，都会讲- 优先级最高的放入到队头</p>
<p>  <a href="https://juejin.im/post/5d5fb74fe51d45620346b8d0" target="_blank" rel="noopener">参考链接</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构与算法</tag>
        <tag>队列</tag>
      </tags>
  </entry>
  <entry>
    <title>Java数据结构与算法</title>
    <url>/2020/01/09/Java%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h1 id="学习总结-尚硅谷2019java数据结构和算法"><a href="#学习总结-尚硅谷2019java数据结构和算法" class="headerlink" title="学习总结:尚硅谷2019java数据结构和算法"></a>学习总结:尚硅谷2019java数据结构和算法</h1><h2 id="线性结构和非线性结构"><a href="#线性结构和非线性结构" class="headerlink" title="线性结构和非线性结构"></a>线性结构和非线性结构</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWctbXkuY3Nkbi5uZXQvdXBsb2Fkcy8yMDEyMDQvMjYvMTMzNTQ0OTM5OF83NTA0LnBuZw?x-oss-process=image/format,png" alt=""><br><img src="https://img-blog.csdnimg.cn/20200110093408230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="线性结构"><a href="#线性结构" class="headerlink" title="线性结构"></a>线性结构</h3><ul>
<li>是一个有序数据元素的集合。 其中数据元素之间的关系是一对一的关系，即除了第一个和最后一个数据元素之外，其它数据元素都是首尾相接的。</li>
<li>常用的线性结构有：线性表，栈，队列，双队列，数组，串。</li>
<li>特点：<ul>
<li>1．集合中必存在唯一的一个”第一个元素”；</li>
<li>2．集合中必存在唯一的一个”最后的元素”；</li>
<li>3．除最后元素之外，其它数据元素均有唯一的”后继”；</li>
<li>4．除第一元素之外，其它数据元素均有唯一的”前驱”。</li>
<li>5．数据结构中线性结构指的是数据元素之间存在着“一对一”的线性关系的数据结构。</li>
</ul>
</li>
</ul>
<h3 id="非线性结构"><a href="#非线性结构" class="headerlink" title="非线性结构"></a>非线性结构</h3><ul>
<li>各个数据元素不再保持在一个线性序列中，每个数据元素可能与零个或者多个其他数据元素发生联系。</li>
<li>根据关系的不同，可分为层次结构和群结构。</li>
<li>常见的非线性结构有：二维数组，多维数组，广义表，树(二叉树等)。（其中多维数组是由多个一维数组组成的，所以不再是线性结构）</li>
<li>特点：<ul>
<li>非线性结构的逻辑特征是一个结点元素可能对应多个直接前驱和多个后继</li>
</ul>
</li>
</ul>
<h2 id="稀疏数组和队列"><a href="#稀疏数组和队列" class="headerlink" title="稀疏数组和队列"></a>稀疏数组和队列</h2><h3 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h3><ul>
<li><h4 id="稀疏数组介绍"><a href="#稀疏数组介绍" class="headerlink" title="稀疏数组介绍"></a>稀疏数组介绍</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008171353296-1873771023.png" alt=""></li>
<li><h4 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008171433194-1391110051.png" alt=""></li>
<li><h4 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008172426051-868490732.png" alt=""><br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008183810690-14981835.png" alt=""></li>
<li><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><ul>
<li><a href="">SparseArray.java</a>：与二维数组的转换，包括二维转稀疏，和稀疏转二维。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * 稀疏数组思路分析：与二维数组的转换，包括二维转稀疏，和稀疏转二维</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArray</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个原始的二维数组11*11: 0：没有棋子，1表示黑子，2表示蓝子</span></span><br><span class="line">        <span class="keyword">int</span>[][] chessArr1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        chessArr1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        chessArr1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        chessArr1[<span class="number">4</span>][<span class="number">5</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出原始的二维数组</span></span><br><span class="line"><span class="comment">//        int[] arr = new  int[]&#123;1,2,3&#125;;</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(arr));</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.deepToString(chessArr1));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出原始的二维数组</span></span><br><span class="line">        System.out.println(<span class="string">"原始的二维数组："</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row : chessArr1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将二维数组 转 稀疏数组</span></span><br><span class="line">        <span class="comment">//1、先遍历二维数组，得到非0数据的个数</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chessArr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArr1[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArr1[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"输出的值个数"</span> + sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、创建对应的稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArr = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        <span class="comment">//给稀疏数组列中的行赋值</span></span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">0</span>] = chessArr1.length;</span><br><span class="line">        <span class="comment">//给稀疏数组列中的列赋值</span></span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">1</span>] = chessArr1[<span class="number">0</span>].length;</span><br><span class="line">        <span class="comment">//给稀疏数组列中的值赋值</span></span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        System.err.println(<span class="string">"赋值第一行后的稀疏数组："</span> + Arrays.deepToString(sparseArr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.遍历二维数组，将非0的值存放到稀疏数组中。</span></span><br><span class="line">        <span class="comment">//用于记录是第几个非0数据</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chessArr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArr1[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArr1[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    sparseArr[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArr[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArr[count][<span class="number">2</span>] = chessArr1[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.err.println(<span class="string">"赋值后的稀疏数组："</span> + Arrays.deepToString(sparseArr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出稀疏数组的完整样式</span></span><br><span class="line">        System.err.println(<span class="string">"======输出稀疏数组的完整样式: sparseArr.length == 4,获取的是二维数组的列数长度"</span>);</span><br><span class="line">        <span class="comment">//1.</span></span><br><span class="line">        IntStream.range(<span class="number">0</span>, sparseArr.length).forEach(i -&gt;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t%d\t%d\t\n"</span>, sparseArr[i][<span class="number">0</span>], sparseArr[i][<span class="number">1</span>], sparseArr[i][<span class="number">2</span>]));</span><br><span class="line">        <span class="comment">//2.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] sparse : sparseArr</span><br><span class="line">        ) &#123;</span><br><span class="line">            System.out.println(Arrays.toString(sparse));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.</span></span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; sparseArr.length) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"%d\t%d\t%d\t\n"</span>, sparseArr[k][<span class="number">0</span>], sparseArr[k][<span class="number">1</span>], sparseArr[k][<span class="number">2</span>]);</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArr.length; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"%d\t%d\t%d\t\n"</span>, sparseArr[i][<span class="number">0</span>], sparseArr[i][<span class="number">1</span>], sparseArr[i][<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将稀疏数组 转 二维数组：读取稀疏数组的行列</span></span><br><span class="line">        <span class="keyword">int</span> chessArr2[][] = <span class="keyword">new</span> <span class="keyword">int</span>[sparseArr[<span class="number">0</span>][<span class="number">0</span>]][sparseArr[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="comment">//再读取稀疏数组后几行的数组，并赋给原始的二维数组即可。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sparseArr.length; i++) &#123;</span><br><span class="line">            chessArr2[sparseArr[i][<span class="number">0</span>]][sparseArr[i][<span class="number">1</span>]] = sparseArr[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"换成二维数组后的："</span> + Arrays.deepToString(chessArr2));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出还原后的二维数组</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; chessArr2.length) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArr2[i].length; j++) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span> , chessArr2[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>代码总结<ul>
<li>二维数组.length == 二维数组列的长度</li>
<li>使用占位符输出System.out.printf(“%d\t” , 值);</li>
</ul>
</li>
<li><h4 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009170736387-334842377.png" alt=""></li>
</ul>
<h3 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h3><ul>
<li><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><ul>
<li>先进先出，有序列表</li>
<li>可用数组或链表实现。数组（顺序存储），链表（链式存储）。</li>
<li>图示：使用数组模拟队列<br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009171442528-1920318177.png" alt=""></li>
</ul>
</li>
<li><h4 id="数组模拟队列"><a href="#数组模拟队列" class="headerlink" title="数组模拟队列"></a>数组模拟队列</h4><ul>
<li><strong>问题</strong>：<ul>
<li>目前数组不能复用，一次性。</li>
<li>使用取模的环形队列来改进<br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009190439047-831444374.png" alt=""></li>
</ul>
</li>
<li>代码实现：<br><a href="">ArrayQueueDemo.java</a>：用数组实现队列的五个小功能，并通过主函数验证(因为还不是环形队列，存在一些缺陷）</li>
</ul>
</li>
<li><h4 id="数组模拟环形队列"><a href="#数组模拟环形队列" class="headerlink" title="数组模拟环形队列"></a>数组模拟环形队列</h4><ul>
<li><strong>分析</strong><ul>
<li>重新设置rear和front的初始值均为0，且front指向第一个元-素，rear指向最后一个元素的后一个位置，并且预留一个空格-的位置，即若只剩一个空，视为满。</li>
<li>队满：(rear+1)%maxSize == front;</li>
<li>队空：rear==front</li>
<li>元素个数：(rear-front+maxSize)%maxSize</li>
</ul>
</li>
<li><strong>图示</strong><br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009213838087-567112643.png" alt=""><br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009213927550-846255614.png" alt=""></li>
<li><strong>代码实现</strong><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2020/1/10</span></span><br><span class="line"><span class="comment">* 队列：</span></span><br><span class="line"><span class="comment">* 重新设置rear和front的初始值均为0，且front指向第一个元素，rear指向最后一个元素的后一个位置，并且预留一个空格的位置，</span></span><br><span class="line"><span class="comment">* 即若只剩一个空，视为满。</span></span><br><span class="line"><span class="comment">* 队满：(rear+1)%maxSize == front;</span></span><br><span class="line"><span class="comment">* 队空：rear==front</span></span><br><span class="line"><span class="comment">* 元素个数：(rear-front+maxSize)%maxSize</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个队列</span></span><br><span class="line">        ArrayQueue arrayQueue = <span class="keyword">new</span> ArrayQueue(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//用来接收输入的值</span></span><br><span class="line">        <span class="keyword">char</span> value = <span class="string">' '</span>;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"s(show)：显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"a(add)：添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"g(get)：从队列中获取元素"</span>);</span><br><span class="line">            System.out.println(<span class="string">"h(head)：查看队列头的数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"e(exit)：退出程序"</span>);</span><br><span class="line">            System.err.println(<span class="string">"请选择如下的操作:"</span>);</span><br><span class="line">            value = scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">switch</span> (value) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    arrayQueue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.err.print(<span class="string">"请输入需要添加的值："</span>);</span><br><span class="line">                    <span class="keyword">int</span> addValue = scanner.nextInt();</span><br><span class="line">                    arrayQueue.addQueue(addValue);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = arrayQueue.getQueue();</span><br><span class="line">                        System.out.printf(<span class="string">"取出的数据是%d\n"</span>,res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = arrayQueue.showHead();</span><br><span class="line">                        System.out.printf(<span class="string">"取出的数据是%d\n"</span>,res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cn.blue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2020/1/10</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 数组的最大容量</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 队列头</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 队列尾</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 用于存放数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        maxSize = capacity;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">        <span class="comment">// 指向队列头部，分析出front是指向队列头的前一个位置</span></span><br><span class="line">        front = -<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//指向队列尾，指向队列尾的数据（即队列最后一个数据）</span></span><br><span class="line">        rear = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> front == rear;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == maxSize - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加数据到队列</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.err.println(<span class="string">"队列已满，不能加入数据"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        rear++;</span><br><span class="line">        arr[rear] = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 获得队列的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列数据不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//front后移,出列</span></span><br><span class="line">        front++;</span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 显示队列的所有数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否是空的</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.err.println(<span class="string">"目前队列数据为空，请先添加"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.err.printf(<span class="string">"arr[%d]=%d\n"</span>, i, arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 显示队列的头数据，注意不是取出</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">showHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列数据不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//注意：front指向的是队列头的前一个数据。（更小的一个位置）</span></span><br><span class="line">        <span class="keyword">return</span> arr[front + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a href="/2020/01/11/Java队列实现/">以上代码实现只能带我们初步认识队列，具体参考</a></li>
</ul>
</li>
</ul>
<h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="链表-LinkedList-介绍"><a href="#链表-LinkedList-介绍" class="headerlink" title="链表(LinkedList)介绍"></a>链表(LinkedList)介绍</h3><p>链表是有序的列表，但是它在内存中是存储如下<br><img src="https://img-blog.csdnimg.cn/20200113092843919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><strong>小结:</strong></p>
<ol>
<li>链表是以节点的方式来存储,是链式存储</li>
<li>每个节点包含 data 域， next 域：指向下一个节点.</li>
<li>如图：发现链表的各个节点不一定是连续存储.</li>
<li>链表分带头节点的链表和没有头节点的链表，根据实际的需求来确定</li>
</ol>
<h3 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h3><h4 id="单链表介绍"><a href="#单链表介绍" class="headerlink" title="单链表介绍"></a>单链表介绍</h4><p>单链表(带头结点) 逻辑结构示意图如下<br><img src="https://img-blog.csdnimg.cn/20200113093234889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h4 id="单链表的应用实例"><a href="#单链表的应用实例" class="headerlink" title="单链表的应用实例"></a>单链表的应用实例</h4><p><strong>使用带head头的单向链表实现 –水浒英雄排行榜管理 完成对英雄人物的增删改查操作</strong></p>
<p>解题思路:</p>
<p><img src="https://img-blog.csdnimg.cn/20200113093712217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><img src="https://img-blog.csdnimg.cn/20200113093814617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><img src="https://img-blog.csdnimg.cn/20200113094416679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><strong>代码实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * 单链表的应用实例</span></span><br><span class="line"><span class="comment"> * 使用带head头的单向链表实现 –水浒英雄排行榜管理 完成对英雄人物的增删改查操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedListDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HeroNode heroNode1 = <span class="keyword">new</span> HeroNode(<span class="number">1</span>, <span class="string">"鲁智深"</span>, <span class="string">"花和尚"</span>);</span><br><span class="line">        HeroNode heroNode2 = <span class="keyword">new</span> HeroNode(<span class="number">2</span>, <span class="string">"李逵"</span>, <span class="string">"黑旋风"</span>);</span><br><span class="line">        HeroNode heroNode3 = <span class="keyword">new</span> HeroNode(<span class="number">3</span>, <span class="string">"吴用"</span>, <span class="string">"智多星"</span>);</span><br><span class="line">        HeroNode heroNode4 = <span class="keyword">new</span> HeroNode(<span class="number">4</span>, <span class="string">"林冲"</span>, <span class="string">"豹子头"</span>);</span><br><span class="line">        SingleLinkedList singleLinkedList = <span class="keyword">new</span> SingleLinkedList();</span><br><span class="line">        singleLinkedList.addByOrder(heroNode1);</span><br><span class="line">        singleLinkedList.addByOrder(heroNode4);</span><br><span class="line">        singleLinkedList.addByOrder(heroNode2);</span><br><span class="line">        singleLinkedList.addByOrder(heroNode3);</span><br><span class="line">        singleLinkedList.list();</span><br><span class="line">        HeroNode heroNode5 = <span class="keyword">new</span> HeroNode(<span class="number">4</span>, <span class="string">"smile"</span>, <span class="string">"豹子头~~"</span>);</span><br><span class="line">        System.out.println(<span class="string">"修改后的链表"</span>);</span><br><span class="line">        singleLinkedList.update(heroNode5);</span><br><span class="line">        singleLinkedList.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedList</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个空的头结点：头结点的Data域可以不设任何信息，也可以记录表长等相关信息</span></span><br><span class="line">        <span class="keyword">private</span> HeroNode head = <span class="keyword">new</span> HeroNode(<span class="number">0</span>, <span class="string">" "</span>, <span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回头结点</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> HeroNode <span class="title">getHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//链表按序号顺序添加数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addByOrder</span><span class="params">(HeroNode node)</span> </span>&#123;</span><br><span class="line">            HeroNode temp = head;</span><br><span class="line">            <span class="comment">//标示编号是否存在</span></span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="comment">//用来判断链表是否为空，已经如果现有链表中没有比要插入的数据大的id，可以通过此来跳出循环</span></span><br><span class="line">                <span class="keyword">if</span> (temp.getNext() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (temp.getNext().getId() &gt; node.getId()) &#123;</span><br><span class="line">                    <span class="comment">// 1 ,3 , 2, 4.由于1小于3，故插入在1 2 之间</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp.getNext().getId() == node.getId()) &#123;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                temp = temp.getNext();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="comment">//链表为空</span></span><br><span class="line">                System.out.printf(<span class="string">"准备插入的英雄编号%d已经存在，不能插入"</span>, head.getId());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                node.setNext(temp.getNext());</span><br><span class="line">                temp.setNext(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//展示链表所有数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">//判断链表是否为空</span></span><br><span class="line">            <span class="keyword">if</span> (head.getNext() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            HeroNode temp = head.getNext();</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"遍历结束"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(temp);</span><br><span class="line">                temp = temp.getNext();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//修改链表存在的数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(HeroNode node)</span> </span>&#123;</span><br><span class="line">            HeroNode temp = head.getNext();</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(temp == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="comment">//遍历结束</span></span><br><span class="line">                    System.out.println(<span class="string">"没有找到该节点"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (temp.getId() == node.getId()) &#123;</span><br><span class="line">                    <span class="comment">//链表中已存在相同编号的数据</span></span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                    temp.setId(node.getId());</span><br><span class="line">                    temp.setName(node.getName());</span><br><span class="line">                    temp.setNikeName(node.getNikeName());</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                temp = temp.getNext();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 节点对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">HeroNode</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> String nikeName;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 下一节点</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> HeroNode next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HeroNode</span><span class="params">(<span class="keyword">int</span> id, String name, String nikeName)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.nikeName = nikeName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNikeName</span><span class="params">(String nikeName)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.nikeName = nikeName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(HeroNode next)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getNikeName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> nikeName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> HeroNode <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"HeroNode&#123;"</span> +</span><br><span class="line">                    <span class="string">"id="</span> + id +</span><br><span class="line">                    <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">", nikeName='"</span> + nikeName + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><p><strong>1.求单链表中有效节点的个数</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">(HeroNode head)</span> </span>&#123;</span><br><span class="line">    HeroNode temp = head;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (temp.getNext() == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp.getNext() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        temp = temp.getNext();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"length: "</span> + count);</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>2.查找单链表中的倒数第k个结点 【新浪面试题】</strong></p>
<ul>
<li>代码实现：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查找单链表中的倒数第k个结点 【新浪面试题】</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> index 倒数第k个</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 结点</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> HeroNode <span class="title">getNodeByIndex</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">    HeroNode temp = head;</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(temp.getNext() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        size++;</span><br><span class="line">        temp = temp.getNext();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//校验给出的索引</span></span><br><span class="line">    HeroNode node = head.getNext();</span><br><span class="line">    <span class="keyword">if</span>(index &gt; size || index &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"输入数据不合理"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line">    HeroNode nodeByIndex = head.getNext();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(cur == size - index)&#123;</span><br><span class="line">            <span class="keyword">return</span> nodeByIndex;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nodeByIndex.getNext() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"遍历结束，未找到索引对应的结点"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cur++;</span><br><span class="line">        nodeByIndex = nodeByIndex.getNext();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>3.单链表的反转【腾讯面试题，有点难度】</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200113095142187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<ul>
<li>代码实现:<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>工作中的Bug</title>
    <url>/2020/01/09/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84Bug/</url>
    <content><![CDATA[<p>本文旨在记录我在公司项目上遇到的Bug问题，以及解决思路：<br>##状态码问题</p>
<h3 id="400"><a href="#400" class="headerlink" title="400"></a>400</h3><blockquote>
<p>简单传递：1.注意参数匹配，如果缺少参数也会访问不了<br>Ajax传递：<br>1.注意加@ResponseBody注解(有时候代码正确，但是无法访问，因为 前端是json格式，但是后端解析不了)<br>2.文件上传的话需要添加：MultipartFile参数接收上传文件内容</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">①：</span><br><span class="line"><span class="comment">//点击图片</span></span><br><span class="line">$(<span class="string">"#uploadImage"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//触发input[file类型]</span></span><br><span class="line">    $(<span class="string">"#fileImage"</span>).click();</span><br><span class="line">    <span class="comment">//点击提交按钮上传图片</span></span><br><span class="line">    $(<span class="string">"#btnUpload"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//获取input[file类型]的值</span></span><br><span class="line">        <span class="keyword">let</span> fileImage = $(<span class="string">"#fileImage"</span>);</span><br><span class="line">        <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">        formData.append(<span class="string">"file"</span>, fileImage.get(<span class="number">0</span>).files[<span class="number">0</span>]);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="comment">//请求地址</span></span><br><span class="line">            url: <span class="string">'[[@&#123;/user/upload&#125;]]'</span>,</span><br><span class="line">            type: <span class="string">'post'</span>,</span><br><span class="line">            dataType: <span class="string">'json'</span>,</span><br><span class="line">            data: formData,</span><br><span class="line">            <span class="comment">//ajax上传图片需要添加.</span></span><br><span class="line">            contentType: <span class="literal">false</span>,</span><br><span class="line">            processData: <span class="literal">false</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">"上传成功"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">②：</span><br><span class="line">$(<span class="string">"#fileImage"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#uploadImage"</span>).click();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//选中文件后立即上传</span></span><br><span class="line">$(<span class="string">"#fileUpload"</span>).on(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    <span class="keyword">let</span> uploadImage = $(<span class="string">"#uploadImage"</span>);</span><br><span class="line">    formData.append(<span class="string">"file"</span>, uploadImage.get(<span class="number">0</span>).files[<span class="number">0</span>]);</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'[[@&#123;user/upload&#125;]]'</span>,</span><br><span class="line">        data: formData,</span><br><span class="line">        dataType: <span class="string">'json'</span>,</span><br><span class="line">        type: <span class="string">'post'</span>,</span><br><span class="line">        contentType: <span class="literal">false</span>,</span><br><span class="line">        processData: <span class="literal">false</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            layer.open(&#123;</span><br><span class="line">                title: <span class="string">"上传成功"</span>,</span><br><span class="line">                content: data.msg,</span><br><span class="line">                yes: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    parent.location.reload();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title>Java小笔记</title>
    <url>/2020/01/08/Java%E5%B0%8F%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>java每日小笔记</p>
<h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (File f : files) &#123;</span><br><span class="line">    System.out.println(f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>foreach相对于for循环，代码减少了，但是foreach依赖IEnumerable(IEnumerable是一个接口，它定义一个方法GetEnumerator，它返回一个IEnumerator接口，这允许只读访问一个集合，然后实现IEnumerable的集合可以与for-each语句一起使用)。<br>在运行的时候效率低于for循环。当然了，在处理不确定循环次数的循环，或者循环次数需要计算的情况下，使用foreach比较方便。而且foreach的代码经过编译系统的代码优化后，和for循环的循环类似。</p>
<ul>
<li>如果只是遍历集合或者数组，用foreach好些，快些。</li>
<li>如果对集合中的值进行修改，确定循环次数就要用for循环了。<h2 id="日期转换"><a href="#日期转换" class="headerlink" title="日期转换"></a>日期转换</h2><h3 id="SimpleDateFormate简单用法"><a href="#SimpleDateFormate简单用法" class="headerlink" title="SimpleDateFormate简单用法"></a>SimpleDateFormate简单用法</h3>Date类型转化成为String<br>①.<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line"> SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>); </span><br><span class="line">String date=sdf.formate(date);（字符串时间格式不同）</span><br></pre></td></tr></table></figure>
②.<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SimpleDateFormat sdf1 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日  HH时mm分ss秒"</span>);</span><br></pre></td></tr></table></figure>
注意：用Mybatis往Mysql中添加时间时候，mysql 类型datetime ，往里面存是 时间对象可以是String和java.sql.Timestamp 两种类型，String类型的时间必须是“yyyyu-MM-dd HH:mm:ss”格式<br>String 类型转化成Date<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>); </span><br><span class="line">Date start = sdf.parse(startTime);</span><br></pre></td></tr></table></figure>
注意：传递进来的startTime是String类型的字符串，其格式必须和SimpleDateFormate里面的参数形式一直，不能任何格式的字符串都可以转化，要不出现转发异常<h2 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h2><h3 id="空间复杂度：以时间换空间"><a href="#空间复杂度：以时间换空间" class="headerlink" title="空间复杂度：以时间换空间"></a>空间复杂度：以时间换空间</h3></li>
<li><em>对一个算法在运行过程中临时占用存储空间大小的量度*</em><br>目的：找出roles集合中是否有与userInfo中id相同的，如果有就setChecked(true)，即被选中<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Role&gt; roles = roleService.find(<span class="keyword">null</span>);</span><br><span class="line">UserInfo userInfo = userInfoService.findByI(id);</span><br><span class="line"></span><br><span class="line">Map&lt;Integer,Role&gt; roleMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(Role role : roles) &#123;</span><br><span class="line">    roleMap.put(role.getId(), role);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(Role r : userInfo.getRoles()) &#123;</span><br><span class="line">    <span class="keyword">if</span>(roleMap.containsKey(r.getId())) &#123;</span><br><span class="line">        roleMap.get(r.getId()).setChecked(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度：以空间换时间"><a href="#时间复杂度：以空间换时间" class="headerlink" title="时间复杂度：以空间换时间"></a>时间复杂度：以空间换时间</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Role&gt; roles = roleService.find(<span class="keyword">null</span>);</span><br><span class="line">UserInfo userInfo = userInfoService.findByI(id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Role role : roles) &#123;</span><br><span class="line">    <span class="keyword">for</span>(Role r : userInfo.getRoles()) &#123;</span><br><span class="line">        role.setChecked(role.getId() == r.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//时间复杂度为:O(n²)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">100</span>;<span class="comment">//执行次数:1</span></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;<span class="comment">//执行次数:1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;<span class="comment">//执行次数:n</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;<span class="comment">//执行次数:n*n</span></span><br><span class="line">            sum += j;<span class="comment">//执行次数:n*n</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="请求转发和重定向的区别和应用场景"><a href="#请求转发和重定向的区别和应用场景" class="headerlink" title="请求转发和重定向的区别和应用场景"></a>请求转发和重定向的区别和应用场景</h2><h3 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h3></li>
<li><em>一次请求，两次转发*</em><br>request.getRequestDispatcher(URL地址).forward(request, response)<br>处理流程：<blockquote>
<p>1.客户端发送请求，Servlet做出业务逻辑处理。</p>
</blockquote>
</li>
</ul>
<p>2.Servlet调用forword()方法，服务器Servlet把目标资源返回给客户端浏览器。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy85Mzg3MDctYWExMmIxYjFmNTUwZGY2Yy5wbmc?x-oss-process=image/format,png" alt="请求转发"><br><strong>注：请求转发会返回到资源的相对目录下</strong></p>
<h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p><strong>两次请求，两次转发</strong><br>response.sendRedirect(URL地址)<br>处理流程：</p>
<blockquote>
<p>1.客户端发送请求，Servlet做出业务逻辑处理。<br>2.Servlet调用response.sendReadirect()方法，把要访问的目标资源作为response响应头信息发给客户端浏览器(web客户端)。<br>3.客户端浏览器重新访问服务器资源xxx.jsp，<br>4.服务器再次对客户端浏览器做出响应。</p>
</blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy85Mzg3MDctNjc0MTQyYTliZmEyMmRhNS5wbmc?x-oss-process=image/format,png" alt="重定向"><br><strong>注：重定向能调用在controller中对应返回地址的方法</strong></p>
<h2 id="cookie-是什么和使用场景"><a href="#cookie-是什么和使用场景" class="headerlink" title="cookie 是什么和使用场景"></a>cookie 是什么和使用场景</h2><p><strong>cookie 是服务器端保存在浏览器的一小段文本信息，浏览器每次向服务器端发出请求，都会附带上这段信息</strong></p>
<h3 id="使用场景："><a href="#使用场景：" class="headerlink" title="使用场景："></a>使用场景：</h3><ul>
<li>对话管理：保存登录、购物车等需要记录的信息</li>
<li>个性化：保存用户的偏好，比如网页的字体大小、背景色等等</li>
<li>追踪：记录和分析用户的行为</li>
</ul>
<h4 id="Cookie的创建"><a href="#Cookie的创建" class="headerlink" title="Cookie的创建"></a>Cookie的创建</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCookie</span><span class="params">(HttpServletRequest request,String cookieName)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Cookie[] cookies =  request.getCookies();</span><br><span class="line">        <span class="keyword">if</span>(cookies != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(Cookie cookie : cookies)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cookie.getName().equals(cookieName))&#123;</span><br><span class="line">                    <span class="keyword">return</span> cookie.getValue();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeCookie</span><span class="params">(HttpServletResponse response, String cookieName,String value)</span></span>&#123;</span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(cookieName,value);</span><br><span class="line">        <span class="comment">// 只能资源目录下能使用Cookie</span></span><br><span class="line">        cookie.setPath(<span class="string">"/"</span>);</span><br><span class="line">        cookie.setMaxAge(<span class="number">3600</span>);</span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Seesion-和-Cookie的结合应用"><a href="#Seesion-和-Cookie的结合应用" class="headerlink" title="Seesion 和 Cookie的结合应用"></a>Seesion 和 Cookie的结合应用</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/page"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(@CookieValue(value = <span class="string">"token"</span>, required = <span class="keyword">false</span>)</span> Cookie cookie) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (cookie != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//如果cookie不为空则说明已经d登陆 则直接跳转主界面</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">"/index"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//TODO 重定向次数过多 使用redirect，会再次调用controller层的login方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/login/page"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(UserInfo userInfo, HttpSession session, HttpServletResponse response, ModelMap map)</span> </span>&#123;</span><br><span class="line">        UserInfo user = userInfoService.findOneUser(userInfo);</span><br><span class="line">        <span class="comment">//判断用户名密码是否正确</span></span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            session.setAttribute(ApplicationConst.LOGIN_SESSION_STATUS, user);</span><br><span class="line">            <span class="comment">//生成token</span></span><br><span class="line">            String token = UUID.randomUUID().toString();</span><br><span class="line">            <span class="comment">//创建cookie</span></span><br><span class="line">            Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"token"</span>, token);</span><br><span class="line">            <span class="comment">// 3、设置 cookie 的有效时间，就浏览器关闭不会清楚此Cookie，但是谷歌浏览器依旧删除了:</span></span><br><span class="line">            <span class="comment">// 设置有效期 单位是秒，不是毫秒</span></span><br><span class="line">            <span class="comment">// 默认情况下创建的 cookie 是一个会话级别的 cookie，即存储在浏览器内存中，浏览器关闭，cookie 消失。</span></span><br><span class="line">            <span class="comment">// 正整数：表示将 cookie 保存到浏览器的缓存目录(硬盘)中，数值表示保存的时间；</span></span><br><span class="line">            <span class="comment">// 负整数：表示将 cookie 保存到浏览器的内存中，浏览器关闭 cookie 就会销毁；</span></span><br><span class="line">            <span class="comment">// 0：表示删除同名的 cookie,删除 cookie 时，有效路径必须一致，否则不会删除</span></span><br><span class="line">            cookie.setMaxAge(<span class="number">20</span> * <span class="number">60</span>);</span><br><span class="line">            <span class="comment">//将cookie响应给浏览器</span></span><br><span class="line">            response.addCookie(cookie);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"账号或密码错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/login/page"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/logout"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">logout</span><span class="params">(HttpSession session)</span> </span>&#123;</span><br><span class="line">        session.invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/login/page"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="Arrays-toString-数组"><a href="#Arrays-toString-数组" class="headerlink" title="Arrays.toString(数组)"></a>Arrays.toString(数组)</h3><ul>
<li><p>Arrays类中只可以用toString()方法进行遍历一维数组,而不可以用deepToString(Object a)</p>
</li>
<li><p>操作一维数组：</p>
<blockquote>
<p>int[] arr = new  int[]{1,2,3};<br>  输出：[1, 2, 3]</p>
</blockquote>
</li>
<li><p>操作二维数组：</p>
<ul>
<li><p><strong>输出的是数组的地址</strong>：eg：[[I@7a7b0070, [I@39a054a5</p>
</li>
<li><p>拼接步骤：</p>
<ul>
<li>1.如果不为空且length大于0</li>
<li>2.采用StringBuilder b = new StringBuilder();</li>
<li>3.拼接b.append(‘[‘);</li>
<li>4.循环每一行：for (int i = 0; ; i++)</li>
<li>5.调用String.valueOf():</li>
</ul>
<p>  <em>return getClass().getName() + “@” + Integer.toHexString(hashCode());</em></p>
<ul>
<li>6.循环到最后一行：return b.append(‘]’).toString();</li>
</ul>
</li>
</ul>
</li>
<li><p>源码展示</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toString</span><span class="params">(<span class="keyword">int</span>[] a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"null"</span>;</span><br><span class="line">    <span class="keyword">int</span> iMax = a.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (iMax == -<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"[]"</span>;</span><br><span class="line"></span><br><span class="line">    StringBuilder b = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    b.append(<span class="string">'['</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ; i++) &#123;</span><br><span class="line">        b.append(a[i]);</span><br><span class="line">        <span class="keyword">if</span> (i == iMax)</span><br><span class="line">            <span class="keyword">return</span> b.append(<span class="string">']'</span>).toString();</span><br><span class="line">        b.append(<span class="string">", "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Arrays-deepToString-数组"><a href="#Arrays-deepToString-数组" class="headerlink" title="Arrays.deepToString(数组))"></a>Arrays.deepToString(数组))</h3></li>
<li><p>不仅可以遍历二维,还可以遍历三维甚至更高.</p>
<blockquote>
<p>返回指定数组“深层内容”的字符串表示形式。如果数组包含作为元素的其他数组，则字符串表示形式包含其内容等。此方法是为了将多维数组转换为字符串而设计的。<br>  字符串表示形式由数组的元素列表组成，括在方括号（”[]”）中。相邻元素用字符 “, “（逗号加空格）分隔。这些元素通过 String.valueOf(Object) 转换为字符串，除非它们是自身的数组。 </p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">deepToString</span><span class="params">(Object[] a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"null"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> bufLen = <span class="number">20</span> * a.length;</span><br><span class="line">    <span class="keyword">if</span> (a.length != <span class="number">0</span> &amp;&amp; bufLen &lt;= <span class="number">0</span>)</span><br><span class="line">        bufLen = Integer.MAX_VALUE;</span><br><span class="line">    StringBuilder buf = <span class="keyword">new</span> StringBuilder(bufLen);</span><br><span class="line">    deepToString(a, buf, <span class="keyword">new</span> HashSet&lt;Object[]&gt;());</span><br><span class="line">    <span class="keyword">return</span> buf.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="String、Stringbuffer与Stringbuilder的区别"><a href="#String、Stringbuffer与Stringbuilder的区别" class="headerlink" title="String、Stringbuffer与Stringbuilder的区别"></a>String、Stringbuffer与Stringbuilder的区别</h2><h3 id="在执行速度上："><a href="#在执行速度上：" class="headerlink" title="在执行速度上："></a>在执行速度上：</h3><ul>
<li>Stringbuilder-&gt;Stringbuffer-&gt;String<h3 id="String是字符串常量"><a href="#String是字符串常量" class="headerlink" title="String是字符串常量"></a>String是字符串常量</h3></li>
<li>Stringbuffer是字符串变量</li>
<li>Stringbuilder是字符串变量<ul>
<li>有可能我们会疑惑String怎么是字符串变量。看以下代码：<br>String str = adc；<br>str = str + “ef”；<br>System.out.println(str);<br>输出结果为:abcef;<blockquote>
<p>在Java虚拟机中str为adc时是一个变量，当str被重新赋值为adcef时为另一个变量，被重新分配了一次内存，上次使用的内存会被gc在适当的时候回收掉。由于这种机制导致了如果有大量的String赋值操作时，会导致运行速度的缓慢，以及内存使用量的上升。</p>
</blockquote>
</li>
</ul>
</li>
<li>一个特殊的例子<ul>
<li>你会很惊讶的发现，生成str对象速度简直太快了，而这个时候Stringbuffer居然速度上根本一点都不占优势。其实这是JVM的一个把戏，实际上：<br>String str  =  ”this is only a“ + “simple” + “test”;<br>其实就是<br>String str = “this is only a simple test”；<br>所以不需要太多的是时间。但大家这里需要注意的是，如果你的字符串是来自另外的String对象的话。速度就没那么快了，譬如：<br>String str1 = “this is only a”；<br>String str2 = “simple”;<br>String str3 = “test”;<br>String str = str1 + str2 + str3;<br>这时候JVM会规规矩矩的按照原来的方式去做。</li>
</ul>
</li>
<li>StringBuilder与StringBuffer<pre><code>StringBuilder：线程非安全的
StringBuffer：线程安全的</code></pre><blockquote>
<p>当我们在字符串缓冲区去被多个线程使用时，JVM不能保证 StringBuilder的线程是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。<br>  当然大多数情况是在单线程下进行的，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。</p>
</blockquote>
</li>
<li>小结：<br>（1）如果要操作少量的数据用 String；<br>（2）多线程操作字符串缓冲区下操作大量数据 StringBuffer；<br>（3）单线程操作字符串缓冲区下操作大量数据 StringBuilder（推荐使用）。</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200110150851244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200110151612461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot项目小笔记</title>
    <url>/2020/01/06/idea%E6%90%AD%E5%BB%BASpringboot%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>本文主要记录我使用idea搭建springboot项目时小功能配置</p>
<h2 id="ueditor富文本编辑器"><a href="#ueditor富文本编辑器" class="headerlink" title="ueditor富文本编辑器"></a>ueditor富文本编辑器</h2><ol>
<li>yml文件配置<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  富文本编辑器</span></span><br><span class="line"><span class="attr">ue:</span></span><br><span class="line">  <span class="attr">server-url:</span> <span class="string">/ueditor/jsp/controller</span></span><br></pre></td></tr></table></figure></li>
<li>依赖导入<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">	<span class="string">&lt;groupId&gt;cn.jasonone.ueditor&lt;/groupId&gt;</span></span><br><span class="line">	<span class="string">&lt;artifactId&gt;ueditor-spring-boot-starter&lt;/artifactId&gt;</span></span><br><span class="line">	<span class="string">&lt;version&gt;1.1.4&lt;/version&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>导入ueditor<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script type="text/plain" id="editor" name="sonContent"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="SpringBoot的yml文件配置"><a href="#SpringBoot的yml文件配置" class="headerlink" title="SpringBoot的yml文件配置"></a>SpringBoot的yml文件配置</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">cn.blue:</span> <span class="string">trace</span></span><br><span class="line">    <span class="comment">#优先级从高至低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># layui模板里的时间格式配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">"GMT+8"</span>     </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/rbac?serverTimezone=GMT%2b8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开发阶段关闭thymeleaf的模板缓存</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span> </span><br><span class="line">    </span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:cn/blue/mapper/sqlmap/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  配置别名扫描的包</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.hm.publicraise.bean</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  头像存储位置</span></span><br><span class="line"><span class="attr">head-img-path:</span> <span class="string">classpath:/static/upload/heads</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  头像存储位置</span></span><br><span class="line"><span class="attr">raise-img-path:</span> <span class="string">classpath:/static/upload/raises</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  富文本编辑器</span></span><br><span class="line"><span class="attr">ue:</span></span><br><span class="line">  <span class="attr">server-url:</span> <span class="string">/ueditor/jsp/controller</span></span><br></pre></td></tr></table></figure>


<h2 id="Invalid-bound-statement-not-found-，访问不到mapper-xml"><a href="#Invalid-bound-statement-not-found-，访问不到mapper-xml" class="headerlink" title="Invalid bound statement(not found)，访问不到mapper.xml"></a>Invalid bound statement(not found)，访问不到mapper.xml</h2><p><img src="https://img-blog.csdn.net/20180820114136211?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lkb215d2F5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>application配置文件中mybatis配置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="代码正确，无法访问controller层方法"><a href="#代码正确，无法访问controller层方法" class="headerlink" title="代码正确，无法访问controller层方法"></a>代码正确，无法访问controller层方法</h2><p><strong>其他包都得放在启动类包下</strong><br><img src="https://img-blog.csdn.net/20171201202512158?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGQxMTcwODEzMzM1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><h3 id="登录拦截器"><a href="#登录拦截器" class="headerlink" title="登录拦截器"></a>登录拦截器</h3><p>1.LoginController主要代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 登录方法</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(UserInfo userInfo, HttpSession session)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        UserInfo user = userInfoService.findOneUser(userInfo);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//存放引用常量的位置：ApplicationConst</span></span><br><span class="line">            session.setAttribute(ApplicationConst.LOGIN_SESSION_STATUS, user);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重定向回去会调用controller，但是请求转发只会访问目录下的资源文件</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"redirect:/login"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.LoginHandlerInterceptor 登录拦截器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginHandlerInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        UserInfo user = (UserInfo) session.getAttribute(ApplicationConst.LOGIN_SESSION_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.sendRedirect(request.getContextPath() + <span class="string">"/login"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.配置WebMvcConfigurer 拦截器，将登录拦截器添加进去</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebMvcConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">"/"</span>).setViewName(<span class="string">"index"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LoginHandlerInterceptor())</span><br><span class="line">                <span class="comment">//拦截所有</span></span><br><span class="line">                .addPathPatterns(<span class="string">"/**"</span>)</span><br><span class="line">                <span class="comment">//排除资源文件和登录、注销请求</span></span><br><span class="line">                .excludePathPatterns(<span class="string">"/login"</span>, <span class="string">"/logout"</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">"/layui/**"</span>, <span class="string">"/**/*.js"</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">"/**/*.jpg"</span>, <span class="string">"/**/*.png"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>idea</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>idea</tag>
        <tag>Sringboot</tag>
      </tags>
  </entry>
  <entry>
    <title>富文本编辑器ueditor</title>
    <url>/2020/01/06/%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8ueditor/</url>
    <content><![CDATA[<h2 id="yml文件配置"><a href="#yml文件配置" class="headerlink" title="yml文件配置"></a>yml文件配置</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  富文本编辑器</span></span><br><span class="line"><span class="attr">ue:</span></span><br><span class="line">  <span class="attr">server-url:</span> <span class="string">/ueditor/jsp/controller</span></span><br></pre></td></tr></table></figure>
<h2 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">	<span class="string">&lt;groupId&gt;cn.jasonone.ueditor&lt;/groupId&gt;</span></span><br><span class="line">	<span class="string">&lt;artifactId&gt;ueditor-spring-boot-starter&lt;/artifactId&gt;</span></span><br><span class="line">	<span class="string">&lt;version&gt;1.1.4&lt;/version&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="导入ueditor"><a href="#导入ueditor" class="headerlink" title="导入ueditor"></a>导入ueditor</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script type="text/plain" id="editor" name="sonContent"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>前端</tag>
        <tag>Springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>JSR303数据校验</title>
    <url>/2020/01/06/JSR303%E6%95%B0%E6%8D%AE%E6%A0%A1%E9%AA%8C/</url>
    <content><![CDATA[<p>添加bean层校验规则</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span>,</span><br><span class="line">    message = <span class="string">"用户名需要输入6-16位字母和数字或者2-5位中文的组合\""</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Email</span></span><br><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"^([a-z0-9_.-]+)@([\\da-z.-]+)\\.([a-z.]&#123;2,6&#125;)$"</span> ,</span><br><span class="line">    message = <span class="string">"邮箱格式不合法"</span>)</span><br><span class="line"><span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure>
<p>获取校验信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">saveEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            employeeService.saveEmp(employee);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>导入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSR303数据校验--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.18.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Java</tag>
        <tag>数据校验</tag>
      </tags>
  </entry>
  <entry>
    <title>ECharts</title>
    <url>/2020/01/06/ECharts/</url>
    <content><![CDATA[<p>1.引入ECharts需要的jar包</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;script src="https://cdn.bootcss.com/echarts/4.1.0/echarts.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../resources/echarts/dist/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../resources/js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.柱状图-前端</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px; height: 400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">		<span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">		<span class="comment">// 指定图表的配置项和数据</span></span></span><br><span class="line"><span class="actionscript">		<span class="keyword">var</span> option = &#123;</span></span><br><span class="line">			title : &#123;</span><br><span class="line"><span class="actionscript">				text : <span class="string">'ECharts 入门示例'</span></span></span><br><span class="line">			&#125;,</span><br><span class="line">			tooltip : &#123;&#125;,</span><br><span class="line">			legend : &#123;</span><br><span class="line"><span class="actionscript">				data : [ <span class="string">'销量'</span> ]</span></span><br><span class="line">			&#125;,</span><br><span class="line">			xAxis : &#123;</span><br><span class="line"><span class="actionscript">				data : [ <span class="string">"衬衫"</span>, <span class="string">"羊毛衫"</span>, <span class="string">"雪纺衫"</span>, <span class="string">"裤子"</span>, <span class="string">"高跟鞋"</span>, <span class="string">"袜子"</span> ]</span></span><br><span class="line">			&#125;,</span><br><span class="line">			yAxis : &#123;&#125;,</span><br><span class="line">			series : [ &#123;</span><br><span class="line"><span class="actionscript">				name : <span class="string">'销量'</span>,</span></span><br><span class="line"><span class="actionscript">				type : <span class="string">'bar'</span>,</span></span><br><span class="line"><span class="javascript">				data : [<span class="built_in">Math</span>.random(<span class="number">5</span>), <span class="built_in">Math</span>.random(<span class="number">20</span>), <span class="built_in">Math</span>.random(<span class="number">36</span>), <span class="built_in">Math</span>.random(<span class="number">10</span>), <span class="built_in">Math</span>.random(<span class="number">10</span>),<span class="built_in">Math</span>.random(<span class="number">20</span>)]</span></span><br><span class="line">			&#125; ]</span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">		<span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span></span><br><span class="line">		myChart.setOption(option);</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225142840305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.折线图-前端</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px; height: 400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="built_in">window</span>.onload= <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">				$.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">					type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">					url : <span class="string">'/line/charts'</span>,</span></span><br><span class="line"><span class="actionscript">					dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 					success: (data, statusText, xhr) =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">					success:<span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//	 					$.get('data.json', function(data) &#123; //与服务器连接成功</span></span></span><br><span class="line">							myChart.setOption(option = &#123;</span><br><span class="line">								title: &#123;</span><br><span class="line"><span class="actionscript">									text: <span class="string">'ECharts 异步加载数据'</span></span></span><br><span class="line">								&#125;,</span><br><span class="line">								tooltip: &#123;&#125;,</span><br><span class="line">								legend: &#123;</span><br><span class="line"><span class="actionscript">									data: [<span class="string">'访问量'</span>]</span></span><br><span class="line">								&#125;,</span><br><span class="line">								xAxis: &#123;</span><br><span class="line"><span class="actionscript">									<span class="comment">// 横坐标值：data.name</span></span></span><br><span class="line">									data: data.categories</span><br><span class="line">								&#125;,</span><br><span class="line">								yAxis: &#123;&#125;,</span><br><span class="line">								series: [&#123;</span><br><span class="line"><span class="actionscript">									name: <span class="string">'访问量'</span>,</span></span><br><span class="line"><span class="actionscript">									type: <span class="string">'line'</span>,</span></span><br><span class="line"><span class="actionscript">									<span class="comment">// data:data.data[200,100,350,90,11]</span></span></span><br><span class="line">									data: data.data</span><br><span class="line">								&#125;]</span><br><span class="line">							&#125;);</span><br><span class="line"><span class="actionscript"><span class="comment">//	 					&#125;);</span></span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225141625443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.个性化图表样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"reset"</span> <span class="attr">onclick</span>=<span class="string">"reset()"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="function"><span class="keyword">function</span> <span class="title">reset</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">window</span>.location.reload()</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"><span class="actionscript">	<span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line">	myChart.setOption(</span><br><span class="line">		option = &#123;</span><br><span class="line"><span class="actionscript">			backgroundColor: <span class="string">'#2c343c'</span>,</span></span><br><span class="line">			visualMap: &#123;</span><br><span class="line"><span class="actionscript">				show: <span class="literal">false</span>,</span></span><br><span class="line">				min: 80,</span><br><span class="line">				max: 600,</span><br><span class="line">				inRange: &#123;</span><br><span class="line">					colorLightness: [0, 1]</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			series: [&#123;</span><br><span class="line"><span class="actionscript">				name: <span class="string">'访问来源'</span>,</span></span><br><span class="line"><span class="actionscript">				type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">				radius: <span class="string">'55%'</span>,</span></span><br><span class="line">				data: [&#123;</span><br><span class="line">						value: 235,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'视频广告'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 274,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'联盟广告'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 310,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'邮件营销'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 335,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'直接访问'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 400,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'搜索引擎'</span></span></span><br><span class="line">					&#125;</span><br><span class="line">				],</span><br><span class="line"><span class="actionscript">				roseType: <span class="string">'angle'</span>,</span></span><br><span class="line">				label: &#123;</span><br><span class="line">					normal: &#123;</span><br><span class="line">						textStyle: &#123;</span><br><span class="line"><span class="actionscript">							color: <span class="string">'rgba(255, 255, 255, 0.3)'</span></span></span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				labelLine: &#123;</span><br><span class="line">					normal: &#123;</span><br><span class="line">						lineStyle: &#123;</span><br><span class="line"><span class="actionscript">							color: <span class="string">'rgba(255, 255, 255, 0.3)'</span></span></span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				itemStyle: &#123;</span><br><span class="line">					normal: &#123;</span><br><span class="line"><span class="actionscript">						color: <span class="string">'#c23531'</span>,</span></span><br><span class="line">						shadowBlur: 200,</span><br><span class="line"><span class="actionscript">						shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;]</span><br><span class="line">		&#125;</span><br><span class="line">	)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225143235194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.异步加载图表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">fetchData</span><span class="params">(cb)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 通过 setTimeout 模拟异步加载</span></span></span><br><span class="line"><span class="actionscript">          setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">              cb(&#123;</span><br><span class="line"><span class="actionscript">                  categories: [<span class="string">"衬衫"</span>, <span class="string">"羊毛衫"</span>, <span class="string">"雪纺衫"</span>, <span class="string">"裤子"</span>, <span class="string">"高跟鞋"</span>, <span class="string">"袜子"</span>],</span></span><br><span class="line">                  data: [5, 20, 36, 10, 10, 20]</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;, 1000);</span><br><span class="line">      &#125;</span><br><span class="line">      myChart.setOption(option = &#123;</span><br><span class="line">          title: &#123;</span><br><span class="line"><span class="actionscript">              text: <span class="string">'异步数据加载示例'</span></span></span><br><span class="line">          &#125;,</span><br><span class="line">          tooltip: &#123;&#125;,</span><br><span class="line">          legend: &#123;</span><br><span class="line"><span class="actionscript">              data: [<span class="string">'销量'</span>]</span></span><br><span class="line">          &#125;,</span><br><span class="line">          xAxis: &#123;</span><br><span class="line">              data: []</span><br><span class="line">          &#125;,</span><br><span class="line">          yAxis: &#123;&#125;,</span><br><span class="line">          series: [&#123;</span><br><span class="line"><span class="actionscript">              name: <span class="string">'销量'</span>,</span></span><br><span class="line"><span class="actionscript">              type: <span class="string">'bar'</span>,</span></span><br><span class="line">              data: []</span><br><span class="line">          &#125;]</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">myChart.showLoading();</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      fetchData(<span class="function"><span class="keyword">function</span> <span class="params">(data)</span> </span>&#123;</span></span><br><span class="line">	myChart.hideLoading();</span><br><span class="line">          myChart.setOption(&#123;</span><br><span class="line">              xAxis: &#123;</span><br><span class="line">                  data: data.categories</span><br><span class="line">              &#125;,</span><br><span class="line">              series: [&#123;</span><br><span class="line"><span class="actionscript">                  <span class="comment">// 根据名字对应到相应的系列</span></span></span><br><span class="line"><span class="actionscript">                  name: <span class="string">'销量'</span>,</span></span><br><span class="line">                  data: data.data</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225144430531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20191225144443646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <tags>
        <tag>前端</tag>
        <tag>ECharts</tag>
      </tags>
  </entry>
  <entry>
    <title>在此处打开cmd窗口</title>
    <url>/2020/01/06/%E5%9C%A8%E6%AD%A4%E5%A4%84%E6%89%93%E5%BC%80cmd%E7%AA%97%E5%8F%A3/</url>
    <content><![CDATA[<p>具体步骤<br>第一步：新建一个txt文件，命名为OpenCmdHere.txt<br>第二步：在文件中输入如下代码，用notepad++保存,<strong><em>注意编码需要是ANSI</em></strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5.00</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd "</span>%V<span class="string">""</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd \"%V\""</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd \"%V\""</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\LibraryFolder\<span class="built_in">background</span>\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\LibraryFolder\<span class="built_in">background</span>\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd \"%V\""</span></span><br></pre></td></tr></table></figure>
<p>第三步：更改文件后缀名为reg，弹出的提示点确认。<br>第四步：双击OpenCmdHere.reg文件运行，</p>
]]></content>
      <tags>
        <tag>电脑知识</tag>
      </tags>
  </entry>
  <entry>
    <title>function</title>
    <url>/2020/01/06/layui%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="使用layer弹出层，官网下载后导入直接报错，"><a href="#使用layer弹出层，官网下载后导入直接报错，" class="headerlink" title="使用layer弹出层，官网下载后导入直接报错，"></a>使用layer弹出层，官网下载后导入直接报错，</h2><p><strong>原因：需要先引入jquery再引入layer.js</strong><br><a href="http://layer.layui.com/" target="_blank" rel="noopener">layer官网链接</a></p>
<p><img src="https://img-blog.csdnimg.cn/20191227145403789.png" alt="在这里插入图片描述"><br>演示代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>layer弹出层演示<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery/jquery-3.4.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"layer/layer.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>弹出一个提示层<span class="tag">&lt;/<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>弹出一个页面层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span>&gt;</span>弹出一个iframe层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p4"</span>&gt;</span>弹出一个loading层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p5"</span>&gt;</span>弹出一个tips层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个提示层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p1'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">      layer.msg(<span class="string">'hello'</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个页面层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p2'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">      layer.open(&#123;</span><br><span class="line">        type: 1,</span><br><span class="line"><span class="actionscript">        area: [<span class="string">'600px'</span>, <span class="string">'360px'</span>],</span></span><br><span class="line"><span class="actionscript">        shadeClose: <span class="literal">true</span>, <span class="comment">//点击遮罩关闭</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        content: '\<span class="tag">&lt;<span class="name">\div</span> <span class="attr">style</span>=<span class="string">"padding:20px;"</span>&gt;</span>自定义内容\<span class="tag">&lt;<span class="name">\</span>/<span class="attr">div</span>&gt;</span>'</span></span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个iframe层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p3'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">      layer.open(&#123;</span><br><span class="line">        type: 2,</span><br><span class="line"><span class="actionscript">        title: <span class="string">'iframe父子操作'</span>,</span></span><br><span class="line"><span class="actionscript">        maxmin: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        shadeClose: <span class="literal">true</span>, <span class="comment">//点击遮罩关闭层</span></span></span><br><span class="line"><span class="actionscript">        area : [<span class="string">'800px'</span> , <span class="string">'520px'</span>],</span></span><br><span class="line"><span class="actionscript">        content: <span class="string">'test/iframe.html'</span></span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个loading层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p4'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> ii = layer.load();</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//此处用setTimeout演示ajax的回调</span></span></span><br><span class="line"><span class="actionscript">      setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">        layer.close(ii);</span><br><span class="line">      &#125;, 1000);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个tips层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p5'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">      layer.tips(<span class="string">'Hello tips!'</span>, <span class="string">'#p5'</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191227145439393.png" alt="在这里插入图片描述"><br>##layui中Uncaught ReferenceError: cn is not defined<br>查询了很久最终发现竟然是导入layui文件时出现问题!!!!!!!<br>##RestFul风格</p>
<ul>
<li>GET:查询；</li>
<li>POST：新增；</li>
<li>PUT：修改；</li>
<li>DELETE：删除；<br><strong>若为springboot项目直接在type中写对应的类型就好,如：delete,put等,都给我们自动配置好了，只要对应后端相应的mapping.</strong></li>
</ul>
]]></content>
      <tags>
        <tag>前端</tag>
        <tag>layui</tag>
        <tag>layer</tag>
      </tags>
  </entry>
  <entry>
    <title>idea的样式颜色修改</title>
    <url>/2020/01/06/idea%E7%9A%84%E6%A0%B7%E5%BC%8F%E9%A2%9C%E8%89%B2%E4%BF%AE%E6%94%B9/</url>
    <content><![CDATA[<h2 id="去除xml文件中sql语句背景色，可以只去里面最后一个"><a href="#去除xml文件中sql语句背景色，可以只去里面最后一个" class="headerlink" title="去除xml文件中sql语句背景色，可以只去里面最后一个"></a>去除xml文件中sql语句背景色，可以只去里面最后一个</h2><p><img src="https://img-blog.csdnimg.cn/20191225154834905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="设置警告的背景颜色"><a href="#设置警告的背景颜色" class="headerlink" title="设置警告的背景颜色"></a>设置警告的背景颜色</h2><p><img src="https://img-blog.csdnimg.cn/20191225154905850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="修改代码颜色"><a href="#修改代码颜色" class="headerlink" title="修改代码颜色"></a>修改代码颜色</h2><p><img src="https://img-blog.csdnimg.cn/20191225154916424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="IDEA去除掉虚线，波浪线，和下划线实线的方法"><a href="#IDEA去除掉虚线，波浪线，和下划线实线的方法" class="headerlink" title="IDEA去除掉虚线，波浪线，和下划线实线的方法"></a>IDEA去除掉虚线，波浪线，和下划线实线的方法</h2><ul>
<li><a href="https://blog.csdn.net/best_luxi/article/details/81253316" target="_blank" rel="noopener">https://blog.csdn.net/best_luxi/article/details/81253316</a></li>
</ul>
<h2 id="去掉IntelliJ-IDEA-中mapper-xml-文件警告"><a href="#去掉IntelliJ-IDEA-中mapper-xml-文件警告" class="headerlink" title="去掉IntelliJ IDEA 中mapper xml 文件警告"></a>去掉IntelliJ IDEA 中mapper xml 文件警告</h2><ul>
<li><a href="https://blog.csdn.net/VictorStephen/article/details/80280270" target="_blank" rel="noopener">https://blog.csdn.net/VictorStephen/article/details/80280270</a></li>
</ul>
]]></content>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>知新网在线视频学习网站</title>
    <url>/2020/01/06/%E7%9F%A5%E6%96%B0%E7%BD%91%E5%9C%A8%E7%BA%BF%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p><strong>项目名称：知新网在线视频学习网站</strong></p>
<p>    项目周期：一个星期<br>    开发环境：SpringToolsuite+Mysql5+Tomcat8.5+SVN+JDK1.8+Bootstrap<br>    项目背景：人们的物质生活快速增长，快节奏的时代下，人们的精神生活日益溃泛。于是，我们组想开发个在线学习网站，成为供大家学习、交流的心灵港湾。喻名意为：温故而知新，可以为师矣。<br>    项目模块划分：用户模块，视频模块，论坛模块，悬赏订单模块，后台管理系统<br>    项目组员：刘杨（组长），郭涛，王综艺，李小龙<br>    技术选型：采用c3p0技术连接数据库，查询出的数据结果，通过service层、controller层传值到jsp页面显示，且前端页面使用Ajax技术实现异步交互</p>
<p>责任描述：<br>1、 与组员协商基本功能，完善对知新网功能的详细思维导图；<br>2、统一命名规范准备<br>3、协助组员完成视频上传的功能实现，优化前端页面的美观性，降低后端代码的冗余度<br>4、整合项目，调试bug，流畅运行项目所有实现的功能.最后：我们实现了知新网的登陆、注册、用户资料上传修改、在线拍照上传、视频上传播放、论坛发贴评论、悬赏订单在线解疑以及后台管理系统等， </p>
<p>项目系统设计：</p>
<ul>
<li>模板划分</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20190906011713815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>
<ul>
<li>系统工作流程</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20190906012428671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>数据库表设计：</p>
<ul>
<li>采用逻辑删除，避免数据的不可恢复性</li>
<li>用户表   教师表    用户详细表   课程表    用户学习表    评论表    论坛明细表    订单悬赏表    悬赏订单记录表<br>课程订单明细    用户收藏表    视频库表</li>
</ul>
<p>页面设计：</p>
<ul>
<li>使用Bootstrap框架、WebStorm工具</li>
</ul>
<p>部分页面展示：</p>
<ul>
<li><p>首页<br>调用阿里云的短信验证接口，实现手机号登录<img src="https://img-blog.csdnimg.cn/20190906013433219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>视频播放页面<br>采用了文件上传下载技术：导入了fastjson包，采用创建磁盘工厂类DiskFileItemFactory，解析器ServletFileUpload的办法。由于技术有限，上传时速率不够快。<br><img src="https://img-blog.csdnimg.cn/20190906013922584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center=600%C3%97500" alt="在这里插入图片描述"></p>
</li>
<li><p>后台管理系统：<br>①采用分页，对数据实现查询分页处理；<br>②采用table里的每行对应个表单，然后遍历出来，方便管理员直接客观的修改对应数据；<br>③采用Ajax异步技术<br><img src="https://img-blog.csdnimg.cn/20190906014811827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center=600%C3%97500" alt="在这里插入图片描述">*</p>
</li>
</ul>
<p>部分代码展示：</p>
<ul>
<li>文件上传</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.创建磁盘工厂类</span></span><br><span class="line">DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line"><span class="comment">// 内存缓冲区与临时路径的关系， 加载的文件在内存缓冲区不够的情况下</span></span><br><span class="line"><span class="comment">// 把此文件加载进临时存放路径</span></span><br><span class="line">factory.setSizeThreshold(<span class="number">20</span> * <span class="number">1024</span> * <span class="number">1024</span>);</span><br><span class="line"><span class="comment">// 临时文件存放路径 如果不存在此路径，则创建</span></span><br><span class="line">File temp = <span class="keyword">new</span> File(<span class="string">"D:/temp"</span>);</span><br><span class="line"><span class="keyword">if</span> (!temp.exists()) &#123;</span><br><span class="line">	temp.mkdirs();</span><br><span class="line">&#125;</span><br><span class="line">factory.setRepository(temp);</span><br><span class="line"><span class="comment">// 2.创建解析器</span></span><br><span class="line">ServletFileUpload sfu = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line"><span class="comment">// 判断表单是否为multipart/form-data</span></span><br><span class="line"><span class="keyword">boolean</span> bl = ServletFileUpload.isMultipartContent(request);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	<span class="comment">// 设置文件的最大字节数</span></span><br><span class="line">	sfu.setFileSizeMax(<span class="number">1024</span> * <span class="number">1024</span>); <span class="comment">// 超出限定字节 触发异常FileUploadBase$FileSizeLimitExceededException</span></span><br><span class="line">	<span class="keyword">if</span> (bl) &#123;</span><br><span class="line">		<span class="comment">// 3.解析request</span></span><br><span class="line">		List&lt;FileItem&gt; list = sfu.parseRequest(request);</span><br><span class="line">		<span class="comment">// 遍历结果集</span></span><br><span class="line">		System.out.println(list);</span><br><span class="line">		<span class="keyword">for</span> (FileItem item : list) &#123;</span><br><span class="line">			<span class="comment">// 当前对象是普通表单控件(true)还是文件表单控件(false)</span></span><br><span class="line">			<span class="keyword">if</span> (item.isFormField()) &#123;</span><br><span class="line">				<span class="comment">// 控件名</span></span><br><span class="line">				String name = item.getFieldName();</span><br><span class="line">				<span class="comment">// 得到值</span></span><br><span class="line">				String value = item.getString();</span><br><span class="line">				System.out.println(<span class="string">"key:"</span> + name + <span class="string">",value:"</span> + value);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="comment">// 控件名</span></span><br><span class="line">				String name = item.getFieldName();</span><br><span class="line">				<span class="comment">// 文件名：</span></span><br><span class="line">				String fileName = item.getName();</span><br><span class="line">				System.out.println(<span class="string">"key:"</span> + name + <span class="string">",filename:"</span> + fileName);</span><br><span class="line">				<span class="comment">// 保存文件数据</span></span><br><span class="line">				String path = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"/"</span>) + <span class="string">"images\\HeadPortrait"</span>;</span><br><span class="line">				System.out.println(<span class="string">"path"</span>+path);</span><br><span class="line">				File root = <span class="keyword">new</span> File(path);</span><br><span class="line">				<span class="keyword">if</span> (!root.exists()) &#123;</span><br><span class="line">					<span class="comment">// 上传的根路径不存在则新建</span></span><br><span class="line">					root.mkdirs();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 文件名冲突 D:/image/页码列表处理.jpg</span></span><br><span class="line">				<span class="keyword">int</span> lastIndex = fileName.lastIndexOf(<span class="string">"\\"</span>);</span><br><span class="line">				<span class="keyword">if</span> (lastIndex != -<span class="number">1</span>) &#123;</span><br><span class="line">					fileName = fileName.substring(lastIndex + <span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 文件名重写生成</span></span><br><span class="line">				fileName = UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>) + fileName;</span><br><span class="line">				System.out.println(<span class="string">"新生成的文件名："</span> + fileName);</span><br><span class="line">				basePath = <span class="string">"images\\HeadPortrait"</span>+<span class="string">"\\"</span>+fileName;</span><br><span class="line">				<span class="comment">// 开始上传</span></span><br><span class="line">				File load = <span class="keyword">new</span> File(root, fileName);</span><br><span class="line">				item.write(load);</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>分页的jsp代码<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">	&lt;a href=<span class="string">"&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3'/&gt;"</span></span><br><span class="line">		target="mainFrame"&gt;全部视频&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;table border=<span class="string">"1"</span> width=<span class="string">"100%"</span> cellspacing=<span class="string">"0"</span>&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">		&lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程图片&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程名称&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程类型&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程评分&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程价格&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程状态&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">	&lt;/tr&gt;</span><br><span class="line">	&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty page&#125;"</span>&gt;</span><br><span class="line">		&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty page.list&#125;"</span>&gt;</span><br><span class="line">			&lt;c:forEach items=<span class="string">"$&#123;page.list&#125;"</span> <span class="keyword">var</span>=<span class="string">"allList"</span> varStatus=<span class="string">"status"</span>&gt;</span><br><span class="line">				&lt;form action=<span class="string">"&lt;c:url value='/VideoServlet?method=updateVideo'/&gt;"</span></span><br><span class="line">					method=<span class="string">"post"</span>&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;$&#123;status.index+1&#125;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseId&#125;"</span></span><br><span class="line">							name=<span class="string">"courseId"</span></span><br><span class="line">							style="border: none; width: 20px;; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;img src=<span class="string">"$&#123;allList.courseImage&#125;"</span> width=<span class="string">"100"</span></span><br><span class="line">							height="120" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td style=<span class="string">"width: 20px"</span>&gt;&lt;input type=<span class="string">"text"</span></span><br><span class="line">							value=<span class="string">"$&#123;allList.courseName&#125;"</span> name=<span class="string">"courseName"</span></span><br><span class="line">							style="border: none; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseType&#125;"</span></span><br><span class="line">							name="courseType" style="border: none; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseGrade&#125;"</span></span><br><span class="line">							name=<span class="string">"courseGrade"</span></span><br><span class="line">							style="border: none; width: 40px; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.coursePrice&#125;"</span></span><br><span class="line">							name=<span class="string">"coursePrice"</span></span><br><span class="line">							style="border: none; width: 180px; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseStatus&#125;"</span></span><br><span class="line">							name=<span class="string">"courseStatus"</span></span><br><span class="line">							style="border: none; width: 10px; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type="submit" value="修改" /&gt;&lt;/td&gt;</span><br><span class="line">					&lt;/tr&gt;</span><br><span class="line">				&lt;/form&gt;</span><br><span class="line">			&lt;/c:forEach&gt;</span><br><span class="line">		&lt;/c:if&gt;</span><br><span class="line">	&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">	&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty page&#125;"</span>&gt;</span><br><span class="line">		&lt;p&gt;</span><br><span class="line">			当前:$&#123;page.currentPageNo&#125;|总$&#123;page.countPage&#125;页 &lt;a</span><br><span class="line">				href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=1'/&gt;"&gt;首页&lt;/a&gt;</span><br><span class="line">			&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page.currentPageNo!=1&#125;"</span>&gt;</span><br><span class="line">				&lt;a</span><br><span class="line">					href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=$&#123;page.currentPageNo-1&#125;'/&gt;"&gt;上一页&lt;/a&gt;</span><br><span class="line">			&lt;/c:if&gt;</span><br><span class="line">			&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page.currentPageNo!=page.countPage&#125;"</span>&gt;</span><br><span class="line">				&lt;a</span><br><span class="line">					href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=$&#123;page.currentPageNo+1&#125;'/&gt;"&gt;下一页&lt;/a&gt;</span><br><span class="line">			&lt;/c:if&gt;</span><br><span class="line">			&lt;a</span><br><span class="line">				href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=$&#123;page.countPage&#125;'/&gt;"&gt;尾页&lt;/a&gt;</span><br><span class="line">		&lt;/p&gt;</span><br><span class="line">	&lt;/c:if&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>
dao层接口方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将用户输入的信息添加到个人中心的我的主页</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userDetailId用户表id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId用户明细表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> UserDetail用户详情表对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">UserDetail <span class="title">addMyHomepage</span><span class="params">(<span class="keyword">int</span> userDetailId, UserDetail userId)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改密码的方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> oldPassword</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId      用户表的id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否修改成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">updatePwd</span><span class="params">(String oldPassword, String password, <span class="keyword">int</span> userId)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户表id查找明细表</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userOfId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> UserDetail</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">UserDetail <span class="title">selectUserDetailByUId</span><span class="params">(<span class="keyword">int</span> userOfId)</span></span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>项目</tag>
      </tags>
  </entry>
  <entry>
    <title>Github + Hexo + Next主题博客搭建教程</title>
    <url>/2020/01/04/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>在正式安装 Hexo 之前，我们需要确认电脑中是否已安装下列应用程序:</p>
<ul>
<li>GitHub 账号</li>
<li>Node.js<blockquote>
<p>查看Node版本：node -v</p>
</blockquote>
</li>
<li>Git<blockquote>
<p>查看git版本：$ git version</p>
</blockquote>
<h2 id="在本地安装Hexo"><a href="#在本地安装Hexo" class="headerlink" title="在本地安装Hexo"></a>在本地安装Hexo</h2>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。在blog文件下右键点击Git Bash here，输入如下命令:<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><blockquote>
<p>hexo g #完整命令为hexo generate,生成静态文件<br>hexo s #完整命令为hexo server,启动服务器,本地可以测试<br>hexo d #完整命令为hexo deploy,将本地编译好的静态文件发布到github上<br>hexo n #完整命令为hexo new,新建一篇文章<br>hexo clean #清除当前项目的静态文件<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br>hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s #加载豆瓣插件部署博客</p>
</blockquote>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><blockquote>
<p>npm install -g hexo</p>
</blockquote>
<h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><blockquote>
<p>~/blog $ hexo init</p>
</blockquote>
<h3 id="生成和本地预览"><a href="#生成和本地预览" class="headerlink" title="生成和本地预览"></a>生成和本地预览</h3><blockquote>
<p>~/blog $ hexo g &amp;&amp; hexo s</p>
</blockquote>
<h3 id="查看浏览器-localhost-4000"><a href="#查看浏览器-localhost-4000" class="headerlink" title="查看浏览器:localhost:4000"></a>查看浏览器:localhost:4000</h3><img src="https://ask.qcloudimg.com/http-save/yehe-4220914/tutewqpbhm.jpeg?imageView2/2/w/1620" alt="原始界面"><h2 id="部署博客到-GitHub-Pages"><a href="#部署博客到-GitHub-Pages" class="headerlink" title="部署博客到 GitHub Pages"></a>部署博客到 GitHub Pages</h2><a href="https://cloud.tencent.com/developer/article/1520557" target="_blank" rel="noopener">具体可以参考</a><h2 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h2><h3 id="两个yml文件"><a href="#两个yml文件" class="headerlink" title="两个yml文件"></a>两个yml文件</h3></li>
<li>站点配置文件，位于站点文件夹根目录内<ul>
<li>~/blog/_config.yml</li>
</ul>
</li>
<li>主题配置文件，位于主题文件夹根目录内<ul>
<li>~/blog/themes/next/_config.yml<h3 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h3>如更换成yilia主题</li>
</ul>
</li>
<li>下载主题<ul>
<li>git clone <a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia.git</a></li>
</ul>
</li>
<li>配置文件 _config.yml 中指定所使用的 theme：yilia</li>
<li>安装插件<ul>
<li>npm install –save-dev 插件名</li>
</ul>
</li>
<li>注：可以使用<strong>cnpm</strong>替换npm，下载速度更快<h3 id="yilia主题"><a href="#yilia主题" class="headerlink" title="yilia主题"></a>yilia主题</h3></li>
</ul>
<ol>
<li>起初小杨是根据B站视频来搭建的，选择的yilia主题<a href="https://www.bilibili.com/video/av62400697?t=274&p=9" target="_blank" rel="noopener">hexo + yilia主题</a><br>但是主题里面都没有很是中意的，遂改成了Next主题，更加符合我的审美。</li>
<li>具体的主题优化配置可以参考如下文档:<ul>
<li><a href="https://www.liuyun.fun/2018/04/07/Hexo_yilia_%E4%B8%BB%E9%A2%98%E4%B8%80%E6%8F%BD%E5%AD%90%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/" target="_blank" rel="noopener">Hexo_yilia_主题一揽子优化方案</a></li>
<li><a href="https://blog.csdn.net/qq_30930805/article/details/97623045" target="_blank" rel="noopener">集成码云和github评论</a></li>
</ul>
</li>
</ol>
<h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><p>###动态背景<br><img src="https://io-oi.me/images/hexo-next-optimization-2.gif" alt="仰慕很久了的，总觉得很好玩"></p>
<ul>
<li>在主题配置文件中，靠后面，改 canvas_nest: true，想要更改颜色和数量？<a href="https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md" target="_blank" rel="noopener">请参考</a><br>修改文件：<blockquote>
<p>文件位置：~/blog/themes/next/source/lib/canvas-nest/canvas-nest.min.js<br>###使用腾讯云给博客添加动态相册功能<br><a href="https://me.idealli.com/post/73ad4183.html" target="_blank" rel="noopener">参考小鸡</a>，哈哈，所有的坑我都踩过一遍了，最后幸好出来了<br>基于此，完善步骤如下：</p>
</blockquote>
</li>
</ul>
<p>1.创建腾讯云cos存储桶<br><img src="https://me.idealli.com/images/blog/18122202.jpg" alt=""><br>2.跨域访问cors设置</p>
<ul>
<li>在基础配置中找到cors设置<br>  <img src="https://me.idealli.com/images/blog/18122201.jpg" alt="引用小鸡的"><br>  origin源可以先填为*，然后后面成功了再改成自己的博客地址<br>  <img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/cors%E4%BF%AE%E6%94%B9%E8%A7%84%E5%88%99.png" alt="引用小鸡的"></li>
</ul>
<p>3.Policy权限设置</p>
<ul>
<li>存储桶访问权限：一般共有读私有写就行, 权限不配置访问存储桶域名可能会依然出现error节点<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE.png" alt=""></li>
</ul>
<p>4.本地创建相册页面<br>    &gt;$ hexo new page photos<br>    * 编辑source/photos路径下的index.md文件，写入以下代码:<br>    <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function loadXMLDoc(xmlUrl) </span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    try //Internet Explorer</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        xmlDoc=new ActiveXObject("</span>Microsoft.XMLDOM<span class="string">");</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    catch(e)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">    try //Firefox, Mozilla, Opera, etc.</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">        xmlDoc=document.implementation.createDocument("</span><span class="string">","</span><span class="string">",null);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    catch(e) &#123;alert(e.message)&#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    try </span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        xmlDoc.async=false;</span></span><br><span class="line"><span class="string">        xmlDoc.load(xmlUrl);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    catch(e) &#123;</span></span><br><span class="line"><span class="string">        try //Google Chrome  </span></span><br><span class="line"><span class="string">        &#123;  </span></span><br><span class="line"><span class="string">            var chromeXml = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">            chromeXml.open("</span>GET<span class="string">", xmlUrl, false);</span></span><br><span class="line"><span class="string">            chromeXml.send(null);</span></span><br><span class="line"><span class="string">            xmlDoc = chromeXml.responseXML.documentElement; 				</span></span><br><span class="line"><span class="string">            //alert(xmlDoc.childNodes[0].nodeName);</span></span><br><span class="line"><span class="string">            //return xmlDoc;    </span></span><br><span class="line"><span class="string">        &#125;  </span></span><br><span class="line"><span class="string">        catch(e)  </span></span><br><span class="line"><span class="string">        &#123;  </span></span><br><span class="line"><span class="string">            alert(e.message)  </span></span><br><span class="line"><span class="string">        &#125;  		  	</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return xmlDoc; </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var xmllink="</span>你的访问域名链接<span class="string">"</span></span><br><span class="line"><span class="string">//访问域名链接就是我上面提到的那个访问域名xml链接</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">xmlDoc=loadXMLDoc(xmllink);</span></span><br><span class="line"><span class="string">var urls=xmlDoc.getElementsByTagName('Key');</span></span><br><span class="line"><span class="string">var date=xmlDoc.getElementsByTagName('LastModified');</span></span><br><span class="line"><span class="string">var wid=250;</span></span><br><span class="line"><span class="string">var showNum=12; //每个相册一次展示多少照片</span></span><br><span class="line"><span class="string">if ((window.innerWidth)&gt;1200) &#123;wid=(window.innerWidth*3)/18;&#125;</span></span><br><span class="line"><span class="string">var box=document.getElementById('box');</span></span><br><span class="line"><span class="string">var i=0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var content=new Array();</span></span><br><span class="line"><span class="string">var tmp=0;</span></span><br><span class="line"><span class="string">var kkk=-1;</span></span><br><span class="line"><span class="string">for (var t = 0; t &lt; urls.length ; t++) &#123;</span></span><br><span class="line"><span class="string">    var bucket=urls[t].innerHTML;</span></span><br><span class="line"><span class="string">    var length=bucket.indexOf('/');</span></span><br><span class="line"><span class="string">    if(length===bucket.length-1)&#123;</span></span><br><span class="line"><span class="string">        kkk++;</span></span><br><span class="line"><span class="string">        content[kkk]=new Array();</span></span><br><span class="line"><span class="string">        content[kkk][0]=&#123;'url':bucket,'date':date[t].innerHTML.substring(0,10)&#125;;</span></span><br><span class="line"><span class="string">        tmp=1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        content[kkk][tmp++]=&#123;'url':bucket.substring(length+1),'date':date[t].innerHTML.substring(0,10)&#125;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for (var i = 0; i &lt; content.length; i++) &#123;</span></span><br><span class="line"><span class="string">    var conBox=document.createElement("</span>div<span class="string">");</span></span><br><span class="line"><span class="string">    conBox.id='conBox'+i;</span></span><br><span class="line"><span class="string">    box.appendChild(conBox);</span></span><br><span class="line"><span class="string">    var item=document.createElement("</span>div<span class="string">");</span></span><br><span class="line"><span class="string">    var title=content[i][0].url;</span></span><br><span class="line"><span class="string">    item.innerHTML="</span>&lt;button <span class="class"><span class="keyword">class</span></span>=title style=background:url(<span class="string">"+xmllink+'/'+title+"</span>封面.jpg<span class="string">"+"</span>);&gt;<span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">display:inline;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span> <span class="attr">style</span>=<span class="string">color:#f0f3f6;</span> &gt;</span>"+title.substring(0,title.length-1)+"<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&lt;<span class="regexp">/button&gt;";</span></span><br><span class="line"><span class="regexp">    conBox.appendChild(item);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    for (var j = 1; j &lt; content[i].length &amp;&amp; j &lt; showNum+1; j++) &#123;</span></span><br><span class="line"><span class="regexp">        var con=content[i][j].url;</span></span><br><span class="line"><span class="regexp">        var item=document.createElement("li");</span></span><br><span class="line"><span class="regexp">        item.innerHTML="&lt;div class=imgbox id=imgbox style=height:"+wid+"px;&gt;&lt;img class=imgitem src="+xmllink+'/</span><span class="string">'+title+con+" alt="+con+"&gt;&lt;/div&gt;&lt;span&gt;"+con.substring(0,con.length-4)+"&lt;/span&gt;&lt;p&gt;上传于"+content[i][j].date+"&lt;/p&gt;";</span></span><br><span class="line"><span class="string">        conBox.appendChild(item);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if(content[i].length &gt; showNum)&#123;</span></span><br><span class="line"><span class="string">        var moreItem=document.createElement("button");</span></span><br><span class="line"><span class="string">        moreItem.className="btn-more-posts";</span></span><br><span class="line"><span class="string">        moreItem.id="more"+i;</span></span><br><span class="line"><span class="string">        moreItem.value=showNum+1;</span></span><br><span class="line"><span class="string">        let cur=i;</span></span><br><span class="line"><span class="string">        moreItem.onclick= function ()&#123;</span></span><br><span class="line"><span class="string">            moreClick(this,cur,content[cur],content[cur][0].url);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        moreItem.innerHTML="&lt;span style=display:inline;&gt;&lt;strong style=color:#f0f3f6;&gt;加载更多&lt;/strong&gt;&lt;/span&gt;";</span></span><br><span class="line"><span class="string">        conBox.appendChild(moreItem);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function moreClick(obj,cur,cont,title)&#123;</span></span><br><span class="line"><span class="string">    var parent=obj.parentNode;</span></span><br><span class="line"><span class="string">    parent.removeChild(obj);</span></span><br><span class="line"><span class="string">    var j=obj.value;</span></span><br><span class="line"><span class="string">    var begin=j;</span></span><br><span class="line"><span class="string">    for ( ; j &lt; cont.length &amp;&amp; j &lt; Number(showNum) + Number(begin); j++) &#123;</span></span><br><span class="line"><span class="string">        console.log( Number(showNum) + Number(begin));</span></span><br><span class="line"><span class="string">        var con=cont[j].url;</span></span><br><span class="line"><span class="string">        var item=document.createElement("li");</span></span><br><span class="line"><span class="string">        item.innerHTML="&lt;div class=imgbox id=imgbox style=height:"+wid+"px;&gt;&lt;img class=imgitem src="+xmllink+'</span>/<span class="string">'+title+con+" alt="+con+"&gt;&lt;/div&gt;&lt;span&gt;"+con.substring(0,con.length-4)+"&lt;/span&gt;&lt;p&gt;上传于"+cont[j].date+"&lt;/p&gt;";</span></span><br><span class="line"><span class="string">        parent.appendChild(item);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if(cont.length &gt; j)&#123;</span></span><br><span class="line"><span class="string">        obj.value=j;</span></span><br><span class="line"><span class="string">        parent.appendChild(obj);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><br>    * 相册样式可以自行去调整<br>    * 注意：<br>        * 存储桶中应该必须是文件夹，不能图片和文件夹同级，否则报错：Uncaught ypeError: Cannot set property ‘0’ of undefined，</p>
<h3 id="手动修改博客css样式，打造属于自己的博客样式"><a href="#手动修改博客css样式，打造属于自己的博客样式" class="headerlink" title="手动修改博客css样式，打造属于自己的博客样式"></a>手动修改博客css样式，打造属于自己的博客样式</h3><ul>
<li>F12手动查看网页</li>
<li>自己主题的themes extsourcecss_custom目录下的custom.styl文件<h3 id="自定义文章底部版权声明"><a href="#自定义文章底部版权声明" class="headerlink" title="自定义文章底部版权声明"></a>自定义文章底部版权声明</h3></li>
</ul>
<ol>
<li>在目录 themes/next/layout/_macro/ 下添加 my-copyright.swig ，内容如下： <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"&#123;&#123; page.permalink &#125;&#125;"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span></span><br><span class="line"><span class="javascript">    clipboard.on(<span class="string">'success'</span>, $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">        swal(&#123;   </span><br><span class="line"><span class="actionscript">        title: <span class="string">""</span>,   </span></span><br><span class="line"><span class="actionscript">        text: <span class="string">'复制成功'</span>,   </span></span><br><span class="line"><span class="actionscript">        html: <span class="literal">false</span>,</span></span><br><span class="line">        timer: 500,   </span><br><span class="line"><span class="actionscript">        showConfirmButton: <span class="literal">false</span></span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;));  </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>
<li>在目录 themes/next/source/css/_common/components/post/ 下添加 my-post-copyright.styl，内容如下:<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">    <span class="attribute">word-break</span>: break-all;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line">    color: #333333; // title color</span><br><span class="line">    <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    color: #0593d3; // link color</span><br><span class="line">    <span class="selector-tag">text-decoration</span>: <span class="selector-tag">underline</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">    +mobile()&#123;display:none;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li>修改 themes/next/layout/_macro/post.swig ，如下：<br>在代码<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% include 'wechat-subscriber.swig' %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
之前，新增如下代码：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include 'my-copyright.swig' %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>打开 themes/next/source/css/_common/components/post/post.styl 文件，在最后一行增加代码:<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"my-post-copyright"</span></span><br></pre></td></tr></table></figure></li>
<li>设置新建文章自动开启 copyright ，即新建文章自动显示自定义的版权声明，设置 ～/scaffolds/post.md 文件，如下：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">copyright: true #新增,开启</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h3 id="建立标签云及效果展示"><a href="#建立标签云及效果展示" class="headerlink" title="建立标签云及效果展示"></a>建立标签云及效果展示</h3><a href="http://www.aomanhao.top/2019/04/20/hexo_Tag_cloud/" target="_blank" rel="noopener">Hexo博客建立标签云及效果展示</a><h3 id="Hexo文章简单加密访问"><a href="#Hexo文章简单加密访问" class="headerlink" title="Hexo文章简单加密访问"></a>Hexo文章简单加密访问</h3><a href="https://blog.paddings.cn/2016/12/01/blog/hexo-password/" target="_blank" rel="noopener">教程：密码 password</a><h3 id="在Hexo博客中加入豆瓣读书页面"><a href="#在Hexo博客中加入豆瓣读书页面" class="headerlink" title="在Hexo博客中加入豆瓣读书页面"></a>在Hexo博客中加入豆瓣读书页面</h3><a href="https://bestzuo.cn/posts/hexo-douban.html" target="_blank" rel="noopener">参考链接</a></li>
</ol>
<hr>
<p><a href="https://io-oi.me/tech/hexo-next-optimization/#%E5%9C%A8%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85-hexo" target="_blank" rel="noopener">参考文档：打造个性超赞博客 Hexo + NexT + GitHub Pages 的超深度优化</a><br><a href="https://www.liaofuzhan.com/posts/2114475547.html" target="_blank" rel="noopener">参考文档：Hexo NexT主题美化2.0</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>添加文章版权</title>
    <url>/2020/01/03/%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E7%89%88%E6%9D%83/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>测试版权</title>
    <url>/2020/01/03/%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<a id="more"></a>
<p>哈哈</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>tags</title>
    <url>/2020/01/01/tags%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Tags使用"><a href="#Tags使用" class="headerlink" title="Tags使用"></a>Tags使用</h2><p>语法：$ hexo new page tags<br>注意：type: tags<br>标签云添加：tags: [标签云]<br>分类添加: categories: [标签云]</p>
]]></content>
      <categories>
        <category>标签云</category>
      </categories>
      <tags>
        <tag>标签云</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 示范</title>
    <url>/2019/12/31/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<a id="more"></a>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用标题时需要使用#号</p>
<h2 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h2><p>这是第一个段落内容</p>
<p>这是第二个段落内容</p>
<p>字体：粗文本使用前后分别两个 * 号</p>
<h2 id="区块引用，使用"><a href="#区块引用，使用" class="headerlink" title="区块引用，使用"></a>区块引用，使用</h2><blockquote>
<p>这是一段引用段落，将会被高亮显示</p>
</blockquote>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'RUNOOB'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>这是一个链接 <a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1752749994,1753922299&fm=26&gp=0.jpg" alt="风景"></p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr>
<hr>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<h2 id="列表嵌套："><a href="#列表嵌套：" class="headerlink" title="列表嵌套："></a>列表嵌套：</h2><ol>
<li>第一项：<ul>
<li>第一项嵌套的第一个元素</li>
<li>第一项嵌套的第二个元素</li>
</ul>
</li>
<li>第二项：<ul>
<li>第二项嵌套的第一个元素</li>
<li>第二项嵌套的第二个元素</li>
</ul>
</li>
</ol>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody></table>
<hr>
<div align="middle">
    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1362921283&auto=0&height=66"></iframe>
</div>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
</search>
