<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>win10主题美化</title>
    <url>/88752664/</url>
    <content><![CDATA[<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/2020032700385565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h2 id="RocketDock"><a href="#RocketDock" class="headerlink" title="RocketDock"></a>RocketDock</h2><p>类似于mac风格，功能如桌面右侧。</p>
<h2 id="StartIsBack"><a href="#StartIsBack" class="headerlink" title="StartIsBack"></a>StartIsBack</h2><blockquote>
<p>美化开始菜单，透明化、居中任务栏(推荐)<br>当然TranslucentTB也有同样的透明化任务栏作用</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200327004215694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h2 id="wallpaper-Engine"><a href="#wallpaper-Engine" class="headerlink" title="wallpaper Engine"></a>wallpaper Engine</h2><p>动态桌面壁纸，里面各种精美的图片，还可以自己制作，很容易上手。<br>价格也便宜，19刀即可。<br><img src="https://img-blog.csdnimg.cn/20200327004341722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h2 id="TrafficMonitor"><a href="#TrafficMonitor" class="headerlink" title="TrafficMonitor"></a>TrafficMonitor</h2><p>实时网速、CPU、内存显示，支持多种皮肤、自定义皮肤</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
  </entry>
  <entry>
    <title>java从头来过</title>
    <url>/2053337275/</url>
    <content><![CDATA[<p>自身感觉学的体系日渐庞大，虽然可以渐渐的熟悉项目开发，但是自身知识消化理解还不是很好。遂准备重新复习基础。</p>
<a id="more"></a>
<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量：在内存里开辟一个合适的空间来储存数据</p>
<blockquote>
<p>特性： 1.）存储数据 2.）允许被改变 3.）系统来分配，在内存里开辟一个内存空间，<br>先声明，再赋值，使用</p>
</blockquote>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><img src="https://img-blog.csdnimg.cn/20200326153012577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>数据过大溢出<br><img src="https://img-blog.csdnimg.cn/20200326154232488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><blockquote>
<p>random 产生的是[0,1)的小数。<br>如果想要产生[0–50)之间的数字: random() _ 50<br>如果想要产生[50–100]之间的整数: (int)Math.random() _ 50 + 50</p>
</blockquote>
<h3 id="取余-rem-取整-取模-Mod"><a href="#取余-rem-取整-取模-Mod" class="headerlink" title="取余(rem)取整 取模(Mod)"></a>取余(rem)取整 取模(Mod)</h3><ul>
<li><p>取余 %：</p>
<blockquote>
<p>10 % 3 = 1（10 除以 3）—-求余数<br>2 % 5 = 2 （没有可以整除 5 那部分的）<br>rem(3,2) = 1<br>rem(-3,-2) = -1<br>rem(3,-2) = 1<br>rem(-3,2) = -1</p>
</blockquote>
</li>
<li><p>取模运算：Math.floorMod()</p>
<blockquote>
<p>mod 结果的符号与除数 b 相同<br>mod(3,2)=1<br>mod(-3,-2)=-1<br>mod(3,-2)=-1<br>mod(-3,2)=1</p>
</blockquote>
</li>
<li><p>取整</p>
<blockquote>
<p>5 / 2 = 2 （2.5）<br>2 / 5 = 0 （0.4）</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>注意：<br>当除数与被除数的符号相同时，rem 和 mod 的结果是完全相同的；<br>当除数与被除数的符号不相同时，结果不同;</p>
</blockquote>
<h3 id="自加自减运算"><a href="#自加自减运算" class="headerlink" title="自加自减运算"></a>自加自减运算</h3><p>不过先加减还是先运算再加减，值都是变化了</p>
<blockquote>
<p>加加 减减 运算后 值都是会改变的；<br>只是 a++是值改变但是对本身的式子不会产生影响（因为已经运算完了，须传递给后面的式子）<br>而 ++a 是 先 自加 然后再进行本身式子的运算，所以会立即产生影响<br><img src="https://img-blog.csdnimg.cn/20200326154844945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</blockquote>
<h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><blockquote>
<p>判断条件 ? 表达式 1 : 表达式 2</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200326155115457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>Demo:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 求一个数的四舍五入;</span></span><br><span class="line"><span class="comment"> * num1 = 3;</span></span><br><span class="line"><span class="comment"> * num2 = 0.5099999999999998;</span></span><br><span class="line"><span class="comment"> * result = 4;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> xnxy.blue.ternary.operator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TernaryOperator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    	<span class="comment">//求一个数的四舍五入;</span></span><br><span class="line">    	<span class="keyword">double</span> num = <span class="number">3.51</span>;</span><br><span class="line">    	<span class="comment">//这个数的整数部分;</span></span><br><span class="line">    	<span class="keyword">int</span> num1 = (<span class="keyword">int</span>)num;</span><br><span class="line">    	<span class="comment">//这个数的小数部分</span></span><br><span class="line">    	<span class="keyword">double</span> num2 = num - num1;</span><br><span class="line">    	<span class="comment">//运用三元运算符四舍五入，再把 double类型 的强制转换成了 int类型;</span></span><br><span class="line">    	<span class="keyword">int</span> result = (<span class="keyword">int</span>) (num2 &gt;= <span class="number">0.5</span> ? num1+<span class="number">1</span> : num1);</span><br><span class="line">    	System.out.println(<span class="string">"num1="</span>+num1+<span class="string">",num2="</span>+num2);</span><br><span class="line">    	System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h3><p><img src="https://img-blog.csdnimg.cn/20200326155644309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200326160024625.png" alt=""></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.logicaloperator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogicalOperatorSecondDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    	System.out.println(<span class="keyword">true</span> | <span class="keyword">true</span>);</span><br><span class="line">    	System.out.println(<span class="keyword">true</span> | <span class="keyword">false</span>);</span><br><span class="line">    	System.out.println(<span class="keyword">true</span> || (<span class="number">1</span> / <span class="number">0</span> == <span class="number">0</span>));<span class="comment">//没有报错</span></span><br><span class="line">    	<span class="comment">//System.out.println(true | (1 / 0 == 0));//报错,运算1/0为无穷大</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//非：相反</span></span><br><span class="line">    	System.out.println(<span class="string">"--------------"</span>);</span><br><span class="line">    	System.out.println(!<span class="keyword">false</span>);<span class="comment">//true</span></span><br><span class="line">    	System.out.println(!<span class="keyword">true</span>);<span class="comment">//false</span></span><br><span class="line">    	System.out.println(!!<span class="keyword">true</span>);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">    	System.out.println(<span class="string">"--------------"</span>);</span><br><span class="line">    	<span class="comment">//异或：相同则为false ； 不同则为 true</span></span><br><span class="line">    	System.out.println(<span class="keyword">false</span> ^ <span class="keyword">false</span>);<span class="comment">//false</span></span><br><span class="line">    	System.out.println(<span class="keyword">true</span> ^ <span class="keyword">true</span>);<span class="comment">//false</span></span><br><span class="line">    	System.out.println(<span class="keyword">false</span> ^ <span class="keyword">true</span>);<span class="comment">//true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="两个变量间值的交换"><a href="#两个变量间值的交换" class="headerlink" title="两个变量间值的交换"></a>两个变量间值的交换</h3><p><img src="https://img-blog.csdnimg.cn/20200326160310928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="键盘扫描器-Scanner"><a href="#键盘扫描器-Scanner" class="headerlink" title="键盘扫描器 Scanner"></a>键盘扫描器 Scanner</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner input = <span class="keyword">new</span> Scanner(System.in)</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num1 = input.nextint; <span class="comment">//(next 行 + 类型)</span></span><br><span class="line"><span class="keyword">char</span> c1 = input.next().charAt(<span class="number">0</span>);<span class="comment">//字符型</span></span><br><span class="line">String str = input.next();<span class="comment">//字符串类型</span></span><br></pre></td></tr></table></figure>

<h3 id="switch-语句"><a href="#switch-语句" class="headerlink" title="switch 语句"></a>switch 语句</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(整数选择因子或者字符串或者枚举) &#123;</span><br><span class="line">　　<span class="keyword">case</span> 整数值 <span class="number">1</span> : 语句; <span class="keyword">break</span>;</span><br><span class="line">　　<span class="keyword">case</span> 整数值 <span class="number">2</span> : 语句; <span class="keyword">break</span>;</span><br><span class="line">　　<span class="keyword">case</span> 整数值 <span class="number">3</span> : 语句; <span class="keyword">break</span>;</span><br><span class="line">　　<span class="keyword">case</span> 整数值 <span class="number">4</span> : 语句; <span class="keyword">break</span>;</span><br><span class="line">　　<span class="keyword">case</span> 整数值 <span class="number">5</span> : 语句; <span class="keyword">break</span>;</span><br><span class="line">　　<span class="comment">//..</span></span><br><span class="line">　　<span class="keyword">default</span>:语句;<span class="number">92</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>switch 语句接受的数据类型</strong></p>
<blockquote>
<p>switch 语句中的表达式的数据类型,是有要求的<br>JDK1.0 - 1.4 数据类型接受 byte short int char<br>JDK1.5 数据类型接受 byte short int char enum(枚举)<br>JDK1.7 数据类型接受 byte short int char enum(枚举), String</p>
</blockquote>
<h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h3><ul>
<li>循环语句 for<br>for 循环语句是最常用的循环语句，一般用在循环次数已知的情况下。for 循环语句的语法格式如下：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>（初始化表达式; 循环条件; 操作表达式）&#123;</span><br><span class="line"></span><br><span class="line">    执行语句</span><br><span class="line">    ………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>接下来分别用 ① 表示初始化表达式、② 表示循环条件、③ 表示操作表达式、④ 表示循环体，通过序号来具体分析 for 循环的执行流程。具体如下：<br>for（① ; ② ; ③）{<br>　　 ④<br>}</p>
</blockquote>
<ul>
<li><p>第一步，执行 ①</p>
</li>
<li><p>第二步，执行 ②，如果判断结果为 true，执行第三步，如果判断结果为 false，执行第五步</p>
</li>
<li><p>第三步，执行 ④</p>
</li>
<li><p>第四步，执行 ③，然后重复执行第二步</p>
</li>
<li><p>第五步，退出循环</p>
</li>
<li><p>do…while 语句<br>特点：先执行一次循环体，在判断表达式，若为 true 就执行循环体，否则，跳过循环体，也就是<strong>先执行再判断，不管怎么都会至少执行一次</strong></p>
<blockquote>
<p>do…while 循环语句和 while 循环语句功能类似，其语法结构如下：<br>do {</p>
<pre><code>执行语句
………</code></pre><p>} while(循环条件);</p>
</blockquote>
</li>
</ul>
<h3 id="跳转语句（break、continue）"><a href="#跳转语句（break、continue）" class="headerlink" title="跳转语句（break、continue）"></a>跳转语句（break、continue）</h3><ul>
<li>break 语句<blockquote>
<p>在 switch 条件语句和循环语句中都可以使用 break 语句。当它出现在 switch 条件语句中时，作用是终止某个 case 并跳出 switch 结构。当它出现在循环语句中，作用是跳出循环语句，执行后面的代码。</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BreakDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">1</span>; <span class="comment">// 定义变量x，初始值为1</span></span><br><span class="line">        <span class="keyword">while</span> (x &lt;= <span class="number">4</span>) &#123; <span class="comment">// 循环条件</span></span><br><span class="line">            System.out.println(<span class="string">"x = "</span> + x); <span class="comment">// 条件成立，打印x的值</span></span><br><span class="line">            <span class="keyword">if</span> (x == <span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            x++; <span class="comment">// x进行自增</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>使用标记跳出循环<blockquote>
<p>当 break 语句出现在嵌套循环中的内层循环时，它只能跳出内层循环，如果想使用 break 语句跳出外层循环则需要对外层循环添加标记。</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BreakDemo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i, j; <span class="comment">// 定义两个循环变量</span></span><br><span class="line">        Loop: <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123; <span class="comment">// 外层循环</span></span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; j++) &#123; <span class="comment">// 内层循环</span></span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">4</span>) &#123; <span class="comment">// 判断i的值是否大于4</span></span><br><span class="line">                    <span class="keyword">break</span> Loop; <span class="comment">// 跳出外层循环</span></span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">"*"</span>); <span class="comment">// 打印*</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(<span class="string">"\n"</span>); <span class="comment">// 换行</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>continue 语句<blockquote>
<p>continue 语句用在循环语句中，它的作用是终止本次循环，执行下一次循环。</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContinueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>; <span class="comment">// 定义变量sum，用于记住和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123; <span class="comment">// i是一个偶数，不累加</span></span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">// 结束本次循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            sum += i; <span class="comment">// 实现sum和i的累加</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"sum = "</span> + sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sum = 2500</span></span><br></pre></td></tr></table></figure>

<h3 id="九九乘法口诀"><a href="#九九乘法口诀" class="headerlink" title="九九乘法口诀"></a>九九乘法口诀</h3><p><img src="https://img-blog.csdnimg.cn/20200326162456743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><blockquote>
<p>变量空间：是在栈里面开辟的并且地址是由系统分配的<br>数组的开辟：是在堆里面开辟一块连续的内存空间，并且这个内存空间的大小是可以由程序控制的（在栈里面分配）</p>
</blockquote>
<p>数组的特性：</p>
<ul>
<li>空间连续（知道第一个地址，就知道第二个第三个……）</li>
<li>长度固定（局限性）</li>
<li>类型单一（开辟的整型的数组，就只能存放整型的，不过 byte，short 也可 以）因为可以自动转换</li>
</ul>
<p>数组的定义：</p>
<ul>
<li>静态初始化：<ul>
<li>数据类型 [ ] 数组名 = {值列表}； * 数据类型 [ ] 数组名 = new 数据类型[ ]{值列表};</li>
</ul>
<ul>
<li>在数据已知的时候使用</li>
</ul>
</li>
<li>动态初始化：<ul>
<li>数据类型 [ ] 数组名 = new 数据类型[ 数组长度] - 数组赋值：数组名[索引下标 ] = 值; - 属性名.length</li>
</ul>
</li>
</ul>
<p>二维数组：</p>
<blockquote>
<p>静态: 数据类型 数组名 [][] = {值列表 1},{值列表 2},{值列表 3}…. 记得大花括号都括起来（语法问题报错）<br>动态: 数据类型 数组名 [][] = new 数据类型[ 数组长度 ][ 数组长度]</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200326163204887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul>
<li>升序排序</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//给数组升序排序</span></span><br><span class="line"><span class="keyword">int</span>[] num = &#123;<span class="number">28</span>,<span class="number">25</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">13</span>&#125; ;</span><br><span class="line"><span class="comment">//外层循环:比较的轮数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; num.length - <span class="number">1</span>;i++) &#123;</span><br><span class="line">  <span class="comment">//里层循环:每一轮比较的次数</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; num.length - <span class="number">1</span> - i;j++) &#123;</span><br><span class="line">    <span class="comment">//比较交换</span></span><br><span class="line">    <span class="keyword">if</span>(num[j] &gt; num[j + <span class="number">1</span>]) &#123;</span><br><span class="line">      <span class="comment">//定义临时变量</span></span><br><span class="line">      <span class="keyword">int</span> temp = num[j + <span class="number">1</span>];</span><br><span class="line">      num[j + <span class="number">1</span>] = num[j];</span><br><span class="line">      num[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印升序后的数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; num.length;i++) &#123;</span><br><span class="line">  System.out.println(num[i] + <span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出:5 8 13 25 28</span></span><br></pre></td></tr></table></figure>

<ul>
<li>降序排序</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] num2 = <span class="keyword">new</span> <span class="keyword">int</span>[原来数组 num.length];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> index = num2.length - <span class="number">1</span>;index &gt;= <span class="number">0</span>;index--) &#123;</span><br><span class="line">  num2[num2.length - index - <span class="number">1</span>] = num2[index];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//System.out.print("数组降序排序:");</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> index = <span class="number">0</span>;index &lt; num2.length;index++) &#123;</span><br><span class="line">System.out.print(num2[index] + <span class="string">" "</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>选择算法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span>[] num = &#123;<span class="number">28</span>,<span class="number">25</span>,<span class="number">3</span>,<span class="number">21</span>,<span class="number">14</span>&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; num.length - <span class="number">1</span>;i++) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>;j &lt; num.length;j++) &#123;</span><br><span class="line">      <span class="comment">//num[i] = num[j - 1]</span></span><br><span class="line">      <span class="keyword">if</span>(num[i] &gt;  num[j]) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = num[i];</span><br><span class="line">        num[i] = num[j];</span><br><span class="line">        num[j] = temp;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; num.length;i++) &#123;</span><br><span class="line">    System.out.print(num[i] + <span class="string">" "</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出: 3 14 21 25 28</span></span><br><span class="line"><span class="comment">// 注意索引下标越界</span></span><br></pre></td></tr></table></figure>

<ul>
<li>插入算法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.summarize;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test1</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span>[] num1 = &#123;<span class="number">3</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="comment">//int[] num1 = &#123;3,10,15,23,&#125;;    //插入25 --&gt;3 10 15 25;因为数组长度为 4.  //第五个没有数 故不占内存</span></span><br><span class="line">  Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">  System.out.println(<span class="string">"请输入要插入的值:"</span>);</span><br><span class="line">  <span class="keyword">int</span> n = input.nextInt();</span><br><span class="line">  <span class="comment">// 输入一个值，插入数组中，使数组能够升序排序</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.先找到插入的索引下标</span></span><br><span class="line">  <span class="keyword">int</span> index = num1.length - <span class="number">1</span>;  <span class="comment">//解决插入的数比目前的都大的问题</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>;m &lt; num1.length;m++) &#123;</span><br><span class="line">    <span class="comment">// 如果有比它大的，就把值赋值给比它大的那个数对应的索引</span></span><br><span class="line">    <span class="comment">// 如果没有比它大的，就直接把原始值 num1.length - 1 赋值给index</span></span><br><span class="line">    <span class="keyword">if</span>(num1[m] &gt; n) &#123;</span><br><span class="line">      index = m;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//2.后面的数据后移</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> m = num1.length - <span class="number">1</span>;m &gt; index;m--) &#123;</span><br><span class="line">    num1[m] = num1[m - <span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//3.把数据插入到索引</span></span><br><span class="line">    num1[index] = n;</span><br><span class="line">    System.out.println(<span class="string">"插入后的结果:"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> m = <span class="number">0</span>;m &lt; num1.length;m++) &#123;</span><br><span class="line">      System.out.print(num1[m] + <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>二分法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.homework;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">//二维数组的不规则打印,需要用到 数组名[i:第几轮].length.</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 *输入五个数</span></span><br><span class="line"><span class="comment">	 *升序</span></span><br><span class="line"><span class="comment">	 *二分法查找数据</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner input = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">int</span>[] num = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++) &#123;</span><br><span class="line">      System.out.println(<span class="string">"请输入数组的第"</span> + i + <span class="string">"个数:"</span> );</span><br><span class="line">      num[i] = input.nextInt();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.print(<span class="string">"输出的数组是:"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++) &#123;</span><br><span class="line">      System.out.print(num[i] + <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将输出的数组升序排序</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; num.length - <span class="number">1</span>;i++) &#123;</span><br><span class="line">      System.out.println(<span class="string">""</span>);</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; num.length - i - <span class="number">1</span>;j++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num[j] &gt; num[j + <span class="number">1</span>]) &#123;</span><br><span class="line">          <span class="keyword">int</span> temp = num[j + <span class="number">1</span>];</span><br><span class="line">          num[j + <span class="number">1</span>] = num[j];</span><br><span class="line">          num[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; num.length;i++) &#123;</span><br><span class="line">      System.out.println(num[i] + <span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//普通方法查找数据</span></span><br><span class="line">    System.out.print(<span class="string">"请输入你要查找的数字:"</span>);</span><br><span class="line">    <span class="keyword">int</span> number = input.nextInt();</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    for(int i = 0;i &lt; num.length;i++) &#123;</span></span><br><span class="line"><span class="comment">      if(num[i] == number) &#123;</span></span><br><span class="line"><span class="comment">        System.out.print("该数字在第" + (i+1) + "个");</span></span><br><span class="line"><span class="comment">      &#125;else &#123;</span></span><br><span class="line"><span class="comment">        continue;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">//二分法查找 + for</span></span><br><span class="line">    <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> high = num.length - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    for(int i = 0;i &lt;= high;i++) &#123;</span></span><br><span class="line"><span class="comment">      int middle = (high + low) / 2;</span></span><br><span class="line"><span class="comment">      if(number == num[i]) &#123;</span></span><br><span class="line"><span class="comment">        System.out.print("该数字在第" + (i+1) + "个");</span></span><br><span class="line"><span class="comment">      &#125;else if(number &lt; num[i]) &#123;</span></span><br><span class="line"><span class="comment">        high = middle;</span></span><br><span class="line"><span class="comment">      &#125;else &#123;</span></span><br><span class="line"><span class="comment">        low = middle;</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">int</span> index = binarySearch(number,<span class="number">4</span>);   报错</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//二分法查找 + while(要使用方法,添加int)</span></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binaryArray</span><span class="params">(<span class="keyword">int</span> num[],<span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> high = num.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(low &lt;= high) &#123;</span><br><span class="line">      <span class="keyword">int</span> middle = (high + low) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(number == num[middle]) &#123;</span><br><span class="line">      <span class="keyword">return</span> middle;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(number &lt; num[middle]) &#123;</span><br><span class="line">      high = middle;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      low = middle;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> - <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p><img src="https://img-blog.csdnimg.cn/2020032621491994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>特点：方法的单一性，一个方法实现一个功能</p>
<ul>
<li><p>方法的执行流程<br><img src="https://img-blog.csdnimg.cn/20200326215347928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</li>
<li><p>方法重载设计</p>
<ul>
<li>特点<br>方法名一致<br>参数不一样（类型，个数，顺序）</li>
</ul>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200326215545238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h3><ul>
<li><p>类：</p>
<blockquote>
<p>抽象的，具有共同行为特征的一组对象的集合（对象的模板）<br>在一组对象里抽取共同的行为特征</p>
</blockquote>
</li>
<li><p>对象</p>
<blockquote>
<p>实际存在的，看得见摸得到，并且不随主观意识的改变而改变（类的实例）</p>
</blockquote>
</li>
<li><p>属性</p>
<blockquote>
<p>对象具有的各种特征<br>每个对象的每个属性都拥有特征值</p>
</blockquote>
</li>
</ul>
<p>方法</p>
<blockquote>
<p>对象的行为</p>
</blockquote>
<ul>
<li>构造方法<blockquote>
<p>作用:<br>创建对象并且初始化对象<br>对象出生的方法<br>特点：<br>方法名与类名一致<br>无返回值，但 void（无返回值类型，故构造方法里没有 void）<br>不写，虚拟机会默认生成一个无参数的构造方法<br>如果有显示的构造方法就不会生成</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        描述类的属性：</span></span><br><span class="line"><span class="comment">          成员变量:类的里面，方法的外面 ，有默认值</span></span><br><span class="line"><span class="comment">          this.变量 = 成员变量;</span></span><br><span class="line"><span class="comment">        this: 表示的是当前操作的对象</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">	<span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">public</span> String name;</span><br><span class="line">	<span class="comment">//年龄</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//体重</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> weight;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> age;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(<span class="keyword">int</span> Weight)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.weight = weight;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> weight;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Customer</span><span class="params">(String name,<span class="keyword">int</span> age,<span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">		<span class="keyword">this</span>.weight = weight;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>new 对象：Customer zhanghao = new Customer(“张浩”,20,60);</p>
</blockquote>
<ul>
<li>一个对象的内存图<br><img src="https://img-blog.csdnimg.cn/20200326220534476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200326220607945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></li>
</ul>
<h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul>
<li>this 关键字<blockquote>
<p>使用：当局部变量与成员变量名重名，如果要调用成员变量，此时在变量前加 this 关键字<br>意义：代表着当前操作的对象<br>原理图：<br><img src="https://img-blog.csdnimg.cn/20200326220846937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</blockquote>
</li>
<li>static 关键字<blockquote>
<p>使用：</p>
<pre><code>当希望某个成员变量属于整个类而不是某个对象，就加static
eg：public static int count; //学生人数的累加</code></pre><p>意义：<br>static 修饰的成员，此成员属于某个类<br>总结：<br>1.)用 static 修饰的成员，不能用 this 关键字<br>2.)实例方法（非静态的方法）可以直接使用静态成员<br>3.)静态方法不能直接调用实例对象（非静态的成员）<br>4.)静态成员：类名.实例对象<br>不能直接调用，可以创建新对象<br>5.)static 不能修饰构造方法</p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentDemo</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line">	<span class="comment">//学生人数</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> count;</span><br><span class="line">	<span class="comment">//重写StudentDemo方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">StudentDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		count++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"学生人数:"</span>+count);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentCount</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//每创建一个对象就调用一次无参构造，count就可以加一</span></span><br><span class="line">		StudentDemo student1 = <span class="keyword">new</span> StudentDemo();</span><br><span class="line">		student1 .print(); <span class="comment">// 1</span></span><br><span class="line">		StudentDemo student2 = <span class="keyword">new</span> StudentDemo();</span><br><span class="line">		student2 .print(); <span class="comment">// 2</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200326222153187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<ul>
<li><p>final 关键字<br>继承关系最大弊端是破环封装：子类能访问父类的实现细节，而且可以通过方法覆盖的形式修改实现细节<br>含义：<strong>最终的，不可改变的</strong>，它可以修饰非抽象类，非抽象方法和变量。注意：<strong>构造方法不能使用 final 修饰，因为本身不能被继承，肯定是最终的。</strong></p>
<p>  final修饰的变量称为常量，这些变量只能赋值一次。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> i = <span class="number">20</span>;</span><br><span class="line">i = <span class="number">30</span>; <span class="comment">//赋值报错，final修饰的变量只能赋值一次</span></span><br></pre></td></tr></table></figure>
<p>引用类型的变量值为对象地址值，地址值不能更改，但是地址内的对象属性值可以修改。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> Person p = <span class="keyword">new</span> Person();</span><br><span class="line">Person p2 = <span class="keyword">new</span> Person();</span><br><span class="line">p = p2; <span class="comment">//final修饰的变量p，所记录的地址值不能改变</span></span><br><span class="line">p.name = <span class="string">"小明"</span>;<span class="comment">//可以更改p对象中name属性值</span></span><br><span class="line"><span class="comment">//p不能为别的对象，而p对象中的name或age属性值可更改。</span></span><br></pre></td></tr></table></figure>
<p>修饰成员变量，需要在创建对象前赋值，否则报错。(当没有显式赋值时，多个构造方法的均需要为其赋值。)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">  <span class="comment">//直接赋值</span></span><br><span class="line">  <span class="keyword">final</span> <span class="keyword">int</span> m = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//final修饰的成员变量，需要在创建对象前赋值，否则报错。</span></span><br><span class="line">  <span class="keyword">final</span> <span class="keyword">int</span> n;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">//可以在创建对象时所调用的构造方法中，为变量n赋值</span></span><br><span class="line">      n = <span class="number">2016</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200326221143143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</li>
<li><p>super 关键字<br>当前对象的父类对象<br><img src="https://img-blog.csdnimg.cn/20200326221651793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>因为通过无参构造器，我们就可以点出方法<br><img src="https://img-blog.csdnimg.cn/20200326221809570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</li>
</ul>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="{ } 代码块"></a>{ } 代码块</h3><blockquote>
<pre><code>执行时机：类加载之后，对象创建之前（对象创建一次就执行一次）</code></pre></blockquote>
<pre><code>执行过程：
    1.) 加载类
    2.) 创建对象
    3.) 构造方法执行(初始化的作用)</code></pre><p>静态代码块：<br>执行时机：类加载时（只执行了一次）<br>static {<br>System.out.print(“”);<br>}</p>
<h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><blockquote>
<p>概念：将类的某些信息隐藏在类内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问<br>前提：私有的 private<br>目的：解决安全性的问题<br>步骤:</p>
</blockquote>
<pre><code>1. 把属性设置为 私有                                     ----&gt;设置为 private
2. 创建共有的setter/getter方法                     ----&gt;便于属性的读写
3. 在setter/getter方法中加入属性控制语句    ----&gt;对属性的合法性进行判断</code></pre><h3 id="继承-extends"><a href="#继承-extends" class="headerlink" title="继承 extends"></a>继承 extends</h3><p>语法：子类 extends 父类<br>特点： 1.）从内存角度讲：继承父类所有成员（成员变量，成员方法） 2.）继承单向性：<br>子类可以调用父类成员<br>父类不能调用子类成员 3.）应用角度讲：private 私有的，虽然继承过来了，但是我只是没有访问权限 4.）继承单一性：<br>只能继承一个父类，不能继承多个<br>一个父类可以有多个子类 5.）继承传递性：<br>父类可以传递给子类，子类再传递给子类的子类（儿子也继承爷爷的） 6.）构造方法不能被继承的<br>继承中的构造方法：<br><strong>子类对象产生的时候，会优先创建父类对象</strong><br>解决：代码重用性的问题</p>
<ul>
<li>继承图<br><img src="https://img-blog.csdnimg.cn/20200326224426974.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></li>
</ul>
<h3 id="重写（方法覆盖）"><a href="#重写（方法覆盖）" class="headerlink" title="重写（方法覆盖）"></a>重写（方法覆盖）</h3><p>使用：当父类的方法无法满足子类的需求，重写父类的方法<br>特点：</p>
<ol>
<li>方法名一致，参数一致，返回类型一致。</li>
<li>访问权限大于或者等于父类方法的访问权限</li>
<li>方法体不相同</li>
<li>使用注解@Override</li>
</ol>
<p>实现方式：</p>
<ol>
<li>继承父类</li>
<li>实现接口</li>
</ol>
<h3 id="方法重写和方法重载的区别"><a href="#方法重写和方法重载的区别" class="headerlink" title="方法重写和方法重载的区别"></a>方法重写和方法重载的区别</h3><p><img src="https://img-blog.csdnimg.cn/20200326224640273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="修饰符的访问权限"><a href="#修饰符的访问权限" class="headerlink" title="修饰符的访问权限"></a>修饰符的访问权限</h3><p>修饰符 | 同类 | 同包 | 子类 | 其他包类 | 备注<br>:-: | :-: | :-: | :-: | :-: | :-: | :-:<br>public  |    true |    true |    true |    true | 访问权限最高<br>protected | true |    true |    true |     false |<br>default | true |    true |    false |    false |    不写就是默认的<br>private |    true |    false |    false |    false |    访问权限最低,只能在本类中访问</p>
<h3 id="抽象类-abstract"><a href="#抽象类-abstract" class="headerlink" title="抽象类 abstract"></a>抽象类 abstract</h3><p>使用：<strong>当某个类不希望被实例化，将此类设为抽象类(可以 new,但不能被实例化)</strong></p>
<blockquote>
<p>修饰类：class 前面 + abstract<br>修饰方法：访问修饰符 + abstract + [返回值类型]</p>
</blockquote>
<pre><code>eg：public abstract void eat();</code></pre><p>抽象方法：<br>1.)抽象方法没有方法体{ }<br>2.)访问权限不能是 private<br>3.)抽象方法实现靠子类继承然后重写实现<br>4.)子类必须实现父类的抽象方法，如果不实现此类必然也要定义为抽象类（只要有一个抽象的方法，就算不使用，也要定义为抽象类）</p>
<p>原因：<br>1.)抽象类里面可以有实例方法也可以有抽象方法<br>2.)实例类里面不能有抽象方法，一旦某个类有抽象方法此类必须定义为抽象类</p>
<h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>特点：</p>
<blockquote>
<p>1.引用转型：父类引用指向了子类对象</p>
</blockquote>
<pre><code>2.方法覆盖：子类覆盖父类的方法</code></pre><p>实现多态的两种形式：</p>
<blockquote>
<p>使用父类作为方法形参实现多态: public void play(Pet p){}<br>使用父类作为方法返回值实现多态: public Pet getPet(int type){}</p>
</blockquote>
<p>多态理解:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"Person.say"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"Man.say"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Women</span> <span class="title">extend</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"Women.say"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Person person = new Man();//向上转型（把某个对象的引用视为对其基类型的引用），向上转型会缩小接口范围</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Test.operate(<span class="keyword">new</span> Man());</span><br><span class="line">		Test.operate(<span class="keyword">new</span> Women());<span class="comment">//man对象和women向上转型为person</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">operate</span><span class="params">(Person person)</span> </span>&#123;</span><br><span class="line">		person.say();<span class="comment">//动态绑定，调用对应的say</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>实现接口：</p>
<blockquote>
<p>[访问权限] interface 接口名称{<br>          //规范<br>    }</p>
</blockquote>
<p>注意：</p>
<ul>
<li>一般来说会使用 I 开头 + 名称</li>
<li>成员变量：<ul>
<li>默认的是公共的静态常量 public final static：public final static int age = 20;</li>
<li>静止的属于类，不能被重写</li>
</ul>
</li>
<li>成员方法：<ul>
<li>公共的抽象方法 public abstract：public abstract void show();</li>
<li>jdk1.7 后的： public abstract void show();</li>
</ul>
</li>
<li>接口的方法，实现此接口的类必须实现接口的所有方法；</li>
</ul>
<p>实现：</p>
<ul>
<li>类名 implements 接口列表（Ilock ，ITv）</li>
<li>接口可以多重实现</li>
<li>接口不能被实例化</li>
</ul>
<p>接口类与抽象类的区别：<br><img src="https://img-blog.csdnimg.cn/2020032711475549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>接口的特点和接的继承：<br><img src="https://img-blog.csdnimg.cn/20200327114250537.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="匿名对象"><a href="#匿名对象" class="headerlink" title="匿名对象"></a>匿名对象</h3><p>匿名对象是指创建对象时，只有创建对象的语句，却没有把对象地址值赋值给某个变量。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个普通对象</span></span><br><span class="line">Person p = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="comment">//创建一个匿名对象</span></span><br><span class="line"><span class="keyword">new</span> Person();</span><br></pre></td></tr></table></figure>
<blockquote>
<p>匿名对象的特点：<br>创建匿名对象直接使用，没有变量名。<br>new Person().eat() //eat方法被一个没有名字的Person对象调用了。</p>
</blockquote>
<h3 id="类与类之间的关系"><a href="#类与类之间的关系" class="headerlink" title="类与类之间的关系"></a>类与类之间的关系</h3><ul>
<li>内部类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">  <span class="comment">//成员变量</span></span><br><span class="line">  <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Employee</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//成员方法</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(name + <span class="string">"员工工作!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//内部类</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Employee el)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//调用的是Employee里的成员变量</span></span><br><span class="line">      System.out.println(el.name);</span><br><span class="line">      <span class="comment">//调用的是Employee里内部Phone的成员变量</span></span><br><span class="line">      System.out.println(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>静态内部类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Phone</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> String name;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Employee el)</span> </span>&#123;</span><br><span class="line">    System.out.println(el.name);</span><br><span class="line">    System.out.println(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">=========================</span><br><span class="line"><span class="comment">//由于Phone是静态的，所以需要用Employee.Phone来new Phone</span></span><br><span class="line">Employee.Phone pr = <span class="keyword">new</span> Employee.Phone();</span><br><span class="line">pr.name = <span class="string">"李四"</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>匿名内部类</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">  <span class="comment">/*匿名内部类：</span></span><br><span class="line"><span class="comment">  可以使用外部成员变量</span></span><br><span class="line"><span class="comment">  匿名 实现了某个类  在雇员内部 ；   缺点：用完即丢，只用一次*/</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">height</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//new的抽象类的实现类（只有类里才有大括号 方法）</span></span><br><span class="line">    Door door = <span class="keyword">new</span> Door()&#123;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">open</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//new了一个类，此类继承了Student。</span></span><br><span class="line">    Student student = <span class="keyword">new</span> Student() &#123;</span><br><span class="line">      <span class="meta">@Override</span></span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Study</span><span class="params">()</span> </span>&#123;</span><br><span class="line">          System.out.println(<span class="string">"学生在学习"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><p>异常：依靠程序能够解决的轻微问题<br>错误：依靠程序不能解决的严重问题</p>
<blockquote>
<p>Exception：所有异常的父类<br>RuntimeException：运行时异常, 不要求程序必须做出处理<br>checked异常：程序必须处理的异常<br>ArithmeticException：算术异常<br>InputMismatchException：输入类型不匹配<br>ArrayIndexOutOfBoundsException :数组下标越界异常<br>NullPointerException：空指针异常<br>ClassNotFoundException:类无法加载异常<br>IllegalArgumentException：方法接收到非法参数<br>ClassCastException：对象强制类型转换出错<br>NumberFormatException：数字格式转换异常，如把”abc”转换成数字</p>
</blockquote>
<p>Throwable 类是 Java 语言中所有错误或异常的超类。</p>
<ul>
<li>try: 可能会引发异常的代码块    <ul>
<li>功能：捕获异常</li>
<li>里面引发异常的位置后面的代码不会执行</li>
</ul>
</li>
<li>catch： 对应异常出现的解决方案<ul>
<li>可以有多个catch</li>
<li>排序要从子到父</li>
<li>有异常就要捕获，不管有return或System.exit(0);</li>
</ul>
</li>
<li>finally<ul>
<li>不论引发异常与否，就算有return，这串代码都会被执行；</li>
<li>finally唯一不执行的情况，程序直接退出了 :System.exit(0);</li>
</ul>
</li>
</ul>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="String对象"><a href="#String对象" class="headerlink" title="String对象"></a>String对象</h4><p>特性：<strong>不可变性 长度不可变</strong><br>字符串的分类：</p>
<blockquote>
<p>可变的字符串：StringBuilder / StringBuffer<br>当对象创建完毕后，该对象的内容可以发生改变，当内容发生改变的时候，对象保持不变</p>
</blockquote>
<p>字符串的本质（底层是什么）：</p>
<blockquote>
<p>底层其实是char[]，char表示一个字符，数组表示同一种类型的多个数据如何理解char[]：<br>    String str = “ABCDEFG”, //定义一个字符串对象 等价于<br>    char[] cs = new char[]{‘A’,’B’,’C’,’D’,’E’,’F’,’G’};</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200327154018625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<blockquote>
<p>注：这里不考虑常量池本身含有需要被创建的对象，如果有的话，理应少一个创建的对象<br>str2 字符串 + 常量 会在堆里面创建对象<br>常量 + 常量 就直接在常量池 创建”张三李四”<br>============================================<br>String str3 = “张三”+”李四”;<br>创建三个对象:张三  李四  张三李四<br>============================================<br>String  str1 = “张三”;<br>String str2 =str1+”李四”;<br>创建四个对象：张三  李四  张三李四  堆里面一个对象空间<br>============================================<br>String str4 = new String(“张三”);<br>创建两个：张三  堆里面<br>============================================<br> JVM对于字符串引用，由于在字符串的”+”连接中，有字符串引用存在，而引用的值在程序编译期是无法确定的，即(str1 + “李四”)无法被编译器优化，只有在程序运行期来动态分配使用StringBuilder连接后的新String对象赋给str2。</p>
</blockquote>
<p>String的拼接：<br>因为String对象是不可变的。String类中每一个看起来会修改String值的方法，实际上都是<strong>创建一个StringBuilder对象</strong>，并<strong>调用append()方法</strong>，最后<strong>调用toString()创建新String对象</strong>，以包含修改后的字符串内容。</p>
<h4 id="StringBuffer"><a href="#StringBuffer" class="headerlink" title="StringBuffer"></a>StringBuffer</h4><p>StringBuffer：常用于频繁的修改，线程安全的,加锁(synchronized)<br>字符串反转（reverse）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringBufferDemo04</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">      StringBuffer buf = <span class="keyword">new</span> StringBuffer() ;    <span class="comment">// 声明StringBuffer对象 </span></span><br><span class="line">      buf.append(<span class="string">"World!!"</span>) ;        <span class="comment">// 添加内容</span></span><br><span class="line">      buf.insert(<span class="number">0</span>,<span class="string">"Hello "</span>) ;        <span class="comment">// 在第一个内容之前添加内容</span></span><br><span class="line">      String str = buf.reverse().toString() ;    <span class="comment">// 将内容反转后变为String类型</span></span><br><span class="line">      System.out.println(str) ;        <span class="comment">// 将内容输出</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>打印内容：!!dlroW olleH<br>替换字符串指定内容</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringBufferDemo05</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        StringBuffer buf = <span class="keyword">new</span> StringBuffer() ;    <span class="comment">// 声明StringBuffer对象 </span></span><br><span class="line">        buf.append(<span class="string">"Hello "</span>).append(<span class="string">"World!!"</span>) ;        <span class="comment">// 向StringBuffer添加内容</span></span><br><span class="line">        buf.replace(<span class="number">6</span>, <span class="number">11</span>, <span class="string">"偶my耶"</span>) ;        <span class="comment">// 将world的内容替换</span></span><br><span class="line">        System.out.println(<span class="string">"内容替换之后的结果："</span> + buf) ;    <span class="comment">// 输出内容</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>打印内容：Hello 偶my耶!!</p>
</blockquote>
<h4 id="StringBuilder"><a href="#StringBuilder" class="headerlink" title="StringBuilder"></a>StringBuilder</h4><p>StringBuilder：线程不安全,效率最高，多用它拼接字符串</p>
<h3 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h3><blockquote>
<p>Byte   short     int            long    float   double    char            boolean   void      原始型<br>Byte   Short     Integer    Long   Float   Double   Character    Boolean   Void     包装类</p>
</blockquote>
<p>原始型 | Byte |  short | int | long | float | double | char | boolean | void<br>:-: | :-: | :-: | :-: | :-:| :-: | :-:| :-: | :-:| :-: | :-:<br>包装类 | Byte | Short | Integer | Long | float | Double | Char | Boolean | Void</p>
<h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><ul>
<li>日期格式转String<br>SimpleDateFormat<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Date date= <span class="keyword">new</span> Date();</span><br><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">String str=sdf.format(date);</span><br></pre></td></tr></table></figure></li>
<li>String转日期<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>); </span><br><span class="line">Date date = sdf.parse(str);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="集合框架类"><a href="#集合框架类" class="headerlink" title="集合框架类"></a>集合框架类</h3><h4 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h4><p>Collections：提供了对集合进行排序、遍历等多种算法实现，是一个类<br><img src="https://img-blog.csdnimg.cn/20200327202621319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h4 id="List-接口"><a href="#List-接口" class="headerlink" title="List 接口"></a>List 接口</h4><p>List：有序的，可重复的</p>
<ol>
<li><p>ArrayList</p>
<blockquote>
<p>底层是数组实现的，数组没变，初始容量为10，(空间不够)创建新数组，复制原来的数组的值 ，增加新的值进去，变得是数组引用指向(指向了新的数组)</p>
</blockquote>
<ul>
<li><p>特性：</p>
<ul>
<li>空间连续</li>
<li>有序的</li>
<li>数据可重复(只能存 引用型)</li>
<li>对中间节点，查询快，但是做增删操作，效率低下。</li>
</ul>
</li>
<li><p>优点：单链表，查询效率快<br><img src="https://img-blog.csdnimg.cn/20200327202501976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</li>
</ul>
</li>
<li><p>LinkedList</p>
<blockquote>
<p>底层是双向链表<br> 适合存储大量数据，</p>
</blockquote>
<ul>
<li>优点：查询慢，但中间节点增删快，</li>
</ul>
</li>
<li><p>Vector</p>
<blockquote>
<p>类似于ArrayList ，但较之于它，Vector是线程安全的</p>
</blockquote>
</li>
</ol>
<h3 id="Set-接口"><a href="#Set-接口" class="headerlink" title="Set 接口"></a>Set 接口</h3><p><img src="https://img-blog.csdnimg.cn/20200327202927968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h4 id="HashSet-：-底层是Hash表"><a href="#HashSet-：-底层是Hash表" class="headerlink" title="HashSet ： 底层是Hash表"></a>HashSet ： 底层是Hash表</h4><blockquote>
<p>其底层 HashMap 实例的默认初始容量是 16，加载因子是 0.75。<br>无序集合、不能重复<br>相比set接口，HashSet 多了一个clone()方法。</p>
</blockquote>
<p>特点：</p>
<ul>
<li>不能保证元素的排列顺序，顺序有可能发生变化</li>
<li>不是同步的</li>
<li>集合元素可以是 null，但只能放入一个 null</li>
</ul>
<p>一般操作 HashSet 还是调用 Collection 的 add / remove 等方法进行操作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashSetTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//增加</span></span><br><span class="line">        Set&lt;String&gt; hashSet = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        hashSet.add(<span class="string">"1"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"2"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"3"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"4"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"5"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        hashSet.remove(<span class="string">"1"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//查询  无法获取某个元素</span></span><br><span class="line">        System.out.println(<span class="string">"是否包含1元素："</span> + hashSet.contains(<span class="string">"2"</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//迭代</span></span><br><span class="line">        Iterator&lt;String&gt; it = hashSet.iterator();</span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">            System.out.print(it.next() + <span class="string">" "</span>);</span><br><span class="line">        &#125;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当向 HashSet 结合中存入一个元素时，HashSet 会调用该对象的 hashCode() 方法来得到该对象的hashCode值，然后根据 hashCode值来决定该对象在 HashSet 中存储位置。根据这种方式可以看出，HashSet 的数据存取其实是通过哈希算法实现的，因为通过哈希算法可以极大的提高数据的读取速度。通过阅读 JDK 源码，我们知道 <strong>HashSet 是通过 HashMap 实现的，只不过是HashSet 的 value 上的值都是 null 而已</strong>。</p>
<p>简单的说，<strong>HashSet 集合判断两个元素相等的标准是两个对象通过 equals() 方法比较相等，并且两个对象的hashCode() 方法返回值相等。</strong></p>
<p>注意，如果要把一个对象放入 HashSet 中，<strong>重写该对象对应类的 equals() 方法，也应该重写其 hashCode() 方法</strong>。其规则是如果两个对 象通过equals方法比较返回true时，其hashCode也应该相同。另外，对象中用作equals比较标准的属性，都应该用来计算hashCode的值。</p>
<h4 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h4><p>LinkedHashSet <strong>在迭代访问 Set 中的全部元素时，性能比 HashSet 好，但是插入时性能稍微逊色于HashSet</strong>（因为 HashSet 直接采用哈希算法，而 LinkedHashSet 还需要维护链表结构）。</p>
<h4 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h4><p><strong>SortedSet 接口的唯一实现类</strong>，TreeSet 可以确保集合元素处于<strong>排序状态</strong>，这也是 TreeSet最大的特征之一。</p>
<p>底层是最优二叉树<br><img src="https://img-blog.csdnimg.cn/20200327205126382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="Map集合"><a href="#Map集合" class="headerlink" title="Map集合"></a>Map集合</h3><ul>
<li>Map中的元素是两个对象，一个对象作为键，一个对象作为值。键不可以重复，但是值可以重复。</li>
<li>Map存储元素使用put方法，Collection使用add方法<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Map学习体系：</span><br><span class="line"> ---| Map  接口    将键映射到值的对象。一个映射不能包含重复的键；每个键最多只能映射到一个值。</span><br><span class="line">                  ---| HashMap  采用哈希表实现，所以无序</span><br><span class="line">                  ---| TreeMap   可以对健进行排序</span><br><span class="line"></span><br><span class="line">---|Hashtable:</span><br><span class="line">底层是哈希表数据结构，线程是同步的，不可以存入null键，null值。</span><br><span class="line">效率较低，被HashMap 替代。</span><br><span class="line">---|HashMap:</span><br><span class="line">底层是哈希表数据结构，线程是不同步的，可以存入null键，null值。</span><br><span class="line">要保证键的唯一性，需要覆盖hashCode方法，和equals方法。</span><br><span class="line">---| LinkedHashMap：</span><br><span class="line">该子类基于哈希表又融入了链表。可以Map集合进行增删提高效率。</span><br><span class="line">---|TreeMap:</span><br><span class="line">底层是二叉树数据结构。可以对map集合中的键进行排序。需要使用Comparable或者Comparator 进行比较排序。return 0，来判断键的唯一性。</span><br></pre></td></tr></table></figure>
<a href="https://blog.csdn.net/qq_33642117/article/details/52049764" target="_blank" rel="noopener">Map 进阶学习</a></li>
</ul>
<h3 id="File-类"><a href="#File-类" class="headerlink" title="File 类"></a>File 类</h3><p><a href="https://blog.csdn.net/gfd54gd5f46/article/details/54918168" target="_blank" rel="noopener">File 类</a></p>
<h3 id="IO-流"><a href="#IO-流" class="headerlink" title="IO 流"></a>IO 流</h3><p><a href="https://blog.csdn.net/zhaoyanjun6/article/details/54292148" target="_blank" rel="noopener"> IO 流</a></p>
<h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h3><p><strong>网络模型</strong></p>
<p>由于计算机网络从底层的传输到高层的软件设计十分复杂，要合理地设计计算机网络模型，必须采用分层模型，每一层负责处理自己的操作。OSI（Open System Interconnect）网络模型是ISO组织定义的一个计算机互联的标准模型，注意它只是一个定义，目的是为了简化网络各层的操作，提供标准接口便于实现和维护。这个模型从上到下依次是：</p>
<ul>
<li>应用层，提供应用程序之间的通信；</li>
<li>表示层：处理数据格式，加解密等等；</li>
<li>会话层：负责建立和维护会话；</li>
<li>传输层：负责提供端到端的可靠传输；</li>
<li>网络层：负责根据目标地址选择路由来传输数据；</li>
<li>链路层和物理层负责把数据进行分片并且真正通过物理网络传输，例如，无线网、光纤等。</li>
</ul>
<p><strong>常用协议</strong></p>
<p>IP协议是一个分组交换，它不保证可靠传输。而TCP协议是传输控制协议，它是面向连接的协议，支持可靠传输和双向通信。TCP协议是建立在IP协议之上的，简单地说，IP协议只负责发数据包，不保证顺序和正确性，而TCP协议负责控制数据包传输，它在传输数据之前需要先建立连接，建立连接后才能传输数据，传输完后还需要断开连接。TCP协议之所以能保证数据的可靠传输，是通过接收确认、超时重传这些机制实现的。并且，TCP协议允许双向通信，即通信双方可以同时发送和接收数据。</p>
<p>TCP协议也是应用最广泛的协议，许多高级协议都是建立在TCP协议之上的，例如HTTP、SMTP等。</p>
<p>UDP协议（User Datagram Protocol）是一种数据报文协议，它是无连接协议，不保证可靠传输。因为UDP协议在通信前不需要建立连接，因此它的传输效率比TCP高，而且UDP协议比TCP协议要简单得多。</p>
<p>选择UDP协议时，传输的数据通常是能容忍丢失的，例如，一些语音视频通信的应用会选择UDP协议。</p>
<p><strong>多发互聊</strong><br>服务器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.chart;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		ServerSocket ss = <span class="keyword">null</span>;</span><br><span class="line">		Socket s = <span class="keyword">null</span>;</span><br><span class="line">		BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">		PrintWriter out = <span class="keyword">null</span>;</span><br><span class="line">		BufferedReader brInput = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ss = <span class="keyword">new</span> ServerSocket(<span class="number">9001</span>);</span><br><span class="line">			System.out.println(<span class="string">"服务器正在监听9001端口"</span>);</span><br><span class="line">			s = ss.accept();</span><br><span class="line">			br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(s.getInputStream()));</span><br><span class="line">			out = <span class="keyword">new</span> PrintWriter(s.getOutputStream(), <span class="keyword">true</span>);</span><br><span class="line">			brInput = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">			String ip = s.getInetAddress().getHostAddress();</span><br><span class="line">			out.println(<span class="string">"你好啊"</span>);</span><br><span class="line">			<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">				String msgFromClient = br.readLine();</span><br><span class="line">				System.out.println(ip + <span class="string">"说："</span> + msgFromClient);</span><br><span class="line">				System.out.print(<span class="string">"您说："</span>);</span><br><span class="line">				String msgToClient = brInput.readLine();</span><br><span class="line">				out.println(msgToClient);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">			System.out.println(<span class="string">"对方已经下线或网络断开"</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (brInput != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					brInput.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (br != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					br.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (out != <span class="keyword">null</span>) &#123;</span><br><span class="line">				out.close();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (s != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					s.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (ss != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					ss.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>客户端</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.chart;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		Socket s = <span class="keyword">null</span>;</span><br><span class="line">		BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">		PrintWriter out = <span class="keyword">null</span>;</span><br><span class="line">		BufferedReader brInput = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			s = <span class="keyword">new</span> Socket(InetAddress.getByName(<span class="string">"127.0.0.1"</span>),<span class="number">9001</span>);</span><br><span class="line">			<span class="comment">// 接收对面输过来的</span></span><br><span class="line">			br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(s.getInputStream()));</span><br><span class="line">			out = <span class="keyword">new</span> PrintWriter(s.getOutputStream(),<span class="keyword">true</span>);</span><br><span class="line">			<span class="comment">// 自己输进去的</span></span><br><span class="line">			brInput = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">			<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">				String msgFromServer = br.readLine();</span><br><span class="line">				System.out.println(<span class="string">"服务器说："</span>+msgFromServer);</span><br><span class="line">				System.out.print(<span class="string">"您说："</span>);</span><br><span class="line">				String msgToServer = brInput.readLine();</span><br><span class="line">				out.println(msgToServer);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span>(brInput != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					brInput.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(br != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					br.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(out != <span class="keyword">null</span>) &#123;</span><br><span class="line">				out.close();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(s != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					s.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200328161931681.png" alt=""></p>
<h3 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h3><p><strong>进程 vs 线程</strong><br>进程和线程是包含关系，但是多任务既可以由多进程实现，也可以由单进程内的多线程实现，还可以混合多进程＋多线程。</p>
<p>具体采用哪种方式，要考虑到进程和线程的特点。</p>
<p>和多线程相比，多进程的缺点在于：</p>
<p>创建进程比创建线程开销大，尤其是在Windows系统上；<br>进程间通信比线程间通信要慢，因为线程间通信就是读写同一个变量，速度很快。<br>而多进程的优点在于：</p>
<p>多进程稳定性比多线程高，因为在多进程的情况下，一个进程崩溃不会影响其他进程，而在多线程的情况下，任何一个线程崩溃会直接导致整个进程崩溃。</p>
<p><strong>多线程</strong><br>Java语言内置了多线程支持：一个Java程序实际上是一个JVM进程，JVM进程用一个主线程来执行main()方法，在main()方法内部，我们又可以启动多个线程。此外，JVM还有负责垃圾回收的其他工作线程等。</p>
<p>因此，对于大多数Java程序来说，我们说多任务，实际上是说如何使用多线程实现多任务。</p>
<p>和单线程相比，多线程编程的特点在于：多线程经常需要读写共享数据，并且需要同步。例如，播放电影时，就必须由一个线程播放视频，另一个线程播放音频，两个线程需要协调运行，否则画面和声音就不同步。因此，多线程编程的复杂度高，调试更困难。</p>
<p>Java多线程编程的特点又在于：</p>
<p>多线程模型是Java程序最基本的并发模型；<br>后续读写网络、数据库、Web开发等都依赖Java多线程模型。<br><img src="https://img-blog.csdnimg.cn/20200328161959554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>flex布局</title>
    <url>/3828711617/</url>
    <content><![CDATA[<h2 id="开启flex布局"><a href="#开启flex布局" class="headerlink" title="开启flex布局"></a>开启flex布局</h2><ul>
<li><p>display: flex</p>
<blockquote>
<p>成块状布局: 默认从主轴方向从main start 到main end，即从左上到右上</p>
</blockquote>
</li>
<li><p>display: inline-flex</p>
<blockquote>
<p>  成行内布局  </p>
</blockquote>
</li>
</ul>
<h3 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h3><blockquote>
<p>作用：决定主轴方向，默认row  ，从左到右<br>  row-reverse：将主轴方向反转，从右到左<br>  column: 将主轴方向改边成列<br>  column-reverse：将主轴方向改边成列且反转</p>
</blockquote>
<h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><blockquote>
<p>作用：决定flex-items的对齐方式<br>center: 中间对齐<br>    start：起始方向<br>    space-between：左右边一个，其余间隔等分<br>    space-evenly: 等分<br>    space-around: 最左右边的边距是中间间隔边距的一半</p>
</blockquote>
<h3 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h3><blockquote>
<p>normal: 在内容没有指定高度情况下，将会向下拉伸填充，效果与stretch一样<br>stretch：当flex items在cross axis方向的 size为auto时，会自动拉伸至填充flex container<br>flex-start: 从左上角开始<br>flex-end: 从左下角开始<br>center: 从中间开始<br>baseline: 与底部基线对齐</p>
</blockquote>
<h3 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h3><blockquote>
<p>默认情况下的，都会在一行显示，放不下就会收缩的<br>nowrap: 默认属性<br>wrap：可换行，多行的<br>wrap-reverse: 在交叉轴上反转</p>
</blockquote>
<h3 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h3><blockquote>
<p>缩写属性 -&gt; flex-direction || flex-wrap (可以多写属性)<br>row: 默认的，主轴方向，从左到右<br>row-reverse：与row相反    </p>
</blockquote>
<h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><blockquote>
<p>作用：决定 多行的时候flex-items在交叉轴上的对齐方式，一般是垂直方向上的位置变化<br> 用法与justify-content相似<br>    stretch：默认值</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.item</span> &#123;</span></span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    text-align: center;</span><br><span class="line"><span class="css">    <span class="comment">/* 垂直居中 */</span></span></span><br><span class="line">    /* height: 100px;</span><br><span class="line">    line-height: 100px; */</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.item1</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#c4545c</span>;</span></span><br><span class="line"><span class="css">    <span class="comment">/* height: 60px; */</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#54c476</span>;</span></span><br><span class="line"><span class="css">    <span class="comment">/* height: 140px; */</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.item3</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#9754c4</span>;</span></span><br><span class="line"><span class="css">    <span class="comment">/* height: 100px; */</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">    width: 550px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    background-color: orange;</span><br><span class="line">    /* </span><br><span class="line">    成块状布局: </span><br><span class="line">      默认从主轴方向从main start 到main end，即从左上到右上</span><br><span class="line">    */</span><br><span class="line">    display: flex;</span><br><span class="line"><span class="css">    <span class="comment">/* 成行内布局 */</span></span></span><br><span class="line"><span class="css">    <span class="comment">/* display: inline-flex; */</span></span></span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    flex-direction: 决定主轴方向，默认row  ，从左到右</span><br><span class="line">    row-reverse：将主轴方向反转，从右到左</span><br><span class="line">    column: 将主轴方向改边成列</span><br><span class="line">    column-reverse：将主轴方向改边成列且反转</span><br><span class="line">    */</span><br><span class="line">    /* flex-direction: row;</span><br><span class="line">    flex-direction: row-reverse;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    flex-direction: column-reverse; */</span><br><span class="line"></span><br><span class="line">    /* justify-content：决定flex-items的对齐方式 </span><br><span class="line">    center: 中间对齐</span><br><span class="line">    start：起始方向</span><br><span class="line">    space-between：左右边一个，其余间隔等分</span><br><span class="line">    space-evenly: 等分</span><br><span class="line">    space-around: 最左右边的边距是中间间隔边距的一半</span><br><span class="line">    */</span><br><span class="line">    /* justify-content: center;</span><br><span class="line">    justify-content: start;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    justify-content: space-around; */</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    align-items：</span><br><span class="line">    normal: 在内容没有指定高度情况下，将会向下拉伸填充，效果与stretch一样</span><br><span class="line">    stretch：当flex items在cross axis方向的 size为auto时，会自动拉伸至填充flex container</span><br><span class="line">    flex-start: 从左上角开始</span><br><span class="line">    flex-end: 从左下角开始</span><br><span class="line">    center: 从中间开始</span><br><span class="line">    baseline: 与底部基线对齐</span><br><span class="line">    */</span><br><span class="line"><span class="css">    <span class="comment">/* align-items: flex-start; */</span></span></span><br><span class="line"></span><br><span class="line">    /* </span><br><span class="line">    flex-wrap：默认情况下的，都会在一行显示，放不下就会收缩的</span><br><span class="line">    nowrap: 默认属性</span><br><span class="line">    wrap：可换行，多行的</span><br><span class="line">    wrap-reverse: 在交叉轴上反转</span><br><span class="line">     */</span><br><span class="line"><span class="css">    <span class="comment">/* flex-wrap: wrap-reverse; */</span></span></span><br><span class="line"></span><br><span class="line">    /* </span><br><span class="line">    flex-flow: 缩写属性 -&gt; flex-direction || flex-wrap</span><br><span class="line">    可以多写属性</span><br><span class="line">    row: 默认的，主轴方向，从左到右</span><br><span class="line">    row-reverse：与row相反</span><br><span class="line">     */</span><br><span class="line">    flex-flow: row wrap;</span><br><span class="line"><span class="css">    <span class="comment">/* 让flex-items：同一行上间隔同等份 */</span></span></span><br><span class="line">    justify-content: space-evenly;</span><br><span class="line"></span><br><span class="line">    /* </span><br><span class="line">    align-content: 决定 多行的时候flex-items在交叉轴上的对齐方式，一般是垂直方向上的位置变化</span><br><span class="line">    用法与justify-content相似</span><br><span class="line">    stretch：默认值</span><br><span class="line">     */</span><br><span class="line">    align-content: stretch;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item1"</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item2"</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item3"</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 后续添加 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item1"</span>&gt;</span>item4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item2"</span>&gt;</span>item5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item1"</span>&gt;</span>item6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item2"</span>&gt;</span>item7<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item3"</span>&gt;</span>item8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item1"</span>&gt;</span>item9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>行内元素<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="作用于flex-items"><a href="#作用于flex-items" class="headerlink" title="作用于flex-items"></a>作用于flex-items</h2><h3 id="order：决定排布顺序，默认为0，值越小就月在前面，可以负数"><a href="#order：决定排布顺序，默认为0，值越小就月在前面，可以负数" class="headerlink" title="order：决定排布顺序，默认为0，值越小就月在前面，可以负数"></a>order：决定排布顺序，默认为0，值越小就月在前面，可以负数</h3><h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><blockquote>
<p>作用：items可以通过 它 覆盖flex container设置的align-items<br>auto(默认值)：遵从 flex container的align-items设置<br>stretch、flex-start、flex-end、center、baseline、效果跟align-items一致</p>
</blockquote>
<h3 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h3><blockquote>
<p>决定了 flex items如何扩展<br>可以设置任意非负数字，默认值为 0<br>……………………<br>当flex container在主轴方向上有剩余size时，flex-grow属性才会有效<br>如果所有flex items的flex-grow总和sum超过1，每个flex item扩展的size为：<br>flex container的剩余size * flex-grow/sum<br>=====================================<br>如果所有flex items的flex-grow总和不超过1，每个 flex item扩展的size为：<br>flex container的剩余 * flex-grow</p>
</blockquote>
<h3 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h3><blockquote>
<p>决定了 flex items如何收缩<br>可以设置任意非负数字，默认值为 1<br>=====================================<br>当felx items在主轴方向上超过了flex container的size时，flex-shrink属性才会有效<br>………………………………………<br>如果所有flex items的flex-shrink总和sum超过1，每个flex item收缩的size为：<br>flex items超出flex container的size * 收缩比例/所有flex items 的收缩比例之和<br>=====================================<br>如果所有flex items的flex-shrink总和不超过1，每个 flex item收缩的size为：<br>flex items超出flex container的size<em>size</em>sum<em>收缩比例/所有flex items的收缩比例之和<br>收缩比例=flex-shrink</em>flex item的base size<br>base size就是flex item放入 flex container之前的size<br>flex items收缩后的size不能小于min-width、min-height</p>
</blockquote>
<h3 id="flex-basis"><a href="#flex-basis" class="headerlink" title="flex-basis"></a>flex-basis</h3><blockquote>
<p>用来设置flex items在主轴方向上的base size<br>auto默认展、具体的宽度数值（100px）<br>================================<br>决定flex items最终base size的因素，从优先级高到低<br>max-width\max-height\min-width\min-height<br>flex-basis<br>width\height<br>内容本身的size</p>
</blockquote>
<h3 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h3><blockquote>
<h1 id="为：flex-grow-flex-shrink-flex-basis的简写"><a href="#为：flex-grow-flex-shrink-flex-basis的简写" class="headerlink" title="为：flex-grow || flex-shrink || flex-basis的简写"></a>为：flex-grow || flex-shrink || flex-basis的简写</h1><p>一个值flex-grow<br>两个值：flex-grow 无单位的代表flex-shrink/有 px单位代表flex-basis<br>三个值：flex-grow || flex-shrink || flex-basis</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.item</span> &#123;</span></span><br><span class="line">    width: 250px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    text-align: center;</span><br><span class="line"><span class="css">    <span class="comment">/* 垂直居中 */</span></span></span><br><span class="line">    /* height: 100px;</span><br><span class="line">    line-height: 100px; */</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.item1</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#c4545c</span>;</span></span><br><span class="line"><span class="css">    <span class="comment">/* flex-grow: 1; */</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.item2</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#54c476</span>;</span></span><br><span class="line"><span class="css">    <span class="comment">/* order: -2; */</span></span></span><br><span class="line"><span class="css">    <span class="comment">/* flex-grow: 1; */</span></span></span><br><span class="line">    flex-basis: 100px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.item3</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>: <span class="selector-id">#9754c4</span>;</span></span><br><span class="line"><span class="css">    <span class="comment">/* order: 99; */</span></span></span><br><span class="line"><span class="css">     <span class="comment">/* 作用于 flex-items的 */</span></span></span><br><span class="line">    /* </span><br><span class="line">    order：决定排布顺序，默认为0，值越小就月在前面，可以负数</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    /* </span><br><span class="line">    align-self: items可以通过 它 覆盖flex container设置的align-items</span><br><span class="line">    auto(默认值)：遵从 flex container的align-items设置</span><br><span class="line">    stretch、flex-start、flex-end、center、baseline、效果跟align-items一致</span><br><span class="line">     */</span><br><span class="line"><span class="css">    <span class="comment">/* align-self: flex-end; */</span></span></span><br><span class="line"></span><br><span class="line">    /* </span><br><span class="line">    flex-grow: 决定了 flex items如何扩展</span><br><span class="line">      可以设置任意非负数字，默认值为 0</span><br><span class="line">      当flex container在主轴方向上有剩余size时，flex-grow属性才会有效</span><br><span class="line">    如果所有flex items的flex-grow总和sum超过1，每个flex item扩展的size为</span><br><span class="line">      flex container的剩余size * flex-grow/sum</span><br><span class="line">    如果所有flex items的flex-grow总和不超过1，每个 flex item扩展的size为</span><br><span class="line">      flex container的剩余 * flex-grow</span><br><span class="line">     */</span><br><span class="line"><span class="css">    <span class="comment">/* flex-grow: 1; */</span></span></span><br><span class="line"></span><br><span class="line">    /* </span><br><span class="line">    flex-shrink: 决定了 flex items如何收缩</span><br><span class="line">      可以设置任意非负数字，默认值为 1</span><br><span class="line">      当felx items在主轴方向上超过了flex container的size时，flex-shrink属性才会有效</span><br><span class="line">    如果所有flex items的flex-shrink总和sum超过1，每个flex item收缩的size为</span><br><span class="line">      flex items超出flex container的size * 收缩比例/所有flex items 的收缩比例之和</span><br><span class="line">    如果所有flex items的flex-shrink总和不超过1，每个 flex item收缩的size为</span><br><span class="line">      flex items超出flex container的size*size*sum*收缩比例/所有flex items的收缩比例之和</span><br><span class="line">      收缩比例=flex-shrink*flex item的base size</span><br><span class="line">      base size就是flex item放入 flex container之前的size</span><br><span class="line">    flex items收缩后的size不能小于min-width、min-height</span><br><span class="line">     </span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">     /* </span><br><span class="line">     flex-basis：用来设置flex items在主轴方向上的base size </span><br><span class="line">     auto默认展、具体的宽度数值（100px）</span><br><span class="line"></span><br><span class="line">     决定flex items最终base size的因素，从优先级高到低</span><br><span class="line">      max-width\max-height\min-width\min-height</span><br><span class="line">      flex-basis</span><br><span class="line">      width\height</span><br><span class="line">      内容本身的size</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">     /* </span><br><span class="line">     flex 时flex-grow || flex-shrink || flex-basis的简写，flex属性可以指定1个，2个或3个值</span><br><span class="line">      一个值flex-grow</span><br><span class="line">      两个值：flex-grow 无单位的代表flex-shrink/有 px单位代表flex-basis</span><br><span class="line">      三个值：flex-grow || flex-shrink || flex-basis</span><br><span class="line">      */</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">    width: 550px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    background-color: orange;</span><br><span class="line">   </span><br><span class="line">    display: flex;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="comment">/* align-items: center; */</span></span></span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item1"</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item2"</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item item3"</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>行内元素<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://www.yuque.com/qirantianya/ofeuv8/uv2brc#1f9479b8" target="_blank" rel="noopener">另外分享一个不错的笔记总结，有空要去瞧瞧</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>flex布局</tag>
      </tags>
  </entry>
  <entry>
    <title>jdk8新特性</title>
    <url>/2440597073/</url>
    <content><![CDATA[<br>
<a id="more"></a>
## Labmda 使用

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/24</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LabmdaDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pringSomething</span><span class="params">(String something, Printer printer)</span> </span>&#123;</span><br><span class="line">        printer.printer(something);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">Printer</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">printer</span><span class="params">(String val)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LabmdaDemo1 lambdaDemo1 = <span class="keyword">new</span> LabmdaDemo1();</span><br><span class="line">        String some = <span class="string">"Hello World"</span>;</span><br><span class="line"></span><br><span class="line">        Printer printer = <span class="keyword">new</span> Printer() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printer</span><span class="params">(String val)</span> </span>&#123;</span><br><span class="line">                System.out.println(val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        lambdaDemo1.pringSomething(some, printer);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"-----------使用Lambda表达式----------"</span>);</span><br><span class="line">        Printer printer1 = (String val) -&gt; &#123;</span><br><span class="line">            System.out.println(val + <span class="number">1</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(<span class="string">"----------简化ing:很像es6箭头函数----------------"</span>);</span><br><span class="line">        Printer printer2 = (val) -&gt; &#123;</span><br><span class="line">            System.out.println(val + <span class="number">2</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        Printer printer3 = val -&gt; &#123;</span><br><span class="line">            System.out.println(val + <span class="number">3</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        Printer printer4 = val -&gt; System.out.println(val + <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Stream-流"><a href="#Stream-流" class="headerlink" title="Stream 流"></a>Stream 流</h2><p>创建 Employee 的实体类，这里也可以使用 Lombok 插件的@Data 快速构造</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/24</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  Integer id;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line">    List&lt;Employee&gt; children;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * filter的谓词逻辑：</span></span><br><span class="line"><span class="comment">     * 年龄大于50</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Predicate&lt;Employee&gt; ageGreaterThan50 = x -&gt; x.getAge() &gt; <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Predicate&lt;Employee&gt; genderM = x -&gt; x.getGender().equals(<span class="string">"M"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Employee&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">", gender='"</span> + gender + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", children="</span> + children +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(Integer id, Integer age, String gender, List&lt;Employee&gt; children)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">        <span class="keyword">this</span>.children = children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getChildren</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setChildren</span><span class="params">(List&lt;Employee&gt; children)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.children = children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(String gender)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gender;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="初始-filter-用法"><a href="#初始-filter-用法" class="headerlink" title="初始 filter 用法"></a>初始 filter 用法</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> bean.Employee;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/24</span></span><br><span class="line"><span class="comment"> * filter用法</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamApiDemo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Employee e1 = <span class="keyword">new</span> Employee(<span class="number">3</span>, <span class="number">43</span>, <span class="string">"M"</span>, <span class="keyword">null</span>);</span><br><span class="line">        Employee e2 = <span class="keyword">new</span> Employee(<span class="number">2</span>, <span class="number">23</span>, <span class="string">"F"</span>, <span class="keyword">null</span>);</span><br><span class="line">        Employee e3 = <span class="keyword">new</span> Employee(<span class="number">4</span>, <span class="number">53</span>, <span class="string">"M"</span>, <span class="keyword">null</span>);</span><br><span class="line">        Employee ch4 = <span class="keyword">new</span> Employee(<span class="number">8</span>, <span class="number">33</span>, <span class="string">"M"</span>, <span class="keyword">null</span>);</span><br><span class="line">        ArrayList li4 = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        li4.add(ch4);</span><br><span class="line">        Employee e4 = <span class="keyword">new</span> Employee(<span class="number">5</span>, <span class="number">63</span>, <span class="string">"M"</span>, li4);</span><br><span class="line"></span><br><span class="line">        List&lt;Employee&gt; list = Arrays.asList(e1, e2, e3, e4);</span><br><span class="line">        List&lt;Employee&gt; collect = list.stream().</span><br><span class="line">                filter(e -&gt; e.getAge() &gt; <span class="number">50</span> &amp;&amp; e.getId() &gt; <span class="number">3</span>)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        System.out.println(collect);</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">        System.out.println(<span class="string">"----------negate()取相反的------------"</span>);</span><br><span class="line">        List&lt;Employee&gt; collect1 = list.stream().</span><br><span class="line">                filter(Employee.ageGreaterThan50.and(Employee.genderM).negate())</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        System.out.println(collect1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Map-和-flatMap"><a href="#Map-和-flatMap" class="headerlink" title="Map 和 flatMap"></a>Map 和 flatMap</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> bean.Employee;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/24</span></span><br><span class="line"><span class="comment"> * Map方法: 将年龄都增加一岁，性别换成male，female</span></span><br><span class="line"><span class="comment"> * flatMap</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StreamApiDemo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Employee e1 = <span class="keyword">new</span> Employee(<span class="number">3</span>, <span class="number">43</span>, <span class="string">"M"</span>, <span class="keyword">null</span>);</span><br><span class="line">        Employee e2 = <span class="keyword">new</span> Employee(<span class="number">2</span>, <span class="number">23</span>, <span class="string">"F"</span>, <span class="keyword">null</span>);</span><br><span class="line">        Employee e3 = <span class="keyword">new</span> Employee(<span class="number">4</span>, <span class="number">53</span>, <span class="string">"M"</span>, <span class="keyword">null</span>);</span><br><span class="line">        Employee ch4 = <span class="keyword">new</span> Employee(<span class="number">8</span>, <span class="number">33</span>, <span class="string">"M"</span>, <span class="keyword">null</span>);</span><br><span class="line">        ArrayList li4 = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        li4.add(ch4);</span><br><span class="line">        Employee e4 = <span class="keyword">new</span> Employee(<span class="number">5</span>, <span class="number">63</span>, <span class="string">"M"</span>, li4);</span><br><span class="line">        List&lt;Employee&gt; list = Arrays.asList(e1, e2, e3, e4);</span><br><span class="line"></span><br><span class="line">        List&lt;Employee&gt; maped = list.stream()</span><br><span class="line">                .map(e -&gt; &#123;</span><br><span class="line">                    e.setAge(e.getAge() + <span class="number">1</span>);</span><br><span class="line">                    e.setGender(e.getGender().equals(<span class="string">"M"</span>) ? <span class="string">"male"</span> : <span class="string">"female"</span>);</span><br><span class="line">                    <span class="keyword">return</span> e;</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">        List&lt;Employee&gt; maped1 = list.stream()</span><br><span class="line">                <span class="comment">//特殊的map，引用类型，进去出去都是同类型</span></span><br><span class="line">                .peek(e -&gt; &#123;</span><br><span class="line">                    e.setAge(e.getAge() + <span class="number">1</span>);</span><br><span class="line">                    e.setGender(e.getGender().equals(<span class="string">"M"</span>) ? <span class="string">"male"</span> : <span class="string">"female"</span>);</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">        System.out.println(maped);</span><br><span class="line">        System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line">        System.out.println(maped1);</span><br><span class="line">        System.out.println(<span class="string">"----------------------------"</span>);</span><br><span class="line">        List&lt;String&gt; words = Arrays.asList(<span class="string">"Hello"</span>, <span class="string">"World"</span>);</span><br><span class="line">        <span class="comment">// 将words集合中的元素一个个截取打印出来</span></span><br><span class="line">        words.stream()</span><br><span class="line">                .flatMap(w -&gt; Arrays.stream(w.split(<span class="string">""</span>)))</span><br><span class="line">                .forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>网站配置https</title>
    <url>/2153166023/</url>
    <content><![CDATA[<br>
<a id="more"></a>
通过阿里云的云盾获得ssl证书
![](https://raw.githubusercontent.com/onecoderly/blog_file/master/images/ssl.png)

<p>一直下一步就好，配置txt记录值验证域名<br><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/sslyuming.png" alt=""><br><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/ssl2.png" alt=""></p>
<p>下载ssl证书<br><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/sslnginx.png" alt=""></p>
<p>解压已下载保存到本地的Nginx证书压缩包文件。<br>解压后的文件夹中有2个文件：</p>
<ul>
<li>证书文件：以.pem为后缀或文件类型。</li>
<li>密钥文件：以.key为后缀或文件类型。<br><img src="https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/8400591851/p33690.png" alt=""></li>
</ul>
<p>登录您的Nginx服务器，在Nginx安装目录（默认Nginx安装目录为/usr/local/nginx/conf）下创建cert目录，并将下载的证书文件和密钥文件拷贝到cert目录中。</p>
<blockquote>
<p>说明 如果您在申请证书时选择手动创建CSR文件，请将对应的密钥文件放到cert目录中，并命名为domain name.key。</p>
</blockquote>
<p>Linux环境下，怎么确定Nginx是以那个config文件启动的？<br>输入命令行： </p>
<blockquote>
<p>ps  -ef | grep nginx<br><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/nginx.png" alt=""></p>
</blockquote>
<p>修改Nginx安装目录nginx.conf文件。<br>找到以下配置信息：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># 以下属性中以ssl开头的属性代表与证书配置有关，其他属性请根据自己的需要进行配置。</span><br><span class="line">server &#123;</span><br><span class="line">listen 443 ssl;   #SSL协议访问端口号为443。此处如未添加ssl，可能会造成Nginx无法启动。</span><br><span class="line">server_name localhost;  #将localhost修改为您证书绑定的域名，例如：www.example.com。</span><br><span class="line">root html;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">ssl_certificate cert/domain name.pem;   #将domain name.pem替换成您证书的文件名。</span><br><span class="line">ssl_certificate_key cert/domain name.key;   #将domain name.key替换成您证书的密钥文件名。</span><br><span class="line">ssl_session_timeout 5m;</span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。</span><br><span class="line">ssl_prefer_server_ciphers on;   </span><br><span class="line">location / &#123;</span><br><span class="line">root html;   #站点目录。</span><br><span class="line">index index.html index.htm;   </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>保存nginx.conf文件后退出。</p>
<blockquote>
<p>nginx -s stop<br>systemctl enable nginx //添加系统自启动,以前开启过就不需要了<br>systemctl start nginx //启动服务<br>查看网页就会有：<br><img src="https://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/8400591851/p70468.png" alt=""><br>成功</p>
</blockquote>
<p><strong>可选：</strong> 设置HTTP请求自动跳转HTTPS。<br>在需要跳转的HTTP站点下添加以下rewrite语句，实现HTTP访问自动跳转到HTTPS页面。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"> listen 80;</span><br><span class="line"> server_name localhost;   #将localhost修改为您证书绑定的域名，例如：www.example.com。</span><br><span class="line"> rewrite ^(.*)$ https://$host$1 permanent;   #将所有http请求通过rewrite重定向到https。</span><br><span class="line"> location / &#123;</span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自己的配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># For more information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user root;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">                      '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  corderblue;</span><br><span class="line">		rewrite ^(.*)$ https://$host$1 permanent;   #将所有http请求通过rewrite重定向到https。</span><br><span class="line">        root         /home/git/projects/blog;</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"># Settings for a TLS enabled server.</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       443 ssl http2 default_server;</span><br><span class="line">        listen       [::]:443 ssl http2 default_server;</span><br><span class="line">        server_name  coderblue.cn;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        ssl_certificate "conf.d/cert/3637196_coderblue.cn.pem";</span><br><span class="line">        ssl_certificate_key "conf.d/cert/3637196_coderblue.cn.key";</span><br><span class="line">        ssl_session_cache shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  10m;</span><br><span class="line">#        ssl_ciphers PROFILE=SYSTEM;</span><br><span class="line">		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。</span><br><span class="line">		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。</span><br><span class="line">		ssl_prefer_server_ciphers on;</span><br><span class="line">		</span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">		root /home/git/projects/blog;</span><br><span class="line">		index index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub+PicGo搭建图床</title>
    <url>/431037062/</url>
    <content><![CDATA[<br>
<a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>图床是干什么的？</p>
<p>图床就是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p>
<h2 id="下载及安装"><a href="#下载及安装" class="headerlink" title="下载及安装"></a>下载及安装</h2><p>下载安装包 picgo,截止本文发布前的最新发布版本为v2.2.2，然后日常软件安装步骤，没有什么多余的选项，自行安装完成即可，<a href="https://github.com/Molunerfinn/PicGo/tags" target="_blank" rel="noopener">附赠下载地址</a></p>
<h2 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h2><blockquote>
<p>这里建议创建为公开仓库，因为创建为私有仓库的话在博客引用图片链接时可能会因为权限问题显示不出来</p>
</blockquote>
<ol>
<li>创建完成后，点击右上角的个人头像出现下拉菜单，然后点倒数第二项 设置（英文版为 Setting）</li>
<li>点左侧菜单的最后一个 Developer setting</li>
<li>点左侧菜单的最后一个 Personal access tokens，然后点击在右侧有一个 Generate new token 的按钮</li>
<li>选择 repo，</li>
<li>拉到最下面点击绿色的按钮 Generate token, 之后会生成一个 token 码 </li>
<li>token 只显示一次！所以可以先把他复制保存的其他地方</li>
</ol>
<h2 id="创建版本"><a href="#创建版本" class="headerlink" title="创建版本"></a>创建版本</h2><p>发布版本使用于大的更新，我们可以添加一个新的发布版本，添加发布版本之后新使用该库的用户可以收到版本更新信息。</p>
<p>点击“releases”、然后点击“create a new release”新建一个发布版本，发布新版本之后当前的所有文件都属于该版本。<br><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/githubbanben.png" alt=""><br><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/banben.png" alt=""></p>
<h3 id="创建标签版本"><a href="#创建标签版本" class="headerlink" title="创建标签版本"></a>创建标签版本</h3><ol>
<li>添加标签版本<blockquote>
<p>git tag -a 版本号 -m ‘标签版本说明’<br>//标签版本说明不是必须的，可以简写为<br>git tag 版本号</p>
</blockquote>
</li>
<li>创建标签后我们可以建标签同步到GitHub<blockquote>
<p>git push origin 共享的版本号</p>
</blockquote>
</li>
<li>删除标签版本<blockquote>
<p>// 删除本地标签版本<br>git tag -d v1.0<br>// 删除GitHub上的标签版本<br>git push origin ：rsfs/tags/v1.0</p>
</blockquote>
</li>
</ol>
<p>注：删除本地标签版本不会导致和GitHub不一致的情况:</p>
<blockquote>
<p>git push origin :refs/tags/v1.0</p>
</blockquote>
<h2 id="PicGo设置"><a href="#PicGo设置" class="headerlink" title="PicGo设置"></a>PicGo设置</h2><p><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/pigco1.png" alt=""><br>当然也可以选择自定义域名</p>
<p>搭建好了上传图片就会在仓库中<br><img src="https://raw.githubusercontent.com/onecoderly/blog_file/master/images/githubtuchuangya.png" alt=""></p>
<p>注意：图片名不要使用中文</p>
<p><a href="https://blog.csdn.net/nineya_com/article/details/103499880" target="_blank" rel="noopener">参考</a></p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>java复制List集合</title>
    <url>/3522599201/</url>
    <content><![CDATA[<p> JDK貌似没有自带的复制List集合的方法，因此，复制方法需要自己去实现。下面介绍两种简单实用的复制List集合的方法。</p>
<p><strong>方法1</strong>、创建新的ArrayList集合时复制</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">    list.add(<span class="string">"1"</span>);</span><br><span class="line">    list.add(<span class="string">"2"</span>);</span><br><span class="line">    list.add(<span class="string">"3"</span>);</span><br><span class="line">    list.add(<span class="string">"4"</span>);</span><br><span class="line">    list.add(<span class="string">"5"</span>);</span><br><span class="line">    List&lt;String&gt; newList = <span class="keyword">new</span> ArrayList&lt;String&gt;(list);</span><br><span class="line">    System.out.println(newList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：[1, 2, 3, 4, 5]</p>
<p><strong>方法2</strong>、创建新的ArrayList集合之后，使用addAll方法复制</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">    list.add(<span class="string">"1"</span>);</span><br><span class="line">    list.add(<span class="string">"2"</span>);</span><br><span class="line">    list.add(<span class="string">"3"</span>);</span><br><span class="line">    list.add(<span class="string">"4"</span>);</span><br><span class="line">    list.add(<span class="string">"5"</span>);</span><br><span class="line">    List&lt;String&gt; newList = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">    newList.addAll(list);</span><br><span class="line">    System.out.println(newList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果：[1, 2, 3, 4, 5]<br>个人推荐使用方法1，因为少一行代码呀！而且，括号里的集合还可以是Set集合。</p>
<p><a href="https://blog.csdn.net/u013020593/article/details/79043763" target="_blank" rel="noopener">参考链接：致谢</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Lombok，真香</title>
    <url>/3812686146/</url>
    <content><![CDATA[<h2 id="Lombok到底是什么？"><a href="#Lombok到底是什么？" class="headerlink" title="Lombok到底是什么？"></a>Lombok到底是什么？</h2><p>先看一下它的官网<br><img src="https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzp6uHcdh3OGoN5lib8qiahVv1BEukCAUrrmjp1iay5HDcRCMlTJCwyWhnpehDYY15Dicfw4EPhR4VSbcA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt=""><br>英语懒得看？没关系。</p>
<p><strong>它大致意思是</strong>：Lombok是一个很牛批的<strong>插件</strong>（本质是个<strong>Java库</strong>），项目里一旦引入了Lombok神器之后，你项目中所有诸如：对象的构造函数、 equals()方法，属性的 get()/set()方法等等，这些没有技术含量的代码统统都不用写了，Lombok帮你搞定一切，全部帮你自动生成！</p>
<p>听起来好像是挺不错…</p>
<p><strong>眼见为虚，代码为实</strong>，本文亲自尝试一下！</p>
<h2 id="项目中引入Lombok"><a href="#项目中引入Lombok" class="headerlink" title="项目中引入Lombok"></a>项目中引入Lombok</h2><p>除此之外，还要在IDE中安装Lombok插件，并配置：<br><img src="https://mmbiz.qpic.cn/mmbiz_png/xq9PqibkVAzp6uHcdh3OGoN5lib8qiahVv1rgb30E3H5wCrNwtCA2pGkfjryVLFsOx7eJHJs3ogaFXU8nybM4Fiacw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt=""><br>接下来进行代码实验。</p>
<h2 id="爽！get-set不用写了"><a href="#爽！get-set不用写了" class="headerlink" title="爽！get/set不用写了"></a>爽！get/set不用写了</h2><p>以前我们写一个 POJO对象时，比如定义一个课程 Course，需要自己手动写上每个字段的 get()和 set()方法，就像这样：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getScore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(Integer score)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是借助于Lombok，一切都变得优雅起来，代码篇幅省了一半</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> Integer score;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>两个注解：@Getter和 @Setter即可方便搞定。</p>
<p>更可以使用@data注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer score;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="爽！new对象变得优雅了"><a href="#爽！new对象变得优雅了" class="headerlink" title="爽！new对象变得优雅了"></a>爽！new对象变得优雅了</h2><p>在没有用Lombok之前，我们假如想new一个对象，我们往往会这么做（以上面的 Course类为例）：<br><img src="https://img-blog.csdnimg.cn/20200320145353472.png" alt=""><br>引进Lombok之后，我们只需要在 Course类上用上 @Builder注解：<br><img src="https://img-blog.csdnimg.cn/20200320145234852.png" alt=""><br>则 Course类对象的创建即可使用 链式表达 的方式一行代码完成：<br><img src="https://img-blog.csdnimg.cn/20200320145310480.png" alt=""><br>到这里，如果你学过设计模式中的 “建造者模式” 的话，一定能猜到 @Builder注解就是一个典型的“建造者模式”的实现案例！</p>
<h2 id="爽！构造函数不用写了"><a href="#爽！构造函数不用写了" class="headerlink" title="爽！构造函数不用写了"></a>爽！构造函数不用写了</h2><h3 id="全参构造器不用写了"><a href="#全参构造器不用写了" class="headerlink" title="全参构造器不用写了"></a>全参构造器不用写了</h3><p>当你在你的类上使用了Lombok的注解 AllArgsConstructor时：<br><img src="https://img-blog.csdnimg.cn/2020032014550690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>这时候你的类在编译后会自动生成一个全参构造函数，就像这样：<br><img src="https://img-blog.csdnimg.cn/20200320145552136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="无参数构造器也不用写了"><a href="#无参数构造器也不用写了" class="headerlink" title="无参数构造器也不用写了"></a>无参数构造器也不用写了</h3><p>当你在你的类上使用了Lombok的注解 NoArgsConstructor时：<br><img src="https://img-blog.csdnimg.cn/20200320145644124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>这时候你的类在编译后会自动生成一个无参构造函数，就像这样：<br><img src="https://img-blog.csdnimg.cn/20200320145713327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="部分参数构造器也不用写了"><a href="#部分参数构造器也不用写了" class="headerlink" title="部分参数构造器也不用写了"></a>部分参数构造器也不用写了</h3><p>当你在你的类上使用了Lombok的注解 RequiredArgsConstructor时:<br><img src="https://img-blog.csdnimg.cn/20200320145754760.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>这时候你的类在编译后会自动生成一个具备部分参数的构造函数，就像这样：<br><img src="https://img-blog.csdnimg.cn/20200320145821664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>因为 name字段定义成 final，所以 Lombok自动会帮你生成一个部分参数的构造器！！因为 name字段定义成 final，所以 Lombok自动会帮你生成一个部分参数的构造器！！</p>
<h2 id="爽！null判空不用写了"><a href="#爽！null判空不用写了" class="headerlink" title="爽！null判空不用写了"></a>爽！null判空不用写了</h2><p>Lombok的 @NonNull注解可以自动帮我们避免空指针判断。该注解作用在方法参数上，用于自动生成空值参数检查，比如：<br><img src="https://img-blog.csdnimg.cn/20200320145925792.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>但是有了Lombok之后，事情就变得简单了，一个注解搞定：<br><img src="https://img-blog.csdnimg.cn/20200320145955658.png" alt=""></p>
<h2 id="爽！关流也不需要了"><a href="#爽！关流也不需要了" class="headerlink" title="爽！关流也不需要了"></a>爽！关流也不需要了</h2><p>什么意思呢？</p>
<p>假如我们要读取一个 txt文本文件，一般会这样写代码：<br><img src="https://img-blog.csdnimg.cn/20200320150127793.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>注意，这个文件句柄在使用完成之后是一定要手动 close的，否则就有可能资源泄漏。</p>
<p>有了Lombok之后，这种擦屁股活儿统统不用干了，一个 @Cleanup注解即可搞定<br><img src="https://img-blog.csdnimg.cn/20200320150154895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>上面列举了几个平时项目开发中使用非常频繁的Lombok注解，除此之外，还有诸如像：</p>
<blockquote>
<p>@ToString：为类自动生成toString()方法<br>@EqualsAndHashCode：为类自动生成hashCode和equals实现<br>@Log：为类自动生成log日志记录<br>@Synchronized：为类方法或实例方法自动生成synchronized保护</p>
</blockquote>
<p>等工具也是非常好用的，大家可以尝试在项目里用起来。</p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzU4ODI1MjA3NQ==&mid=2247485020&idx=1&sn=3c3405807f96a597398f513c48bb094e&chksm=fdded098caa9598e6159bd7315180e149e6a789a3ee75d42b4acaaae96669504e08378eeddae&scene=21#wechat_redirect" target="_blank" rel="noopener">参考链接, 致谢</a></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Lombok</tag>
      </tags>
  </entry>
  <entry>
    <title>vue自定义格式规范</title>
    <url>/1577044944/</url>
    <content><![CDATA[<p>项目根目录下新建文件：<strong>.prettierrc</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line">  <span class="comment">// 函数后括号前没空格不报错</span></span><br><span class="line">  <span class="string">"semi"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 双引号格式化成单引号</span></span><br><span class="line">  <span class="string">"singleQuote"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>qq消息简易自动发送脚本</title>
    <url>/1683247188/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<p>代码<br>这段代码的功能是 写一个文本复制，然后运行这个脚本之后就会在 QQ 等窗口不断的输出你复制的信息，严重消耗计算机资源，不慎会死机<br>保存为 vbs 后缀的文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">on error resume next</span><br><span class="line">dim wsh,ye,path</span><br><span class="line">set wsh = createobject(<span class="string">"wscript.shell"</span>)</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span> to <span class="number">6000</span></span><br><span class="line">wscript.sleep <span class="number">500</span></span><br><span class="line">wsh.appactivate(<span class="string">"bomb"</span>)</span><br><span class="line">wsh.sendkeys <span class="string">"^v"</span></span><br><span class="line">wsh.sendkeys <span class="string">"%s"</span></span><br><span class="line">next</span><br></pre></td></tr></table></figure>
<p>然后<strong>随意复制句话，运行脚本，点击下想要发送的聊天窗口</strong>，即可。</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】在宝塔上 同ip 不同端口 设置一个端口对应一个网站</title>
    <url>/1333150612/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<p>准备工作：</p>
<p>　　 ip一个　， 例如：192.168.1.666</p>
<p>　　服务器一台，放行所需端口</p>
<p>　　假想一个域名 <a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p>
<p>　　ps：默认你已经装好宝塔面板了</p>
<p>实现效果：</p>
<p>　　192.168.1.666:6601   访问站点1</p>
<p>　　192.168.1.666:6602   访问站点2</p>
<p>1 新建一个站点，比如： <a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a></p>
<p>2 修改当前站点的配置文件：<br><img src="https://img-blog.csdnimg.cn/20200317180924199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<blockquote>
<p>listen 80;<br> server_name  <a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a>;</p>
</blockquote>
<p> 改为</p>
<blockquote>
<p>listen 6602;<br>  server_name 192.168.1.666;</p>
</blockquote>
<p>3.修改域名管理</p>
<p>添加一个<br><img src="https://img-blog.csdnimg.cn/2020031718053728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>之前添加那个，<a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a>  删除 ！</p>
<p>照此，在添加多个，</p>
<p>切记  改完之后，重启nginx !  访问 即可看到站点内容<br><img src="https://img-blog.csdnimg.cn/20200317180745157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>理解：每个项目下都有个Nginx的配置文件，我们需要将预先想访问的ip添加上去，这样就可以实现不同端口号访问不同项目，泛域名也如此。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>宝塔</tag>
      </tags>
  </entry>
  <entry>
    <title>解决后端提示非法字符</title>
    <url>/635086367/</url>
    <content><![CDATA[<p>解决springboot项目请求出现非法字符问题 java.lang.IllegalArgumentException:</p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/12</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.connector.Connector;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: Blue</span></span><br><span class="line"><span class="comment"> * Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TomcatConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TomcatServletWebServerFactory <span class="title">webServerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TomcatServletWebServerFactory factory = <span class="keyword">new</span> TomcatServletWebServerFactory();</span><br><span class="line">        factory.addConnectorCustomizers((Connector connector) -&gt; &#123;</span><br><span class="line">            connector.setProperty(<span class="string">"relaxedPathChars"</span>, <span class="string">"\"&lt;&gt;[\\]^`&#123;|&#125;"</span>);</span><br><span class="line">            connector.setProperty(<span class="string">"relaxedQueryChars"</span>, <span class="string">"\"&lt;&gt;[\\]^`&#123;|&#125;"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>后端解决跨域问题</title>
    <url>/618161222/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<h3 id="配置类-CorsConfig-解决跨域问题"><a href="#配置类-CorsConfig-解决跨域问题" class="headerlink" title="配置类 CorsConfig: 解决跨域问题"></a>配置类 CorsConfig: 解决跨域问题</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 解决跨域的问题</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">                .allowedMethods(<span class="string">"GET"</span>, <span class="string">"HEAD"</span>, <span class="string">"POST"</span>, <span class="string">"PUT"</span>, <span class="string">"DELETE"</span>, <span class="string">"OPTIONS"</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>前后端交互</tag>
      </tags>
  </entry>
  <entry>
    <title>cookie使用</title>
    <url>/1323035427/</url>
    <content><![CDATA[<p>话不多说，直接上代码</p>
<a id="more"></a>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果要设置过期时间以秒为单位</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCookie</span>(<span class="params">c_name, value, expireseconds</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> exdate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">  exdate.setTime(exdate.getTime() + expireseconds * <span class="number">1000</span>);</span><br><span class="line">  <span class="built_in">document</span>.cookie =</span><br><span class="line">    c_name +</span><br><span class="line">    <span class="string">"="</span> +</span><br><span class="line">    <span class="built_in">escape</span>(value) +</span><br><span class="line">    (expireseconds == <span class="literal">null</span></span><br><span class="line">      ? <span class="string">""</span></span><br><span class="line">      : <span class="string">";expires="</span> + exdate.toGMTString() + <span class="string">";path=/"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数中的参数为 要获取的cookie键的名称。</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCookie</span>(<span class="params">c_name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.cookie.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    c_start = <span class="built_in">document</span>.cookie.indexOf(c_name + <span class="string">"="</span>);</span><br><span class="line">    <span class="keyword">if</span> (c_start != <span class="number">-1</span>) &#123;</span><br><span class="line">      c_start = c_start + c_name.length + <span class="number">1</span>;</span><br><span class="line">      c_end = <span class="built_in">document</span>.cookie.indexOf(<span class="string">";"</span>, c_start);</span><br><span class="line">      <span class="keyword">if</span> (c_end == <span class="number">-1</span>) &#123;</span><br><span class="line">        c_end = <span class="built_in">document</span>.cookie.length;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">unescape</span>(<span class="built_in">document</span>.cookie.substring(c_start, c_end));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>部署前后端分离项目到Linux服务器</title>
    <url>/245703536/</url>
    <content><![CDATA[<p>&amp;nbsp &amp;nbsp 近日自己结合 vue + element ui + Springboot 做了个前后端分离的项目。因为是第一次部署项目，便在此记录下自己的心得。</p>
<a id="more"></a>

<h2 id="方式一：前后端分开部署"><a href="#方式一：前后端分开部署" class="headerlink" title="方式一：前后端分开部署"></a>方式一：前后端分开部署</h2><ol>
<li>拥有自己的服务器，这个是前提。下面我以 CentOS 为例</li>
<li>安装宝塔：<blockquote>
<p>yum install -y wget &amp;&amp; wget -O install.sh <a href="http://download.bt.cn/install/install_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh</p>
</blockquote>
</li>
</ol>
<ul>
<li>注意：安装完成后要记住登录宝塔的域名和账号密码</li>
</ul>
<ol start="3">
<li><p>安装推荐的：nginx 服务器，tomcat8(自带 jdk)，mysql8.0 必需</p>
</li>
<li><p>添加网站，域名就是自己的 ip<br><img src="https://img-blog.csdnimg.cn/2020031619411647.png" alt=""></p>
</li>
<li><p>打包 vue 工程</p>
<blockquote>
<p>npm run build(报错就换源，用 cnpm)的 vue 里的 dist 文件，<br>注意：将里面请求地址的 local host 改成服务器 ip</p>
</blockquote>
</li>
<li><p>在添加网站的根目录上次<strong>生成的 dist</strong> 下的文件<br><img src="https://img-blog.csdnimg.cn/20200316194308538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</li>
<li><p>在宝塔中创建数据库名字要与项目中配置的数据源对应，比如我的就是 mallvue<br><img src="https://img-blog.csdnimg.cn/20200316194628808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</li>
<li><p>导入数据库脚本文件，权限最好仅本地服务器访问</p>
</li>
<li><p>打包 Springboot 项目</p>
<ul>
<li>用 maven 的 package 打包，</li>
<li>注意：此时需要将连接数据库源的 url 中 localhost 换成服务器的 ip</li>
<li>数据库名和密码换成 宝塔建立的数据库 mallvue 填入的信息</li>
</ul>
</li>
<li><p>在 target 里面可以找到打包的 jar 包</p>
</li>
<li><p>使用 xhsell6 连接 Linux 服务器，确保安装了 Xftp6 传输文件</p>
</li>
<li><p>在 root 根目录新建文件夹：mkdir mall_vue，并将打包的 jar 包传输到此文件夹</p>
</li>
<li><p>在 mall_vue 里输入命令：nohup java -jar xxxxxx.jar &amp;<br><img src="https://img-blog.csdnimg.cn/2020031816385139.png" alt=""></p>
</li>
<li><p>至此访问自己 ip 就可以访问项目：<br><img src="https://img-blog.csdnimg.cn/20200316195746636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</li>
</ol>
<h2 id="方式二：一起部署"><a href="#方式二：一起部署" class="headerlink" title="方式二：一起部署"></a>方式二：一起部署</h2><ol>
<li>将 vue 工程生成的 dist 文件下的内容放在 springboot 项目的<strong>resources 的 static</strong>文件夹下</li>
<li>pom 文件中引入</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/18</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        web.ignoring().antMatchers(<span class="string">"/login"</span>, <span class="string">"/img/**"</span>,<span class="string">"/fonts/**"</span>, <span class="string">"/css/**"</span>, <span class="string">"/index.html"</span>, <span class="string">"/favicon.ico"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>然后再 package 项目</li>
<li>再传到服务器对应文件夹，输入 nohup Java -jar xxxxxx.jar &amp;</li>
<li>访问ip:端口号/index.html</li>
<li>控制台中有消息，比如Using generated security password: 76dade1c-f190-44f8-915c-7a6b6917fb9a【每次随机生成的密码】</li>
<li>将用户名 user 和 密码 76dade1c-f190-44f8-915c-7a6b6917fb9a 填入上面对话框中，点击按钮Sign in<br><img src="https://img-blog.csdnimg.cn/2020031817291794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></li>
</ol>
<h2 id="在-linux-系统下运行-jar-包的命令如下"><a href="#在-linux-系统下运行-jar-包的命令如下" class="headerlink" title="在 linux 系统下运行 jar 包的命令如下"></a>在 linux 系统下运行 jar 包的命令如下</h2><ol>
<li>java -jar xxxxx.jar // 当前 ssh 窗口被锁定，可按 CTRL + C 打断程序运行，或直接关闭窗口，程序退出</li>
<li>java -jar xxxxx.jar &amp; //当前 ssh 窗口不被锁定，但是当窗口关闭时，程序中止运行。</li>
<li>nohup java -jar xxxxxx.jar &amp; //意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行</li>
<li>nohup java -jar xxxxxx.jar &gt;aa.log //指定输出日志文件，意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行</li>
</ol>
<p>如果想要关闭java进程，输入命令行</p>
<ol>
<li><p>列出后台进程</p>
<blockquote>
<p>ps -ef | grep java</p>
</blockquote>
</li>
<li><p>杀死进程</p>
<blockquote>
<p>kill -9 xxxx<br>(xxxx为上条命令列出的后台进程的pid， -9 表示无条件终止)</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle设置自增主键</title>
    <url>/3805765109/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<p>第一步创建一张角色表 mall_roles</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> mall_roles (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">number</span> primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">  role_name <span class="built_in">varchar2</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">  role_desc <span class="built_in">varchar2</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>添加表注释、字段注释:<br>comment on table mall_roles is ‘角色表’<br>comment on column mall_roles.role_name is ‘角色名’</p>
<p>第二步：创建序列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">sequence</span> mall_roles_id</span><br><span class="line"><span class="keyword">minvalue</span> <span class="number">1</span>             //自增字段最小值</span><br><span class="line"><span class="keyword">nomaxvalue</span>           //最大值 没有就算<span class="keyword">nomaxvalue</span></span><br><span class="line"><span class="keyword">increment</span> <span class="keyword">by</span> <span class="number">1</span>      //每次增值<span class="number">1</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1</span>           //起始值</span><br><span class="line">nocache;             //不缓存</span><br></pre></td></tr></table></figure>

<p>第三步：创建触发器</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">trigger</span> mall_roles_tg_insertId</span><br><span class="line"><span class="keyword">before</span> <span class="keyword">insert</span> <span class="keyword">on</span> mall_roles <span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> mall_roles_id.nextval <span class="keyword">into</span>:new.id <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure>

<p>第四步：测试开始  插入两条数据</p>
<blockquote>
<p>insert into mall_roles(role_name, role_desc)<br>values (‘主管’,’技术负责人’);</p>
</blockquote>
<p><a href="https://www.cnblogs.com/prettrywork/p/11528526.html" target="_blank" rel="noopener">鸣谢：参考链接</a> </p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>element-ui的树型控件节点实时刷新</title>
    <url>/2949839444/</url>
    <content><![CDATA[<p>今日在做电商后台管理系统时，我从后端查出来的数据，遍历后赋值给我绑定 key 值的数组，但是发现个问题，没有实时更新过来.</p>
<a id="more"></a>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 树形控件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-tree</span></span></span><br><span class="line"><span class="tag">  <span class="attr">ref</span>=<span class="string">"treeRef"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:data</span>=<span class="string">"rightsList"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:props</span>=<span class="string">"treeProps"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">show-checkbox</span></span></span><br><span class="line"><span class="tag">  <span class="attr">default-expand-all</span></span></span><br><span class="line"><span class="tag">  <span class="attr">node-key</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:default-checked-keys</span>=<span class="string">"defaultKeys"</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">node-click</span>=<span class="string">"handleNodeClick"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">el-tree</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>data()中的属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 所有权限的数据</span></span><br><span class="line">rightsList: [],</span><br><span class="line"><span class="comment">// 树型控件的属性绑定对象</span></span><br><span class="line">treeProps: &#123;</span><br><span class="line">  label: <span class="string">'authName'</span>,</span><br><span class="line">  children: <span class="string">'children'</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 默认选中的节点id值</span></span><br><span class="line">defaultKeys: []</span><br></pre></td></tr></table></figure>

<p>进展：<br>我发现设置@node-click=”handleNodeClick”事件后，点击节点，新的数据就被渲染出来了，但是这还达不到我的要求，我需要直接打开对话框就显示正常的数据。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">handleNodeClick(data, node) &#123;</span><br><span class="line">  <span class="comment">// 这样可以拿到树组件的 tree对象</span></span><br><span class="line">  <span class="keyword">const</span> tree = <span class="keyword">this</span>.$refs.treeRef</span><br><span class="line">  <span class="keyword">this</span>.$refs.treeRef.setCheckedKeys(<span class="keyword">this</span>.defaultKeys)</span><br><span class="line">  <span class="built_in">console</span>.log(node)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样后我打开对话框，只需要点击下节点就能实时更新数据过来，但即便这样体验感也不好。</p>
<p>最终解决：设置了个延时函数,加个nextTick钩子</p>
<p><strong>我的理解是：</strong></p>
<blockquote>
<p>这是因为this.dialogVisible = true时并没有立即更新dom，而是等整个逻辑执行完后再一次新渲染，<br>因此此时的弹框并未渲染，在dom树中是不存在的，<br>this.$refs.tree is undefined的所以setCheckedKeys肯定也是undefined。<br>解决方法: this.$nextTick()，this.$nextTick()会在dom更新之后在执行回调</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 展示分配权限的对话框</span></span><br><span class="line">showSetRightDialog(id) &#123;</span><br><span class="line">  <span class="keyword">this</span>.getPowerTree(id)</span><br><span class="line">   <span class="comment">// 设置个延时函数，不然不能实时更新数据</span></span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.setRightDialogVisible = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">this</span>.$nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="keyword">this</span>.$refs.treeRef.setCheckedKeys(<span class="keyword">this</span>.defaultKeys)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;, <span class="number">300</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>效果展示：<br><img src="https://img-blog.csdnimg.cn/20200316204704374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>Element Ui</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle的模糊查询</title>
    <url>/1625540053/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<h2 id="mybatis-oracle实现简单的模糊查询"><a href="#mybatis-oracle实现简单的模糊查询" class="headerlink" title="mybatis+oracle实现简单的模糊查询"></a>mybatis+oracle实现简单的模糊查询</h2><h3 id="第一种-concat"><a href="#第一种-concat" class="headerlink" title="第一种 concat"></a>第一种 concat</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> cat_table <span class="keyword">where</span> cat_name <span class="keyword">like</span> <span class="keyword">concat</span>(<span class="comment">#&#123;catName&#125;,'%')      --单个百分号</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> cat_table <span class="keyword">where</span> cat_name <span class="keyword">like</span> <span class="keyword">concat</span>(<span class="keyword">concat</span>(<span class="string">'%'</span>,<span class="comment">#&#123;catName&#125;),'%')    --前后百分号</span></span><br></pre></td></tr></table></figure>

<h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种 ||"></a>第二种 ||</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> cat_table <span class="keyword">where</span> cat_name <span class="keyword">like</span> <span class="string">'%'</span> || <span class="comment">#&#123;catName&#125; || '%'</span></span><br></pre></td></tr></table></figure>

<h3 id="第三种-instr"><a href="#第三种-instr" class="headerlink" title="第三种 instr"></a>第三种 instr</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> cat_table <span class="keyword">where</span> <span class="keyword">instr</span>(<span class="comment">#&#123;catName&#125;,'helloworld')&gt;0</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/maogege/p/10462329.html" target="_blank" rel="noopener">参考链接</a></p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>axios传值的方式</title>
    <url>/880098577/</url>
    <content><![CDATA[<p>注意：前端怎么传值，后端就用什么拿值，一一对应。<br><br></p>
<a id="more"></a>

<h2 id="get-方式"><a href="#get-方式" class="headerlink" title="get 方式"></a>get 方式</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$axios</span><br><span class="line">  .get(<span class="string">"http://localhost:8081/users/"</span>, &#123;</span><br><span class="line">    <span class="comment">// data()中的queryInfo对象</span></span><br><span class="line">    params: <span class="keyword">this</span>.queryInfo</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.data.code === <span class="number">200</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h2 id="post-方式"><a href="#post-方式" class="headerlink" title="post 方式"></a>post 方式</h2><ul>
<li>方式一：但是兼容性不好，在 ie 浏览器没用</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> params = <span class="keyword">new</span> URLSearchParams();</span><br><span class="line">params.append(<span class="string">"name"</span>, <span class="keyword">this</span>.addUserForm.name);</span><br><span class="line"><span class="comment">// params.append("userInfo", this.addUserForm);尝试拼接对象，但是在f12后的xhr中，传值仅仅显示是对象，后端拿不到值</span></span><br><span class="line"><span class="keyword">this</span>.$axios</span><br><span class="line">  .post(<span class="string">"http://localhost:8081/users/add?"</span>, params)</span><br><span class="line">  .then(<span class="function"><span class="params">response</span> =&gt;</span> (<span class="keyword">this</span>.Datas = response.data.json.userMaps));</span><br></pre></td></tr></table></figure>

<ul>
<li>方式二：<br>在 main.js 中引入 axios 中自带的：</li>
</ul>
<blockquote>
<p>import Qs from ‘qs’<br>Vue.prototype.qs = Qs</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> params = <span class="keyword">this</span>.qs.stringify(&#123;</span><br><span class="line">  id: <span class="keyword">this</span>.addUserForm.id,</span><br><span class="line">  name: <span class="keyword">this</span>.addUserForm.name</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">this</span>.$axios</span><br><span class="line">  .post(<span class="string">"http://localhost:8081/users/add"</span>, params)</span><br><span class="line">  .then(<span class="function"><span class="params">success</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (success.data.code === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.editDialogVisible = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">this</span>.getUserList();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.$message.error(<span class="string">"添加失败:"</span> + err);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h2 id="put-方式"><a href="#put-方式" class="headerlink" title="put 方式"></a>put 方式</h2><p>方式一：直接传值，不推荐<br>这种是前面怎么修改，值后端都是不能获取到，但是现在可以跟 post 的方式二一样。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$axios</span><br><span class="line">  .put(</span><br><span class="line">    <span class="string">`http://localhost:8081/users/changeStatus?id=<span class="subst">$&#123;userInfo.id&#125;</span>&amp;status=<span class="subst">$&#123;userInfo.status&#125;</span>`</span></span><br><span class="line">  )</span><br><span class="line">  .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.data.code === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.$message.success(<span class="string">"更新状态成功"</span>);</span><br><span class="line">      <span class="comment">// 重新获取数据</span></span><br><span class="line">      <span class="keyword">this</span>.getUserList();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.$message.error(<span class="string">`更新状态失败:<span class="subst">$&#123;err&#125;</span>`</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h2 id="delete-方式"><a href="#delete-方式" class="headerlink" title="delete 方式"></a>delete 方式</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$axios</span><br><span class="line">  .delete(<span class="string">"http://localhost:8081/users/delete"</span>, &#123;</span><br><span class="line">    params: &#123;</span><br><span class="line">      userId: userId</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="params">success</span> =&gt;</span> &#123;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>axios</tag>
      </tags>
  </entry>
  <entry>
    <title>后端查询sql报错</title>
    <url>/3632852599/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<h3 id="java-sql-SQLException-不支持的字符集-在类路径中添加-orai18n-jar-ZHS16GBK"><a href="#java-sql-SQLException-不支持的字符集-在类路径中添加-orai18n-jar-ZHS16GBK" class="headerlink" title="java.sql.SQLException: 不支持的字符集 (在类路径中添加 orai18n.jar): ZHS16GBK"></a>java.sql.SQLException: 不支持的字符集 (在类路径中添加 orai18n.jar): ZHS16GBK</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.easyproject<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>orai18n<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>12.1.0.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="mybatis提示应该给对象取个别名"><a href="#mybatis提示应该给对象取个别名" class="headerlink" title="mybatis提示应该给对象取个别名"></a>mybatis提示应该给对象取个别名</h3><p>这种还是很奇怪的，以前是用mysql连接都可以直接匹配，但是oracle去掉就报错了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 根据用户id修改用户状态</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> userInfo 用户id 用户状态</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 受影响行数</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateStatusById</span><span class="params">(@Param(<span class="string">"userInfo"</span>)</span> UserInfo userInfo)</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot连接oracle数据库</title>
    <url>/930162758/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>
### 目的导入 ojdbc14.jar 包：

<p>在 PL/SQL 中查看需要 jar 包的版本：</p>
<blockquote>
<p>select * from v$version</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 -Dversion=10.2.0.1.0 -Dpackaging=jar -Dfile=ojdbc14.jar</span><br></pre></td></tr></table></figure>

<p>方式一：</p>
<ol>
<li>将 jar 包放在 bin 目录下</li>
<li>maven 的 bin 目录下运行 mvn -v</li>
</ol>
<p>方式二(配置 maven)：</p>
<ol>
<li>新建变量：MAVEN_HOME , 后面的是 maven 的位置。<br><img src="https://img-blog.csdnimg.cn/20200306102441886.png" alt=""></li>
<li>更改 path（最好在系统变量中：%MAVEN_HOME%\bin\）注意分号，win10 推荐编辑文本添加</li>
</ol>
<p>但是这种方式不知道为啥，我在 pom 文件中引入 ojdbc 依旧无效的。</p>
<p>最终解决方法：<br>我在 pom 文件中引入的两个个依赖，其他都没配置了，竟然就奇迹般地连上了数据库。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle.ojdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- druid数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>application.yml连接数据库配置</p>
<pre><code class="xml">spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@127.0.0.1:1521:orcl
    username: scott
    password: 密码</code></pre>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>Springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>vue错误集</title>
    <url>/1646488506/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<h2 id="vue-cli-service-不是内部或者外部命令"><a href="#vue-cli-service-不是内部或者外部命令" class="headerlink" title="vue-cli-service 不是内部或者外部命令"></a>vue-cli-service 不是内部或者外部命令</h2><p><img src="https://segmentfault.com/img/bVbkCHS?w=635&h=322" alt=""></p>
<p>解决方法：</p>
<blockquote>
<p>删了node—modules重新npm install</p>
</blockquote>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Element-ui使用心得</title>
    <url>/1031608707/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>npm 方式：</p>
<blockquote>
<p>npm i element-ui -S</p>
</blockquote>
<p>ui 界面方式：</p>
<blockquote>
<p>插件搜索 element</p>
</blockquote>
<p><strong>注意：以下 element 标签名都是类名</strong></p>
<h2 id="Form-表单"><a href="#Form-表单" class="headerlink" title="Form 表单"></a>Form 表单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login_box"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 头像区域 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"avatar_box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../assets/logo.png"</span> <span class="attr">alt</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 登录表单区域 :ref相当于dom返回对象，可以用于重置表格 :model绑定熟悉class- loginForm  :rules表单校验规则--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">        <span class="attr">ref</span>=<span class="string">"loginFormRef"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:model</span>=<span class="string">"loginForm"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:rules</span>=<span class="string">"loginFormRules"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">label-width</span>=<span class="string">"0px"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"login_form"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-model</span>=<span class="string">"loginForm.username"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">prefix-icon</span>=<span class="string">"el-icon-user-solid"</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">"password"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-model</span>=<span class="string">"loginForm.password"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">prefix-icon</span>=<span class="string">"el-icon-lock"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">type</span>=<span class="string">"password"</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"login"</span> <span class="attr">type</span>=<span class="string">"primary"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"reset"</span> <span class="attr">type</span>=<span class="string">"info"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">reset() &#123;</span><br><span class="line">  <span class="comment">// 重置表单所有内容</span></span><br><span class="line">  <span class="keyword">this</span>.$refs.loginFormRef.resetFields()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">loginForm: &#123;</span><br><span class="line">  username: <span class="string">''</span>,</span><br><span class="line">  password: <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line">loginFormRules: &#123;</span><br><span class="line">  username: [&#123; <span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">'用户名不能为空'</span> &#125;],</span><br><span class="line">  password: [&#123; <span class="attr">validator</span>: valiCateDeleted, <span class="attr">trigger</span>: <span class="string">'blur'</span> &#125;]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>表单校验：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    <span class="keyword">var</span> valiCateDeleted = <span class="function">(<span class="params">rule, value, cb</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (value === <span class="number">0</span> || value === <span class="string">'1'</span> || value === <span class="string">'0'</span>) &#123;</span><br><span class="line">        cb()</span><br><span class="line">      &#125;</span><br><span class="line">      cb(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'0代表有效，1代表失效'</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br></pre></td></tr></table></figure>

<p><strong>注意表单校验</strong>：typeof value 查：少用 0，第一次是 number，但第二次就成了 string</p>
<p><a href="https://element.eleme.cn/#/zh-CN/component/form" target="_blank" rel="noopener">From 表单_详情链接</a></p>
<h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">class</span>=<span class="string">"home-container"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 头部区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">          <span class="attr">src</span>=<span class="string">"http://coderblue.cn/images/ayer.png"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">width</span>=<span class="string">"46px"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">height</span>=<span class="string">"46px"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>电商后台管理系统<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"info"</span> @<span class="attr">click</span>=<span class="string">"logout"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面主体区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 侧边栏 isCollapse:true就只有一级菜单的大小，false就是完整大小--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">:width</span>=<span class="string">"isCollapse ? '64px' : '200px'"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"toggle-button"</span> @<span class="attr">click</span>=<span class="string">"toggleCollapse"</span>&gt;</span>|||<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 侧边栏菜单区域 每次只展开一个或者绑定属性</span></span><br><span class="line"><span class="comment">        :unique-opened="true" collapse-transition:是否开启折叠动画 collapse:是否水平折叠收起菜单</span></span><br><span class="line"><span class="comment">        router:启用了v-router的模式，以index为path跳转</span></span><br><span class="line"><span class="comment">        :default-active:被点击的链接激活状态--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:default-active</span>=<span class="string">"$route.path"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">unique-opened</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:router</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:collapse</span>=<span class="string">"isCollapse"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:collapse-transition</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">background-color</span>=<span class="string">"#333744"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">text-color</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">active-text-color</span>=<span class="string">"#ffd04b"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 一级菜单 --&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-submenu</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:index</span>=<span class="string">"item.id + '' + index"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-for</span>=<span class="string">"(item, index) in menuList"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">:key</span>=<span class="string">"item.id"</span></span></span><br><span class="line"><span class="tag">          &gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 一级菜单的模板区 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 图标 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">:class</span>=<span class="string">"iconsObj[item.id]"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- 文本 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.authName &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- 二级菜单 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:index</span>=<span class="string">"'/' + subItem.path"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">v-for</span>=<span class="string">"subItem in item.children"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:key</span>=<span class="string">"subItem.id"</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-menu"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; subItem.authName &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 右侧内容主体 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 路由占位符 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>方法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">// 左侧菜单数据</span></span><br><span class="line">      menuList: [&#123; <span class="attr">authName</span>: <span class="string">'用户管理'</span>, <span class="attr">id</span>: <span class="number">125</span>, <span class="attr">order</span>: <span class="number">1</span>, <span class="attr">path</span>: <span class="string">'users'</span> &#125;],</span><br><span class="line">      <span class="comment">// 配置一级菜单图标</span></span><br><span class="line">      iconsObj: &#123;</span><br><span class="line">        <span class="number">125</span>: <span class="string">'el-icon-user-solid'</span>,</span><br><span class="line">        <span class="number">103</span>: <span class="string">'el-icon-lock'</span>,</span><br><span class="line">        <span class="number">101</span>: <span class="string">'el-icon-shopping-bag-2'</span>,</span><br><span class="line">        <span class="number">102</span>: <span class="string">'el-icon-shopping-cart-full'</span>,</span><br><span class="line">        <span class="number">145</span>: <span class="string">'el-icon-tickets'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      isCollapse: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    <span class="keyword">this</span>.getMenuList()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    logout() &#123;</span><br><span class="line">      <span class="comment">// 清空token</span></span><br><span class="line">      <span class="built_in">window</span>.sessionStorage.clear()</span><br><span class="line">      <span class="comment">// 跳转</span></span><br><span class="line">      <span class="keyword">this</span>.$router.push(<span class="string">'/login'</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    getMenuList() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$axios</span><br><span class="line">        .get(<span class="string">'/login?username=admin&amp;&amp;password=123456'</span>, &#123;&#125;)</span><br><span class="line">        .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.menuList = [</span><br><span class="line">            &#123;</span><br><span class="line">              authName: <span class="string">'用户管理'</span>,</span><br><span class="line">              id: <span class="number">125</span>,</span><br><span class="line">              order: <span class="number">1</span>,</span><br><span class="line">              path: <span class="string">'users'</span>,</span><br><span class="line">              children: [</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'用户列表'</span>,</span><br><span class="line">                  id: <span class="number">225</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'users'</span></span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              authName: <span class="string">'权限管理'</span>,</span><br><span class="line">              id: <span class="number">103</span>,</span><br><span class="line">              order: <span class="number">1</span>,</span><br><span class="line">              path: <span class="string">'rights'</span>,</span><br><span class="line">              children: [</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'角色列表'</span>,</span><br><span class="line">                  id: <span class="number">203</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'roles'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'权限列表'</span>,</span><br><span class="line">                  id: <span class="number">204</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'powers'</span></span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              authName: <span class="string">'商品管理'</span>,</span><br><span class="line">              id: <span class="number">101</span>,</span><br><span class="line">              order: <span class="number">1</span>,</span><br><span class="line">              path: <span class="string">'goods'</span>,</span><br><span class="line">              children: [</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'商品列表'</span>,</span><br><span class="line">                  id: <span class="number">200</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'goods'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'分类列表'</span>,</span><br><span class="line">                  id: <span class="number">199</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'classify'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'商品分类'</span>,</span><br><span class="line">                  id: <span class="number">198</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'goodsClass'</span></span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              authName: <span class="string">'订单管理'</span>,</span><br><span class="line">              id: <span class="number">102</span>,</span><br><span class="line">              order: <span class="number">1</span>,</span><br><span class="line">              path: <span class="string">'orders'</span>,</span><br><span class="line">              children: [</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'订单列表'</span>,</span><br><span class="line">                  id: <span class="number">202</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'orders'</span></span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              authName: <span class="string">'数据统计'</span>,</span><br><span class="line">              id: <span class="number">145</span>,</span><br><span class="line">              order: <span class="number">1</span>,</span><br><span class="line">              path: <span class="string">'reports'</span>,</span><br><span class="line">              children: [</span><br><span class="line">                &#123;</span><br><span class="line">                  authName: <span class="string">'数据报表'</span>,</span><br><span class="line">                  id: <span class="number">245</span>,</span><br><span class="line">                  order: <span class="number">2</span>,</span><br><span class="line">                  path: <span class="string">'reports'</span></span><br><span class="line">                &#125;</span><br><span class="line">              ]</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 点击按钮切换菜单的折叠展开</span></span><br><span class="line">    toggleCollapse() &#123;</span><br><span class="line">      <span class="keyword">this</span>.isCollapse = !<span class="keyword">this</span>.isCollapse</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://element.eleme.cn/#/zh-CN/component/menu" target="_blank" rel="noopener">NavMenu 导航菜单</a></p>
<h2 id="Table-表格"><a href="#Table-表格" class="headerlink" title="Table 表格"></a>Table 表格</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 面包屑导航区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-breadcrumb</span> <span class="attr">separator-class</span>=<span class="string">"el-icon-arrow-right"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-breadcrumb-item</span> <span class="attr">:to</span>=<span class="string">"&#123; path: '/home' &#125;"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">el-breadcrumb-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-breadcrumb-item</span>&gt;</span>活动管理<span class="tag">&lt;/<span class="name">el-breadcrumb-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-breadcrumb-item</span>&gt;</span>活动列表<span class="tag">&lt;/<span class="name">el-breadcrumb-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-breadcrumb</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 卡片视图区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-card</span> <span class="attr">class</span>=<span class="string">"box-card"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 搜索与添加区域:Layout栅格布局 </span></span><br><span class="line"><span class="comment">      gutter 属性来指定每一栏之间的间隔，默认间隔为 0。</span></span><br><span class="line"><span class="comment">      span 属性布局，总共24份--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">"20"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"8"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">placeholder</span>=<span class="string">"请输入内容"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">slot</span>=<span class="string">"append"</span> <span class="attr">icon</span>=<span class="string">"el-icon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"4"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span>&gt;</span>添加用户<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 用户列表区域 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">"userList"</span> <span class="attr">border</span> <span class="attr">stripe</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"#"</span> <span class="attr">type</span>=<span class="string">"index"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"姓名"</span> <span class="attr">prop</span>=<span class="string">"name"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"邮箱"</span> <span class="attr">prop</span>=<span class="string">"email"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"电话"</span> <span class="attr">prop</span>=<span class="string">"telephone"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"角色"</span> <span class="attr">prop</span>=<span class="string">"role"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"状态"</span> <span class="attr">prop</span>=<span class="string">"status"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- &#123;&#123; scope.row &#125;&#125;:每一行的json都展示 --&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-switch</span></span></span><br><span class="line"><span class="tag">                @<span class="attr">change</span>=<span class="string">"changeStatus(scope.row)"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">inactive-value</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">active-value</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">v-model</span>=<span class="string">"scope.row.status"</span></span></span><br><span class="line"><span class="tag">              &gt;</span><span class="tag">&lt;/<span class="name">el-switch</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">label</span>=<span class="string">"操作"</span> <span class="attr">width</span>=<span class="string">"180"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">"primary"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">icon</span>=<span class="string">"el-icon-edit"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">size</span>=<span class="string">"mini"</span></span></span><br><span class="line"><span class="tag">            &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">              <span class="attr">type</span>=<span class="string">"danger"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">icon</span>=<span class="string">"el-icon-delete"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">size</span>=<span class="string">"mini"</span></span></span><br><span class="line"><span class="tag">            &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-tooltip</span></span></span><br><span class="line"><span class="tag">              <span class="attr">effect</span>=<span class="string">"dark"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">content</span>=<span class="string">"分配角色"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">placement</span>=<span class="string">"top"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:enterable</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">style</span>=<span class="string">"padding: 0px;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">type</span>=<span class="string">"warning"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">icon</span>=<span class="string">"el-icon-setting"</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">size</span>=<span class="string">"mini"</span></span></span><br><span class="line"><span class="tag">                &gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-tooltip</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 分页区域 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">size-change</span>=<span class="string">"handleSizeChange"</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">current-change</span>=<span class="string">"handleCurrentChange"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:current-page</span>=<span class="string">"queryInfo.pageNum"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:page-sizes</span>=<span class="string">"[1, 2, 5, 10]"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:page-size</span>=<span class="string">"queryInfo.pageSize"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">layout</span>=<span class="string">"total, sizes, prev, pager, next, jumper"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:total</span>=<span class="string">"total"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-card</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>效果展示：<br><img src="https://img-blog.csdnimg.cn/20200316204545445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><a href="https://element.eleme.cn/#/zh-CN/component/breadcrumb" target="_blank" rel="noopener">Table 表格</a></p>
<h2 id="MessageBox-弹框"><a href="#MessageBox-弹框" class="headerlink" title="MessageBox 弹框"></a>MessageBox 弹框</h2><p><img src="https://img-blog.csdnimg.cn/20200309191435578.png" alt=""></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">open() &#123;</span><br><span class="line">  <span class="keyword">this</span>.$confirm(<span class="string">'此操作将永久删除该文件, 是否继续?'</span>, <span class="string">'提示'</span>, &#123;</span><br><span class="line">    confirmButtonText: <span class="string">'确定'</span>,</span><br><span class="line">    cancelButtonText: <span class="string">'取消'</span>,</span><br><span class="line">    type: <span class="string">'warning'</span></span><br><span class="line">  &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">      type: <span class="string">'success'</span>,</span><br><span class="line">      message: <span class="string">'删除成功!'</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">      type: <span class="string">'info'</span>,</span><br><span class="line">      message: <span class="string">'已取消删除'</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://element.eleme.cn/#/zh-CN/component/message-box" target="_blank" rel="noopener">MessageBox 弹框</a></p>
<h2 id="Dialog-对话框"><a href="#Dialog-对话框" class="headerlink" title="Dialog 对话框"></a>Dialog 对话框</h2><p><img src="https://img-blog.csdnimg.cn/20200309191855227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-dialog</span></span></span><br><span class="line"><span class="tag">  <span class="attr">title</span>=<span class="string">"提示"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:visible.sync</span>=<span class="string">"dialogVisible"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">"30%"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:before-close</span>=<span class="string">"handleClose"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>这是一段信息<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"footer"</span> <span class="attr">class</span>=<span class="string">"dialog-footer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"dialogVisible = false"</span>&gt;</span>取 消<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"dialogVisible = false"</span>&gt;</span>确 定<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://element.eleme.cn/#/zh-CN/component/dialog" target="_blank" rel="noopener">Dialog 对话框</a></p>
<h2 id="Cascader-级联选择器"><a href="#Cascader-级联选择器" class="headerlink" title="Cascader 级联选择器"></a>Cascader 级联选择器</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-cascader</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-model</span>=<span class="string">"selectedCatKeys"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:options</span>=<span class="string">"cascaderList"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:props</span>=<span class="string">"cateProps"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">  <span class="attr">filterable</span></span></span><br><span class="line"><span class="tag">  <span class="attr">ref</span>=<span class="string">"cascader"</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">change</span>=<span class="string">"handleChange"</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">el-cascader</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>data 中的定义：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 级联选择器的值列表</span></span><br><span class="line">cascaderList: [],</span><br><span class="line"><span class="comment">// 级联选择器的配置</span></span><br><span class="line">cateProps: &#123;</span><br><span class="line">  label: <span class="string">'catName'</span>,</span><br><span class="line">  value: <span class="string">'id'</span>,</span><br><span class="line">  children: <span class="string">'children'</span>,</span><br><span class="line">  <span class="comment">// 设置每一级都可以选中</span></span><br><span class="line">  checkStrictly: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 设置悬浮展开</span></span><br><span class="line">  expandTrigger: <span class="string">'hover'</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 级联选择器双向绑定到数组中</span></span><br><span class="line">selectedCatKeys: [],</span><br></pre></td></tr></table></figure>

<p>methods</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 级联选择器选中项变化会触发的函数</span></span><br><span class="line">    handleChange() &#123;</span><br><span class="line">      <span class="comment">// 被选中数据的id数组</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.selectedCatKeys.length === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 数据操作</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="comment">// 绑定在添加分类对话框的：关闭时清空值</span></span><br><span class="line">    closeAddDialog() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$refs.addFormRef.resetFields()</span><br><span class="line">      <span class="comment">// 很无奈：this.$refs.cascader.clearCheckedNodes is not a function"</span></span><br><span class="line">      <span class="comment">// 清空级联选择器表明上显示值</span></span><br><span class="line">      <span class="keyword">this</span>.$refs.cascader.inputValue = <span class="string">''</span></span><br><span class="line">      <span class="comment">// 清空被选中的</span></span><br><span class="line">      <span class="keyword">this</span>.$refs.cascader.checkedValue = <span class="string">''</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>效果展示：<br><img src="https://img-blog.csdnimg.cn/20200316204348706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h2 id="vue-table-with-tree-grid-使用"><a href="#vue-table-with-tree-grid-使用" class="headerlink" title="vue-table-with-tree-grid 使用"></a>vue-table-with-tree-grid 使用</h2><ol>
<li><p>Use npm:</p>
<blockquote>
<p>npm i vue-table-with-tree-grid -S</p>
</blockquote>
</li>
<li><p>Usage:在 main.js 中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> TreeTable <span class="keyword">from</span> <span class="string">"vue-table-with-tree-grid"</span>;</span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">"tree-table"</span>, TreeTable);</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>Demo 代码演示:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tree-table</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"treeTable"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:data</span>=<span class="string">"cateList"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:columns</span>=<span class="string">"columns"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:selection-type</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:expand-type</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">show-index</span></span></span><br><span class="line"><span class="tag">  <span class="attr">index-text</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">border</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:show-row-hover</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--是否有效区域：等同于 slot="isOk" slot-scope="scope" --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:isOk</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"el-icon-success"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">style</span>=<span class="string">"color: lightgreen;"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-if</span>=<span class="string">"scope.row.catDeleted === 0"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-error"</span> <span class="attr">style</span>=<span class="string">"color: red;"</span> <span class="attr">v-else</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 排序 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:sort</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">v-if</span>=<span class="string">"scope.row.catLevel === 0"</span>&gt;</span>一级<span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">v-else-if</span>=<span class="string">"scope.row.catLevel === 1"</span> <span class="attr">type</span>=<span class="string">"success"</span></span></span><br><span class="line"><span class="tag">      &gt;</span>二级<span class="tag">&lt;/<span class="name">el-tag</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">size</span>=<span class="string">"mini"</span> <span class="attr">v-else</span> <span class="attr">type</span>=<span class="string">"warning"</span>&gt;</span>三级<span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 操作 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:option</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">size</span>=<span class="string">"mini"</span> @<span class="attr">click</span>=<span class="string">"showEditDialog(scope.row)"</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-edit"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"warning"</span> <span class="attr">size</span>=<span class="string">"mini"</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-delete"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tree-table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 商品分类的列表数据</span></span><br><span class="line">      cateList: [</span><br><span class="line">        &#123;</span><br><span class="line">          catName: <span class="string">'电视机'</span>,</span><br><span class="line">          catDelete: <span class="literal">false</span>,</span><br><span class="line">          children: [</span><br><span class="line">            &#123; <span class="attr">catName</span>: <span class="string">'看电视'</span>, <span class="attr">children</span>: [&#123; <span class="attr">catName</span>: <span class="string">'喜羊羊与灰太狼'</span> &#125;] &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          catName: <span class="string">'洗衣机'</span>,</span><br><span class="line">          catDelete: <span class="literal">true</span>,</span><br><span class="line">          children: [&#123; <span class="attr">catName</span>: <span class="string">'洗衣服'</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="comment">// 为table指定列的定义</span></span><br><span class="line">      columns: [</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">'分类名称'</span>,</span><br><span class="line">          prop: <span class="string">'catName'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">'是否有效'</span>,</span><br><span class="line">          <span class="comment">// 表示，将当前列定义为模板列</span></span><br><span class="line">          type: <span class="string">'template'</span>,</span><br><span class="line">          <span class="comment">// 表示当前这一列使用模板名称</span></span><br><span class="line">          template: <span class="string">'isOk'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">'排序'</span>,</span><br><span class="line">          <span class="comment">// 表示，将当前列定义为模板列</span></span><br><span class="line">          type: <span class="string">'template'</span>,</span><br><span class="line">          <span class="comment">// 表示当前这一列使用模板名称</span></span><br><span class="line">          template: <span class="string">'sort'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">'操作'</span>,</span><br><span class="line">          <span class="comment">// 表示，将当前列定义为模板列</span></span><br><span class="line">          type: <span class="string">'template'</span>,</span><br><span class="line">          <span class="comment">// 表示当前这一列使用模板名称</span></span><br><span class="line">          template: <span class="string">'option'</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br></pre></td></tr></table></figure>
<p>效果展示：<br><img src="https://img-blog.csdnimg.cn/20200316204232722.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><a href="https://github.com/MisterTaki/vue-table-with-tree-grid" target="_blank" rel="noopener">官方文档：</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Element Ui</tag>
      </tags>
  </entry>
  <entry>
    <title>git常用命令</title>
    <url>/1111146142/</url>
    <content><![CDATA[<h2 id="将本地工程push到远程"><a href="#将本地工程push到远程" class="headerlink" title="将本地工程push到远程"></a>将本地工程push到远程</h2><a id="more"></a>
<h3 id="方式一："><a href="#方式一：" class="headerlink" title="方式一："></a>方式一：</h3><ol>
<li>建立本地仓库<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li>
<li>创建远程仓库：在github或者gitlab创建远程仓库</li>
<li>让本地仓库和远程仓库进行关联<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin git@mycode.skylettestudio.com:xlPay&#x2F;XLPay.git</span><br></pre></td></tr></table></figure></li>
<li>进行添加和提交操作<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m&quot;添加文件&quot;</span><br></pre></td></tr></table></figure></li>
<li>push到远程<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br><span class="line"></span><br><span class="line">由于远程库是空的，第一次推送master分支时，加上-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令，如下：</span><br><span class="line">git push origin master </span><br><span class="line">或 </span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="方式二："><a href="#方式二：" class="headerlink" title="方式二："></a>方式二：</h3><ol>
<li><p>创建远程仓库</p>
</li>
<li><p>把远程仓库clone到本地</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone. git@mycode.skylettestudio.com:xlPay&#x2F;XLPay.git</span><br></pre></td></tr></table></figure></li>
<li><p>将本地工程copy到clone的文件夹中</p>
</li>
<li><p>进行添加和提交操作</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m&quot;添加文件&quot;</span><br></pre></td></tr></table></figure></li>
<li><p>将工程push到远程</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push _ origin _ master</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="创建分支，并提交分支再合并分支到master分支"><a href="#创建分支，并提交分支再合并分支到master分支" class="headerlink" title="创建分支，并提交分支再合并分支到master分支"></a>创建分支，并提交分支再合并分支到master分支</h2><ol>
<li>先次分支提交</li>
<li>切换到主分支：git checkout master</li>
<li>git merge 被合并的次分支名</li>
<li>git push</li>
</ol>
<h2 id="git-clone-指定分支-拉代码"><a href="#git-clone-指定分支-拉代码" class="headerlink" title="git clone 指定分支 拉代码"></a>git clone 指定分支 拉代码</h2><ol>
<li>git clone 不指定分支 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone  http:&#x2F;&#x2F;10.1.1.11&#x2F;service&#x2F;tmall-service.git</span><br></pre></td></tr></table></figure></li>
<li>git clone 指定分支 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone -b dev_jk http:&#x2F;&#x2F;10.1.1.11&#x2F;service&#x2F;tmall-service.git</span><br></pre></td></tr></table></figure>
 注：命令中：多了一个 -b dev-jk,这个dev_jk就是分支，<a href="http://10.1.1.11/service/tmall" target="_blank" rel="noopener">http://10.1.1.11/service/tmall</a><br> -service.git为源码的仓库地址</li>
</ol>
<h2 id="Add操作"><a href="#Add操作" class="headerlink" title="Add操作"></a>Add操作</h2><ul>
<li>添加单个改动文件，如：readme.txt<br>git add readme.txt</li>
<li>添加所有改变的文件，有如下几种区别：<br>//表示添加所有内容<br>git add -A<br>//表示添加新文件和编辑过的文件不包括删除的文件<br>git add .<br>//表示添加编辑或者删除的文件，不包括新添加的文件<br>git add -u</li>
<li>添加同时提交内容<br>git commit -am”添加并提交到仓库”</li>
</ul>
<h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><ul>
<li>查看分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></li>
<li>创建分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch 分支名</span><br><span class="line">或</span><br><span class="line">git checkout -b 分支名</span><br></pre></td></tr></table></figure></li>
<li>切换分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout 分支名</span><br></pre></td></tr></table></figure></li>
<li>合并某分支到当前分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge &lt;name&gt;</span><br></pre></td></tr></table></figure></li>
<li>删除本地分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -d &lt;name&gt;</span><br></pre></td></tr></table></figure></li>
<li>查看远程分支列表<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -a</span><br><span class="line"></span><br><span class="line">绿色代表当前项目所在的分支，红色就是远程分支列表</span><br></pre></td></tr></table></figure></li>
<li>提交该分支到远程仓库(即：在远程创建dev分支，并提交内容)：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin dev</span><br></pre></td></tr></table></figure></li>
<li>从远程获取dev分支内容：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull origin dev</span><br></pre></td></tr></table></figure></li>
<li>删除远程分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push origin --delete &lt;branchName&gt;</span><br></pre></td></tr></table></figure></li>
<li>重命名本地分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -m &lt;oldbranch&gt; &lt;newbranch&gt;</span><br></pre></td></tr></table></figure></li>
<li>重命名远程分支<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">先删除远程分支，然后重命名本地分支，再重新提交一个远程分支</span><br></pre></td></tr></table></figure>
<h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2>在Git中，用HEAD表示当前版本。上一个版本就是HEAD，上上一个版本就是HEAD。，当然往上100个版本写100个比较容易数不过来，所以写成HEAD~100。</li>
<li>查看提交日志（所有的提交日志，最近到最远）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure></li>
<li>查看提交的内容（比如更改了哪些类，删除了哪些文件等）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log -p -1&#x2F;&#x2F; -p 选项展开显示每次提交的内容差异，用 -2 则仅显示最近的两次更新</span><br></pre></td></tr></table></figure></li>
<li>查看命令历史（即：我们每一个命令）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure></li>
<li>通过git log 或者 git reflog可以拿到每个版本的commit_id，然后通过切换版本/回退版本的命令即可：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard commit_id</span><br></pre></td></tr></table></figure></li>
<li>回到上一个版本<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br></pre></td></tr></table></figure></li>
<li>回退版本操作：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;git log 拿到commit_id</span><br><span class="line">git log</span><br><span class="line">&#x2F;&#x2F;回到commit_id那个版本</span><br><span class="line">git reset --hard commit_id</span><br></pre></td></tr></table></figure></li>
<li>已经回退到了之前的版本，又想回到新版本<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查看所有的命令，然后找到新版本提交的 commit_id</span><br><span class="line">git reflog</span><br><span class="line">&#x2F;&#x2F;去到新版本 </span><br><span class="line">git reset --hard commit_id</span><br></pre></td></tr></table></figure></li>
<li>让这个文件回到最近一次git commit或git add时的状态<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout -- readme.txt</span><br></pre></td></tr></table></figure>
<h2 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h2></li>
<li>合并冲突：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;提交的文件如果出现冲突就会出现这种提示</span><br><span class="line">CONFLICT (content): Merge conflict in readme.txt</span><br><span class="line"></span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li>通过git status 查看冲突文件</li>
<li>Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容</li>
<li>修改文件，保存，再次提交即可</li>
<li>通过git log查看分支合并的情况</li>
<li>&lt;&lt;&lt;&lt;&lt;&lt;&lt;标记冲突开始，后面跟的是当前分支中的内容。<br>HEAD指向当前分支末梢的提交。<br>=======之后，&gt;&gt;&gt;&gt;&gt;&gt;&gt;之前是要merge过来的另一条分支上的代码。&gt;&gt;&gt;&gt;&gt;&gt;&gt;之后的dev是该分支的名字。</li>
</ol>
<h2 id="公共操作"><a href="#公共操作" class="headerlink" title="公共操作"></a>公共操作</h2><ul>
<li>把本地git仓库恢复为普通文件夹<ol>
<li>删除这个目录里的隐藏文件夹.git</li>
<li>rm -rf .git/</li>
</ol>
</li>
<li>测试Github和Gitlab是否添加了SSH<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@gitlab.com</span><br></pre></td></tr></table></figure></li>
<li>查看未传送到远程代码库的提交描述/说明（commit到了本地仓库，但是没有push到远程仓库的内容的提交说明）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git cherry -v origin thcdev&#x2F;&#x2F;后面要加push到的远程仓库名</span><br></pre></td></tr></table></figure></li>
<li>查看远程库信息<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure></li>
<li>清屏操作<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reset</span><br></pre></td></tr></table></figure></li>
<li>git log之后退出<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">按 Q 即可</span><br></pre></td></tr></table></figure></li>
<li>找到历史提交的commit id<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --pretty&#x3D;oneline --abbrev-commit</span><br></pre></td></tr></table></figure>
<h2 id="Git-命令行常用命令"><a href="#Git-命令行常用命令" class="headerlink" title="Git 命令行常用命令"></a>Git 命令行常用命令</h2></li>
<li>进入当前路径的dev<blockquote>
<p>cd dev</p>
</blockquote>
</li>
<li>返回上级目录<blockquote>
<p>cd ..</p>
</blockquote>
</li>
<li>返回上次目录<blockquote>
<p>cd</p>
</blockquote>
</li>
<li>查看当前目录<blockquote>
<p>pwd</p>
</blockquote>
</li>
<li>列出当前目录内容<blockquote>
<p>ls    </p>
</blockquote>
</li>
<li>新建一个名为dev的目录<blockquote>
<p>mkdir dev</p>
</blockquote>
</li>
<li>强制删除，不管目录为不为空<blockquote>
<p>rm -rf dev  </p>
</blockquote>
</li>
</ul>
<h2 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h2><ol>
<li><p>git解决 error: you need to resolve your current index first<br>解决方法：</p>
<blockquote>
<p>回退到merge前，再切换分支即可<br> git reset –merge </p>
</blockquote>
</li>
<li><p>Repository not found</p>
<blockquote>
<p>git push -u origin master<br> ERROR: Repository not found.<br> fatal: The remote end hung up unexpectedly</p>
</blockquote>
<p> 解决：git remote add origin 仓库地址</p>
</li>
<li><p>fatal: remote origin already exists.</p>
<blockquote>
<p>git remote rm origin<br> git remote add origin 仓库地址</p>
</blockquote>
</li>
<li><p>! [rejected]        master -&gt; master (fetch first) error: failed to push some refs to ‘git@github.com:地址.git’</p>
<blockquote>
<p>git pull –rebase origin master<br>git push origin master</p>
</blockquote>
</li>
</ol>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>喜欢</title>
    <url>/3382589965/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Welcome to my blog, enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="7514a2b08ce8db6e3a9327a0342279f5475fa81478f49e8cd1af80c13677e09c">ff8a00bc2b773ee72a7d2b8a16acae550493a386d5d2acdd1c8f08d5cae827999b851c31aed125fc18eb8924c9bc09ce4049352f509643427f6a226788fc18f5d15e9002e100a5af9d137447310eb5e7455bce12835fa948a85f3cadf00b2976fbf4f7730cb59909265ebbe0012e83633f8f941acfb6bd8e22116e16def9a0098e32fcd9e3f2b7107a9fba6b4b4f82f685958c08ae50a01520e99191d78ad2b3a6275c6c3ebe8820e662fd667e0b2aead8584a5b96634dab2220681fae3072a09d973fc97be35817d6c4eb3638eae43fe6d8eb2713e856d332bceb13c69f1b0f8b0521f2be7a865ae2b9fc440e794d0390e463db254fb728ea8146103340fe73c028ae1062eef4895247130fa84b4ca036c18f0416879c36c753b87579f0f4df3839e03573dbb279d26cc9f6c228ff05e10d49633ff54e7ddd336065e423e8ba3f099f778844ee0dc397358d7cb9fbaea79bfb81b0db8b6e044f739de58d4bb613ee7c3825512e514f34ac8b29e1015d012df281b56da66f6fad7b1674552aece3efac9496b1f9337714af6e6a0dd88d93f7005c5b5da9153991b65572841e93ac2a4d37eb506b860cca0ddbbdff2110b06933127358c0b560546e2f9dd27879281c7342045e5a3f9a6bb974241154842eecc016ddb3c72ae4e762f97e3071dd577c5e9fab9489ad01f800016821a7b7f18a01300d717516851b91f9019a94248f5ae7465527f1ff0b4e8accc56f1fc86f157f918096b8c9115116e1a8752caf38594434658f5782a8356b7e6467724a179e14176f6db6363bddb22c347298a86136485c1e394f42a46ead7c79aace73561de427525d700ffcc9359c9881ee5401fea7bf831e768e39c8e2b15a127a85d802d5a30f85a9559e198372ab1bfcb05d1f6f893757f000428e6c9f4f4c439acb6ad93be0ea0aaafb78f7c898594e4030ad70dcb23519f810c0547346f3e75b823585d3f3e2ffb5af13f385972210d6614e282ec5d4de2d2bdd31b288f949f79e1086658efa82592bb4fb4ccfb618049e05abd0228336a0b88e3a7c2d0d091d9858a3b7bf35e88438761619cbaada38431355520d8474c611a783748161b75d52ddc176ef3107c9566e1b0e6b0f71fdbafea40a5cdbe9ca790caa3281832f80867c22847577cd30bfdd0b55dd7d88d84472de9404eadb694b4af7f74f44bf840c2eab9b03b2f49374fb4379f7a2a92bd012ba5108a80405a73fbf1746fb1ba484d2559639eb3353818b63c3a7ea979eed58e3f8b9e4c43205f953d6d5acfb28bc7e01562a5e0b22bf9c069be208536a0a1fa936df1604204c053885d932180db903dfe007ff9ad48e52c9859f6c7a70a6f7f6f2ec259fa4cdaf91727805ebd01c8b9cedbb93ed80843fc4076d2fd4bd64b650382eeb362f1532c5ecc12df07260cfbc76425dc05ee811b7456119cf1ab61fda2692dad8e13c063812450661c814408689adb4c81731905925ef48470e3be321094db4eae8001208487cfc72fd5e1c461c9ad2ba3fe14278e769b7e97d74232d179a005b3772ee709f75d5ac869d3ebc4229ebbbf3e6ba0ca4259cd08832fe2a54ae142eea127f7f603ee20831bf66f869ecb295c5f48893f525d25b27c69aec8e1879f5e6a4cd5402cb502eee4a3361344669bf0716367018fcb6186baaac91ae72a6dbd4800bbf4ecd837b8ab5f4cfdb3344b5531ec163449815e6b65ea3d83ee7ac306f04bb942434bbb5df63ff1873b26327235e060e92311d6fa83177cea98bd7e5d28c2508d25b811e082a7c611cd8dd14536709fbadb2fe37b2b88808cafa0adf64441e28314c343bb093538fe7f03320230396c975951fd6df</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>从前慢</title>
    <url>/3832130555/</url>
    <content><![CDATA[<br>
<br>
<a id="more"></a>
记得早先少年时<br>
大家诚诚恳恳<br>
说一句 是一句<br>
清早上火车站<br>
长街黑暗无行人<br>
卖豆浆的小店冒着热气<br>
从前的日色变得慢<br>
车，马，邮件都慢<br>
一生只够爱一个人<br>
从前的锁也好看<br>
钥匙精美有样子<br>
你锁了 人家就懂了<br>

<style>
  .article-entry {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 10rem;
    color: lightblue;
  }
  #reward-btn {
    display: none;
  }
  .article-header .article-title{
    padding-left: 0rem;
    padding-right: 1.5rem;
  }
</style>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑强制删除文件</title>
    <url>/2305721189/</url>
    <content><![CDATA[<br>
<a id="more"></a>

<ol>
<li><p>本地新建txt文件:</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DEL&#x2F;FA&#x2F;Q \\?\%1</span><br><span class="line">RD &#x2F;S &#x2F;Q \\?\%1</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存为bat文件</p>
</li>
<li><p>将需要删除的文件拖入文件处，即可🙃</p>
</li>
</ol>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>电脑知识</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot+Vue前后端分离简易开发</title>
    <url>/483040631/</url>
    <content><![CDATA[<p>本文主要是学习于B站的Spring Boot+Vue前后端分离开发，技术主要采用Springboot + Vue + Element Ui，来完成基本的数据表格操作。<br><br></p>
<a id="more"></a>
<h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="https://img-blog.csdnimg.cn/20200224115222746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200221153757210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200221153707819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./plugins/axios'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">'./store'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./plugins/element.js'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//element-ui的全部组件</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span></span><br><span class="line"><span class="comment">//element-ui的css</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'element-ui/lib/theme-chalk/index.css'</span></span><br><span class="line"><span class="comment">//使用elementUI</span></span><br><span class="line">Vue.use(ElementUI)</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure>

<h4 id="router"><a href="#router" class="headerlink" title="router"></a>router</h4><p><strong>index.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> List <span class="keyword">from</span> <span class="string">'../views/PageOne'</span></span><br><span class="line"><span class="keyword">import</span> Add <span class="keyword">from</span> <span class="string">'../views/PageTwo'</span></span><br><span class="line"><span class="keyword">import</span> Update <span class="keyword">from</span> <span class="string">'../views/PageThree.vue'</span></span><br><span class="line"><span class="keyword">import</span> PageFour <span class="keyword">from</span> <span class="string">'../views/PageFour.vue'</span></span><br><span class="line"><span class="keyword">import</span> Index <span class="keyword">from</span> <span class="string">'../views/index.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [&#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    name: <span class="string">"用户管理"</span>,</span><br><span class="line">    component: Index,</span><br><span class="line">    redirect: <span class="string">"/List"</span>,</span><br><span class="line">    show: <span class="literal">true</span>,</span><br><span class="line">    children: [&#123;</span><br><span class="line">        path: <span class="string">"/List"</span>,</span><br><span class="line">        name: <span class="string">"查询用户"</span>,</span><br><span class="line">        component: List</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"/Add"</span>,</span><br><span class="line">        name: <span class="string">"添加用户"</span>,</span><br><span class="line">        component: Add</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"/update"</span>,</span><br><span class="line">        name: <span class="string">"修改用户"</span>,</span><br><span class="line">        component: Update</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/authority"</span>,</span><br><span class="line">    name: <span class="string">"权限管理"</span>,</span><br><span class="line">    <span class="comment">// 利用v-show隐藏此模块</span></span><br><span class="line">    show: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  base: process.env.BASE_URL,</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure>

<h4 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a>App.vue</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.el-header</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#b3c0d1</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">  line-height: 60px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.el-aside</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> item = &#123;</span></span><br><span class="line"><span class="actionscript">      date: <span class="string">"2016-05-02"</span>,</span></span><br><span class="line"><span class="actionscript">      name: <span class="string">"王小虎"</span>,</span></span><br><span class="line"><span class="actionscript">      address: <span class="string">"上海市普陀区金沙江路 1518 弄"</span></span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      tableData: <span class="built_in">Array</span>(<span class="number">20</span>).fill(item)</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="views"><a href="#views" class="headerlink" title="views"></a>views</h4><p><strong>index.vue</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 构建整个页面框架 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-container</span> <span class="attr">style</span>=<span class="string">"height: 500px; border: 1px solid #eee"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 构建左侧菜单 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-aside</span> <span class="attr">width</span>=<span class="string">"200px"</span> <span class="attr">style</span>=<span class="string">"background-color: rgb(238, 241, 246)"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 左侧菜单内容，</span></span><br><span class="line"><span class="comment">        常用属性 ：default-openeds默认展开的菜单，通过菜单的index直来关联</span></span><br><span class="line"><span class="comment">        default-active：默认选中的菜单，通过菜单的index值来关联--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;el-menu :default-openeds="['1', '3']"&gt;</span></span><br><span class="line"><span class="comment">          可展开的菜单，常用属性，index：菜单的下标，文本类型，不能是数值类型</span></span><br><span class="line"><span class="comment">          &lt;el-submenu index="1"&gt;</span></span><br><span class="line"><span class="comment">            对应el-submenu的菜单名</span></span><br><span class="line"><span class="comment">            &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="comment">              i：设置菜单图标，通过class属性实则. 如:el-icon-menu,el-icon-message,el-icon-setting</span></span><br><span class="line"><span class="comment">              &lt;i class="el-icon-message"&gt;&lt;/i&gt;导航一</span></span><br><span class="line"><span class="comment">            &lt;/template&gt;</span></span><br><span class="line"><span class="comment">            菜单的子节点,不可再展开,常用属性. index:菜单的下标,文本类型,不能是数值类型</span></span><br><span class="line"><span class="comment">            &lt;el-menu-item index="1-1"&gt;选项1&lt;/el-menu-item&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-menu-item index="1-2"&gt;选项2&lt;/el-menu-item&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-submenu index="1-3"&gt;</span></span><br><span class="line"><span class="comment">              &lt;template slot="title"&gt;</span></span><br><span class="line"><span class="comment">                &lt;i class="el-icon-message"&gt;&lt;/i&gt;选项3</span></span><br><span class="line"><span class="comment">              &lt;/template&gt;</span></span><br><span class="line"><span class="comment">              &lt;el-menu-item index="1-3-1"&gt;选项3-1&lt;/el-menu-item&gt;</span></span><br><span class="line"><span class="comment">            &lt;/el-submenu&gt;</span></span><br><span class="line"><span class="comment">          &lt;/el-submenu&gt;</span></span><br><span class="line"><span class="comment">        &lt;/el-menu&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- menu 与 router的绑定：</span></span><br><span class="line"><span class="comment">          1.&lt;el-menu&gt;标签添加router属性</span></span><br><span class="line"><span class="comment">          2.在页面中添加&lt;router-view&gt;标签，它是一个容器，动态渲染你选择的router</span></span><br><span class="line"><span class="comment">          3.&lt;el-menu-item&gt;标签的index值就是要跳转的router</span></span><br><span class="line"><span class="comment">           --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">router</span> <span class="attr">:default-openeds</span>=<span class="string">"['0', '1']"</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- Custom elements in iteration require 'v-bind:key' directives. --&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- 在el-menu-item 及el-submenu 标签上面，必须要加上 index属性，如果没有则报错。 </span></span><br><span class="line"><span class="comment">          :key属性为了避免点击菜单全部展开--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-submenu</span> <span class="attr">v-for</span>=<span class="string">"(item,index)  in $router.options.routes"</span> <span class="attr">:index</span>=<span class="string">"index + ''"</span> <span class="attr">:key</span>=<span class="string">"index + ''"</span> <span class="attr">v-show</span>=<span class="string">"item.show"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-message"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>&#123;&#123;index&#125;&#125;-&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">v-for</span>=<span class="string">"(item2,index2) in item.children"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">:class</span>=<span class="string">"$route.path == item2.path ? 'isActive':''"</span> <span class="attr">:index</span>=<span class="string">"item2.path"</span> <span class="attr">v-bind:key</span>=<span class="string">"index + '-' + index2"</span>&gt;</span></span><br><span class="line">              <span class="comment">&lt;!-- &lt;router-link :to="/路径"&gt;&lt;/router-link&gt; --&gt;</span></span><br><span class="line">              &#123;&#123;item2.name&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-submenu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-header</span> <span class="attr">style</span>=<span class="string">"text-align: right; font-size: 12px"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-setting"</span> <span class="attr">style</span>=<span class="string">"margin-right: 15px"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-dropdown-menu</span> <span class="attr">slot</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-dropdown-item</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>王小虎<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 构建页面主体内容 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- &lt;el-table :data="tableData"&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-table-column prop="date" label="日期" width="140"&gt;&lt;/el-table-column&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-table-column prop="name" label="姓名" width="120"&gt;&lt;/el-table-column&gt;</span></span><br><span class="line"><span class="comment">            &lt;el-table-column prop="address" label="地址"&gt;&lt;/el-table-column&gt;</span></span><br><span class="line"><span class="comment">          &lt;/el-table&gt;--&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.isActive</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line">  color: aquamarine;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>PageOne.vue-页面展示数据表</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 必须都套在一个div里 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">"tableData"</span> <span class="attr">border</span> <span class="attr">style</span>=<span class="string">"width: 50%"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span> <span class="attr">prop</span>=<span class="string">"id"</span> <span class="attr">label</span>=<span class="string">"编号"</span> <span class="attr">width</span>=<span class="string">"150"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"name"</span> <span class="attr">label</span>=<span class="string">"姓名"</span> <span class="attr">width</span>=<span class="string">"120"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"gender"</span> <span class="attr">label</span>=<span class="string">"性别"</span> <span class="attr">width</span>=<span class="string">"120"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">"age"</span> <span class="attr">label</span>=<span class="string">"年龄"</span> <span class="attr">width</span>=<span class="string">"120"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span>=<span class="string">"right"</span> <span class="attr">label</span>=<span class="string">"操作"</span> <span class="attr">width</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot-scope</span>=<span class="string">"scope"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"edit(scope.row)"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"small"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"deleteUserById(scope.row)"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"small"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分页 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- :total 默认每页十条记录数，总记录数是100，就是十页</span></span><br><span class="line"><span class="comment">    :page-size: 每页数据量(即记录数)，默认10--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">      <span class="attr">background</span></span></span><br><span class="line"><span class="tag">      <span class="attr">layout</span>=<span class="string">"prev, pager, next"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page-size</span>=<span class="string">"pageSize"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:total</span>=<span class="string">"total"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">current-change</span>=<span class="string">"page"</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"PageOne"</span>,</span></span><br><span class="line">  methods: &#123;</span><br><span class="line">    edit(row) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$router.push(&#123;</span></span><br><span class="line"><span class="actionscript">        path: <span class="string">'/update'</span>,</span></span><br><span class="line">        query: &#123;</span><br><span class="line">          id: row.id</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    deleteUserById(row) &#123;</span><br><span class="line">      alert(row.id)</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line">      axios</span><br><span class="line"><span class="actionscript">        .delete(<span class="string">"http://localhost:8181/user/delete?id="</span> + row.id)</span></span><br><span class="line"><span class="actionscript">        .then(<span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          alert(<span class="string">"成功"</span>);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">window</span>.location.reload();</span></span><br><span class="line"><span class="javascript">        &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">          alert(<span class="string">"失败"</span>)</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    page(currentPage) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line">      axios</span><br><span class="line"><span class="actionscript">        .get(<span class="string">"http://localhost:8181/user/findAll/"</span> + (currentPage - <span class="number">1</span>) + <span class="string">"/6"</span>)</span></span><br><span class="line"><span class="actionscript">        .then(<span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line">          _this.tableData = resp.data.content;</span><br><span class="line">          _this.pageSize = resp.data.size;</span><br><span class="line">          _this.total = resp.data.totalElements;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      pageSize: 1,</span><br><span class="line">      total: 17,</span><br><span class="line">      tableData: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">    axios.get(<span class="string">"http://localhost:8181/user/findAll/0/5"</span>).then(<span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span></span><br><span class="line">      _this.tableData = resp.data.content;</span><br><span class="line">      _this.pageSize = resp.data.size;</span><br><span class="line">      _this.total = resp.data.totalElements;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>PageTwo-页面添加功能</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref:不能少，相当于form表单的name属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">label-width</span>=<span class="string">"100px"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"demo-ruleForm"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户姓名"</span> <span class="attr">prop</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户性别"</span> <span class="attr">prop</span>=<span class="string">"gender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.gender"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户年龄"</span> <span class="attr">prop</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.age"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"submitForm('ruleForm')"</span>&gt;</span>立即创建<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"resetForm('ruleForm')"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"test()"</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"PageTwo"</span>,</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      ruleForm: &#123;</span><br><span class="line"><span class="actionscript">        name: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        age: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        gender: <span class="string">""</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// region: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date1: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date2: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// delivery: false,</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// type: [],</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// resource: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// desc: ""</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="comment">// 定义rules对象，在rules对象中设置表单各个选项的校验规则：</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// trigger：触发事件，如 blur失焦</span></span></span><br><span class="line">      rules: &#123;</span><br><span class="line">        id: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户编号"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">1</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 1 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        name: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户名称"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">3</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 3 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        region: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请选择活动区域"</span>, trigger: <span class="string">"change"</span> &#125;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    test() &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 不能拼接 "内容" +，会变成Object</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.ruleForm);</span></span><br><span class="line">    &#125;,</span><br><span class="line">    submitForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span><br><span class="line">        if (valid) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// axios.post('http://localhost:8181/user/add', this.ruleForm)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   .then(function (response) &#123;</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//     console.log(response);</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   &#125;)</span></span></span><br><span class="line">          axios(&#123;</span><br><span class="line"><span class="actionscript">            url: <span class="string">"http://localhost:8181/user/add"</span>,</span></span><br><span class="line">            params: &#123;</span><br><span class="line"><span class="actionscript">              name: <span class="keyword">this</span>.ruleForm.name,</span></span><br><span class="line"><span class="actionscript">              age: <span class="keyword">this</span>.ruleForm.age,</span></span><br><span class="line"><span class="actionscript">              gender: <span class="keyword">this</span>.ruleForm.gender</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            method: <span class="string">"post"</span></span></span><br><span class="line"><span class="javascript">          &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">            _this.$alert(<span class="string">"《"</span> + _this.ruleForm.name + <span class="string">"》添加成功"</span>, <span class="string">"消息"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">              confirmButtonText: <span class="string">"确定"</span>,</span></span><br><span class="line"><span class="javascript">              callback: <span class="function"><span class="params">action</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                _this.$router.push(<span class="string">"/List"</span>);</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"error submit!!"</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    resetForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$refs[formName].resetFields();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>PageThree-页面修改功能</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ref:不能少，相当于form表单的name属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:rules</span>=<span class="string">"rules"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">"ruleForm"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">label-width</span>=<span class="string">"100px"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"demo-ruleForm"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户编号"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.id"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户姓名"</span> <span class="attr">prop</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户性别"</span> <span class="attr">prop</span>=<span class="string">"gender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.gender"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"用户年龄"</span> <span class="attr">prop</span>=<span class="string">"age"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"ruleForm.age"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> @<span class="attr">click</span>=<span class="string">"submitForm('ruleForm')"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"resetForm('ruleForm')"</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"PageThree"</span>,</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      ruleForm: &#123;</span><br><span class="line"><span class="actionscript">        id: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        age: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">        gender: <span class="string">""</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// region: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date1: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// date2: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// delivery: false,</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// type: [],</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// resource: "",</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// desc: ""</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="comment">// 定义rules对象，在rules对象中设置表单各个选项的校验规则：</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// trigger：触发事件，如 blur失焦</span></span></span><br><span class="line">      rules: &#123;</span><br><span class="line">        id: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户编号"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">1</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 1 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        name: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请输入用户名称"</span>, trigger: <span class="string">"blur"</span> &#125;,</span></span><br><span class="line"><span class="actionscript">          &#123; min: <span class="number">2</span>, max: <span class="number">5</span>, message: <span class="string">"长度在 3 到 5 个字符"</span>, trigger: <span class="string">"blur"</span> &#125;</span></span><br><span class="line">        ],</span><br><span class="line">        region: [</span><br><span class="line"><span class="actionscript">          &#123; required: <span class="literal">true</span>, message: <span class="string">"请选择活动区域"</span>, trigger: <span class="string">"change"</span> &#125;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    submitForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.$refs[formName].validate(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span><br><span class="line">        if (valid) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// axios.post('http://localhost:8181/user/add', this.ruleForm)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   .then(function (response) &#123;</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//     console.log(response);</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//   &#125;)</span></span></span><br><span class="line">          axios(&#123;</span><br><span class="line"><span class="actionscript">            url: <span class="string">"http://localhost:8181/user/update"</span>,</span></span><br><span class="line">            params: &#123;</span><br><span class="line"><span class="actionscript">              id: <span class="keyword">this</span>.ruleForm.id,</span></span><br><span class="line"><span class="actionscript">              name: <span class="keyword">this</span>.ruleForm.name,</span></span><br><span class="line"><span class="actionscript">              age: <span class="keyword">this</span>.ruleForm.age,</span></span><br><span class="line"><span class="actionscript">              gender: <span class="keyword">this</span>.ruleForm.gender</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            method: <span class="string">"put"</span></span></span><br><span class="line"><span class="javascript">          &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">            _this.$alert(<span class="string">"《"</span> + _this.ruleForm.name + <span class="string">"》修改成功"</span>, <span class="string">"消息"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">              confirmButtonText: <span class="string">"确定"</span>,</span></span><br><span class="line"><span class="javascript">              callback: <span class="function"><span class="params">action</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">                _this.$router.push(<span class="string">"/List"</span>);</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"error submit!!"</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    resetForm(formName) &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">this</span>.$refs[formName].resetFields();</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> _this = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">    alert(<span class="keyword">this</span>.$route.query.id);</span></span><br><span class="line">    axios</span><br><span class="line"><span class="actionscript">      .get(<span class="string">"http://localhost:8181/user/findById/"</span> + <span class="keyword">this</span>.$route.query.id)</span></span><br><span class="line"><span class="actionscript">      .then(<span class="function"><span class="keyword">function</span><span class="params">(response)</span> </span>&#123;</span></span><br><span class="line">        _this.ruleForm = response.data;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><p><strong>UserInfo.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置自增</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>UserInfoRepository.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.demo.entity.UserInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserInfoRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">UserInfo</span>, <span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">//右键 goto，创建测试类</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>UserInfoController.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.demo.entity.UserInfo;</span><br><span class="line"><span class="keyword">import</span> cn.blue.demo.repository.UserInfoRepository;</span><br><span class="line"><span class="keyword">import</span> org.apache.catalina.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.Page;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.domain.PageRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserInfoRepository userInfoRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page 当前页数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size 每页显示数据量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户列表信息；倘若让其直接通过访问user就请求此方法就是404</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll/&#123;page&#125;/&#123;size&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Page&lt;UserInfo&gt; <span class="title">findAll</span><span class="params">(@PathVariable(<span class="string">"page"</span>)</span> Integer page, @<span class="title">PathVariable</span><span class="params">(<span class="string">"size"</span>)</span> Integer size) </span>&#123;</span><br><span class="line">        PageRequest pageRequest = PageRequest.of(page, size);</span><br><span class="line">        <span class="keyword">return</span> userInfoRepository.findAll(pageRequest);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/add"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        UserInfo user = userInfoRepository.save(userInfo);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"findById/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserInfo <span class="title">findById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userInfoRepository.findById(id).get();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">update</span><span class="params">(UserInfo userInfo)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(userInfoRepository.save(userInfo) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/delete"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">delete</span><span class="params">(@RequestParam(<span class="string">"id"</span>)</span> Integer id) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            UserInfo userInfo = <span class="keyword">new</span> UserInfo();</span><br><span class="line">            userInfo.setId(id);</span><br><span class="line">            userInfoRepository.delete(userInfo);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>配置类CorsConfig: 解决跨域问题</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.demo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/2/11</span></span><br><span class="line"><span class="comment"> * 解决跨域的问题</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">"/**"</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">"*"</span>)</span><br><span class="line">                .allowedMethods(<span class="string">"GET"</span>, <span class="string">"HEAD"</span>, <span class="string">"POST"</span>, <span class="string">"PUT"</span>, <span class="string">"DELETE"</span>, <span class="string">"OPTIONS"</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">"*"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>pom.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Vue实战</category>
      </categories>
      <tags>
        <tag>Element Ui</tag>
        <tag>Vue</tag>
        <tag>Springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue学习笔记</title>
    <url>/1901149387/</url>
    <content><![CDATA[<p>系统学习前端Vue框架，笔记记录于B站的why老师，<a href="https://www.bilibili.com/video/av89760569" target="_blank" rel="noopener">具体视频链接</a>,在此感谢老师的悉心授课。<a href="https://github.com/onecoderly/vue.js" target="_blank" rel="noopener">github笔记地址</a><br><br></p>
<a id="more"></a>

<h2 id="初始化Vue"><a href="#初始化Vue" class="headerlink" title="初始化Vue"></a>初始化Vue</h2><h3 id="初始Vue"><a href="#初始Vue" class="headerlink" title="初始Vue"></a>初始Vue</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"../js/vue.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div id="hi"&gt;Hello &#123;&#123;name&#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"movie"</span>&gt;</span><br><span class="line">      &lt;ul&gt;</span><br><span class="line">          &lt;li v-<span class="keyword">for</span>=<span class="string">"item in movies"</span>&gt;</span><br><span class="line">              &#123;&#123;item&#125;&#125;</span><br><span class="line">          &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/u</span>l&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script&gt;</span></span><br><span class="line"><span class="regexp">      const hi = new Vue(&#123;</span></span><br><span class="line"><span class="regexp">          el: "#hi",</span></span><br><span class="line"><span class="regexp">          data: &#123;</span></span><br><span class="line"><span class="regexp">              name: 'Vue.js'</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      let movie = new Vue(&#123;</span></span><br><span class="line"><span class="regexp">          el: '.movie',</span></span><br><span class="line"><span class="regexp">          data: &#123;</span></span><br><span class="line"><span class="regexp">              movies: ["星际穿越", '大话西游', '海贼王之黄金城', '复仇者联盟']</span></span><br><span class="line"><span class="regexp">              /</span><span class="regexp">/ 注意：可以通过movie.movies.push('盗梦空间')</span></span><br><span class="line"><span class="regexp">          &#125;</span></span><br><span class="line"><span class="regexp">      &#125;)</span></span><br><span class="line"><span class="regexp">  &lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="简易计数器"><a href="#简易计数器" class="headerlink" title="简易计数器"></a>简易计数器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- view --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"count"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button v-on:click="counter++"&gt;+&lt;/button&gt;</span></span><br><span class="line"><span class="comment">    &lt;button v-on:click="counter--"&gt;-&lt;/button&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>原因是你的body中的div中没有设置id，vue没有绑定<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>解决：body中加 div id="app" <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>双向绑定：view，model，ViewModel<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// proxy: model</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line">        counter: 0</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> count = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el: <span class="string">"#count"</span>,</span></span><br><span class="line">        data: obj,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            add: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.counter++;</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            sub: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.counter--;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Vue中的MVVM"><a href="#Vue中的MVVM" class="headerlink" title="Vue中的MVVM"></a>Vue中的MVVM</h3><p><strong>MVVM简介</strong><br>&emsp;&emsp;MVVM 是Model-View-ViewModel 的缩写，它是一种基于前端开发的架构模式，其核心是提供对View 和 ViewModel 的双向数据绑定，这使得ViewModel 的状态改变可以自动传递给 View，即所谓的数据双向绑定。<br>&emsp;&emsp;Vue.js 是一个提供了 MVVM 风格的双向数据绑定的 Javascript 库，专注于View 层。它的核心是 MVVM 中的 VM，也就是 ViewModel。 ViewModel负责连接 View 和 Model，保证视图和数据的一致性，这种轻量级的架构让前端开发更加高效、便捷。</p>
<p><strong>MVVM模型</strong><br><img src="https://img-blog.csdnimg.cn/20200209183429664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>MVVM拆开来即为Model-View-ViewModel，有View，ViewModel，Model三部分组成。</p>
<ul>
<li>View层:是视图、模版，负责将数据模型转化为UI展现出来。</li>
<li>Model层:是模型、数据，可以在Model层中定义数据修改和操作的业务逻辑。</li>
<li>ViewModel层:View层和Model层并没有直接联系，而是通过ViewModel层进行交互。ViewModel层通过双向数据绑定将View层和Model层连接了起来，使得View层和Model层的同步工作完全是自动的。</li>
</ul>
<p><strong>Vue.js中mvvm的体现</strong><br>&emsp;&emsp;Vue.js的实现方式，对数据（Model）进行劫持，当数据变动时，数据会出发劫持时绑定的方法，对视图进行更新。<br><img src="https://img-blog.csdnimg.cn/20200209183757872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>实例分析如下：<br><img src="https://img-blog.csdnimg.cn/20200209184419710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><strong>Vue.js关于双向数据绑定的一些实现细节</strong></p>
<p>&emsp;&emsp;vue是采用Object.defineProperty的getter和setter，并结合观察者模式来实现数据绑定的。当把一个普通的javascript对象传给Vue实例来作为它的data选项时，Vue将遍历它的属性，用Object.defineProperty将它们转为getter/setter。用户看不到getter/setter，但是在内部它们让Vue追踪依赖。在属性被访问和修改时通知变化。<br><img src="https://img-blog.csdnimg.cn/20200209184625254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<ul>
<li>Observer相当于Model层观察vue实例中的data数据，当数据发生变化时，通知Watcher订阅者。</li>
<li>Compile指令解析器位于View层，初始化View的视图，将数据变化与更新函数绑定，传给Watcher订阅者。</li>
<li>Watcher是整个模型的核心，对应ViewModel层，连接Observer和Compile。所有的Watchers存于Dep订阅器中，Watcher将Observer监听到的数据变化对应相应的回调函数，处理数据，反馈给View层更新界面视图。</li>
<li>Dep消息订阅器，内部维护了一个数组，用来收集订阅者（watcher）,数据变动触发notify函数，再调用订阅者的update方法。</li>
</ul>
<h3 id="基本模板语法"><a href="#基本模板语法" class="headerlink" title="基本模板语法"></a>基本模板语法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-attr">[v-cloak]</span> &#123;</span></span><br><span class="line">      display: none !important;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 让未被编译的重新编译加载 </span></span><br><span class="line"><span class="comment">    Vue加入了延缓响应的指令v-cloak,在与css:[v-cloak] &#123; display: none &#125; 的配合下，</span></span><br><span class="line"><span class="comment">    可以隐藏未编译 Mustache 的标签直到实例准备完毕，v-cloak属性才会被自动去除，对应的标签也才可见了</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h4</span> &gt;</span>Hello &#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        count: <span class="string">'v-cloak'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;,</span><br><span class="line">      beforeMount () &#123;</span><br><span class="line"><span class="actionscript">        alert(<span class="string">"有趣"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;, 1000);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="动态绑定属性"><a href="#动态绑定属性" class="headerlink" title="动态绑定属性"></a>动态绑定属性</h2><h3 id="class的绑定"><a href="#class的绑定" class="headerlink" title="class的绑定"></a>class的绑定</h3><p><strong>传给 <code>v-bind:class</code> 一个对象，以动态地切换 class(语法糖：’:表示’)</strong></p>
<blockquote>
<p>根据isActive的true,false变化，动态绑定单个class</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"&#123; active: isActive==true &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>计算属性的方式绑定class</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div :<span class="class"><span class="keyword">class</span></span>=<span class="string">"classObject"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">data: &#123;</span></span><br><span class="line"><span class="regexp">  isActive: true,</span></span><br><span class="line"><span class="regexp">  error: null</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br><span class="line"><span class="regexp">computed: &#123;</span></span><br><span class="line"><span class="regexp">  classObject: function () &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      active: this.isActive &amp;&amp; !this.error,	/</span><span class="regexp">/isActive为true，且error不为null</span></span><br><span class="line"><span class="regexp">      'text-danger': this.error &amp;&amp; this.error.type === 'fatal'</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/error为null且this.error.type === 'fatal'</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>数组的方式绑定class</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;div v-bind:<span class="class"><span class="keyword">class</span></span>=<span class="string">"[activeClass, errorClass]"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">data: &#123;</span></span><br><span class="line"><span class="regexp">  activeClass: 'active',</span></span><br><span class="line"><span class="regexp">  errorClass: 'text-danger'</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">渲染为：</span></span><br><span class="line"><span class="regexp">&lt;div class="active text-danger"&gt;&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>

<p><strong>三元表达式动态切换class(推荐)</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"[isActive ? activeClass : '', errorClass]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="style的绑定"><a href="#style的绑定" class="headerlink" title="style的绑定"></a>style的绑定</h3><p>v-bind:style 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。CSS 属性名可以用驼峰式 (camelCase) 或短横线分隔 (kebab-case，记得用单引号括起来) 来命名：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">"&#123; color: activeColor, fontSize: fontSize + 'px' &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">data: &#123;</span><br><span class="line">  activeColor: 'red',</span><br><span class="line">  fontSize: 30</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接绑定到一个样式对象通常更好，这会让模板更清晰：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">"styleObject"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">data: &#123;</span><br><span class="line">  styleObject: &#123;</span><br><span class="line">    color: 'red',</span><br><span class="line">    fontSize: '13px'</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>v-bind:style 的数组语法可以将多个样式对象应用到同一个元素上：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">"[baseStyles, overridingStyles]"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        fisrtName: <span class="string">'Lom'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'Name'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      computed: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// fullName: function()&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     return this.fisrtName + ' ' + this.lastName;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// fullName: &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   get: function () &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     return this.fisrtName + ' ' + this.lastName;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//   &#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 底层方法</span></span></span><br><span class="line">        fullName: &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span> <span class="params">(newValue)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"---------"</span>, newValue);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//split() 方法用于把一个字符串分割成字符串数组。</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> value = newValue.split(<span class="string">' '</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.fisrtName = value[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.lastName = value[<span class="number">1</span>];</span></span><br><span class="line">          &#125;,</span><br><span class="line"><span class="actionscript">          <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="keyword">this</span>.fisrtName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="计算属性和methods的对比"><a href="#计算属性和methods的对比" class="headerlink" title="计算属性和methods的对比"></a>计算属性和methods的对比</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. 通过字符串直接拼接,不美观 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;fisrtName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2. 通过方法：调用方法一次就重新执行一次 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. 通过计算属性：执行一次后，会将此缓存起来，后面在调用会直接有结果显示，不会频繁调用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span> &#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        fisrtName: <span class="string">'Lom'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'Name'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"><span class="actionscript">        getFullName: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"fullName"</span>);</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.fisrtName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      computed: &#123;</span><br><span class="line">        fullName: &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"fullName"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="keyword">this</span>.fisrtName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><h3 id="v-on的基本使用"><a href="#v-on的基本使用" class="headerlink" title="v-on的基本使用"></a>v-on的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- v-on语法糖使用：@ --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不需要传参数，故函数的双括号可以省略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"decrement()"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                counter: 0</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                increment()&#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.counter++</span></span><br><span class="line">                &#125;,</span><br><span class="line">                decrement()&#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.counter--</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-on的参数问题"><a href="#v-on的参数问题" class="headerlink" title="v-on的参数问题"></a>v-on的参数问题</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不需要传参数，故函数的双括号可以省略 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn0Click"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 不传参数，会显示event对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn1Click()"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 带括号传参数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn2Click(value)"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 定义方法时，我们既需要传参数，又需要获取到event对象，可以通过$event获得event对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btn3Click(value, $event)"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                value: 13</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line">                btn0Click() &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"btn1Click"</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line">                btn1Click() &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"======"</span>, event);</span></span><br><span class="line">                &#125;,</span><br><span class="line">                btn2Click(value) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"------"</span>, value);</span></span><br><span class="line">                &#125;,</span><br><span class="line">                btn3Click(value, event) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"+++++"</span>, value, event);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-on的修饰符"><a href="#v-on的修饰符" class="headerlink" title="v-on的修饰符"></a>v-on的修饰符</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. .stop修饰符的使用：阻止单击事件继续传播给后续定义的函数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"divClick"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">"btnClick"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 2. .prevent修饰符的使用：阻止事件的自带默认行为， --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> @<span class="attr">click.prevent</span>=<span class="string">"submitClick"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 3. .keyup修饰符的使用：当键盘被释放时触发事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup</span>=<span class="string">"keyup"</span>&gt;</span>松开<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> @<span class="attr">click.keyup</span>=<span class="string">"keyup"</span>&gt;</span>鼠标点击松开<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3. .enter修饰符的使用：当键盘按下回车键触发事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.enter</span>=<span class="string">"enter"</span>&gt;</span>回车<span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 4. .once修饰符的使用: 只能触发一次回调 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">"once"</span>&gt;</span>只能点击一次<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"btnClick"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        divClick()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"divClick"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        submitClick()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"submitClick"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        keyup()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"keyup"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        enter()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"enter"</span>)</span></span><br><span class="line">        &#125;,</span><br><span class="line">        once()&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">"once"</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><h3 id="v-if的基本使用"><a href="#v-if的基本使用" class="headerlink" title="v-if的基本使用"></a>v-if的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 从控制台输入 app.isShow = false就可以将其隐藏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'哈哈'</span>,</span></span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-if和v-else的使用"><a href="#v-if和v-else的使用" class="headerlink" title="v-if和v-else的使用"></a>v-if和v-else的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 从控制台输入 app.isShow = false就可以将其隐藏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>当v-if为false的时候，我就开始显示了,我和v-if要紧连着使用<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'哈哈'</span>,</span></span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-if和v-else-if和v-else的使用"><a href="#v-if和v-else-if和v-else的使用" class="headerlink" title="v-if和v-else-if和v-else的使用"></a>v-if和v-else-if和v-else的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"score &gt;= 90"</span>&gt;</span>优秀<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">"score &gt;= 80"</span>&gt;</span>良好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">"score &gt;= 60"</span>&gt;</span>及格<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>不及格<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        score: 99</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="用户登录切换的案例"><a href="#用户登录切换的案例" class="headerlink" title="用户登录切换的案例"></a>用户登录切换的案例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"isShowUserName"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"userName"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userName"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>用户邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户邮箱"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"isShowUser"</span>&gt;</span>切换类型1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"isShowUserName = !isShowUserName"</span>&gt;</span>切换类型2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShowUserName: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        isShowUser() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.isShowUserName = !<span class="keyword">this</span>.isShowUserName</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="用户登录切换的案例-复用的小问题"><a href="#用户登录切换的案例-复用的小问题" class="headerlink" title="用户登录切换的案例(复用的小问题)"></a>用户登录切换的案例(复用的小问题)</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      注意：Vue在进行DOM渲染时，出于性能考虑，会尽可能的复用先前的input框，而不是重新创建元素</span></span><br><span class="line"><span class="comment">      如若我们不需要复用input框，只需要添加一个 key就好，相同的key值才会复用</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"isShowUserName"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- label中的for指向input后，点击label可以将光标聚焦给input框 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"userName"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"userName"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">key</span>=<span class="string">"userName"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>用户邮箱<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户邮箱"</span> <span class="attr">key</span>=<span class="string">"userName"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"isShowUser"</span>&gt;</span>切换类型1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShowUserName: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        isShowUser() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.isShowUserName = !<span class="keyword">this</span>.isShowUserName,</span></span><br><span class="line"><span class="actionscript">          <span class="comment">//第二种方式：使用js将input框值清空</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">"userName"</span>).value = <span class="string">''</span>;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">document</span>.getElementById(<span class="string">"email"</span>).value = <span class="string">''</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-show的使用"><a href="#v-show的使用" class="headerlink" title="v-show的使用"></a>v-show的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      v-if 和 v-show的区别：</span></span><br><span class="line"><span class="comment">      v-if为false的时候，压根不会存在dom里面，</span></span><br><span class="line"><span class="comment">      v-show为false的时候，只是会增加个行内样式：display：none；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      建议：</span></span><br><span class="line"><span class="comment">      如果需要频繁切换的时候，使用v-show，</span></span><br><span class="line"><span class="comment">      只有一次切换时通常使用v-if</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"isShow"</span> <span class="attr">id</span>=<span class="string">"isShow"</span>&gt;</span>V-if<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span> <span class="attr">id</span>=<span class="string">"VShow"</span>&gt;</span>V-show<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h2><h3 id="v-for遍历数组"><a href="#v-for遍历数组" class="headerlink" title="v-for遍历数组"></a>v-for遍历数组</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.简单遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in movies"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.带索引遍历数组 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in movies"</span>&gt;</span>&#123;&#123;index + 1&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.带索引遍历数组，且添加监听事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in movies"</span> @<span class="attr">click</span>=<span class="string">"showIndex(index)"</span>&gt;</span>&#123;&#123;index + 1&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'大话西游'</span>, <span class="string">'星际争霸'</span>, <span class="string">'三傻大闹宝莱坞'</span>]</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        showIndex(index) &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'第'</span> + (index + <span class="number">1</span>) + <span class="string">'个值'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-for遍历对象"><a href="#v-for遍历对象" class="headerlink" title="v-for遍历对象"></a>v-for遍历对象</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.在遍历对象的过程中，如果只是获得一个值，那么获取到的就是整个对象的value值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in obj"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.在遍历对象的同时附带格式：value和key (value, key) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, key) in obj"</span>&gt;</span>&#123;&#123;item&#125;&#125;--&#123;&#123;key&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.在遍历对象的同时附带格式：value和key和index (value, key, index) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(value, key, index) in obj"</span>&gt;</span>&#123;&#123;value&#125;&#125;--&#123;&#123;key&#125;&#125;--&#123;&#123;index+1&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        obj: &#123;</span><br><span class="line">          id: 12,</span><br><span class="line"><span class="actionscript">          name: <span class="string">'Luck'</span>,</span></span><br><span class="line">          height: 1.78</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-for使用过程添加key"><a href="#v-for使用过程添加key" class="headerlink" title="v-for使用过程添加key"></a>v-for使用过程添加key</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。</span></span><br><span class="line"><span class="comment">    1.app.obj.splice(4) 去除数组第五个值</span></span><br><span class="line"><span class="comment">    2.app.obj.splice(3,0,'F') 在数组第四个值的时候添加F</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 不添加key属性: 在数组中间插入数据，需要将插入位置后面的值都后移，效率慢 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 添加key属性：类似于链表一样，我插入中间只需要将两端值的指向指给我，效率高--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in obj"</span> <span class="attr">:key</span>=<span class="string">"item"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        obj: [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>]</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="哪些数组的方法是响应式的"><a href="#哪些数组的方法是响应式的" class="headerlink" title="哪些数组的方法是响应式的"></a>哪些数组的方法是响应式的</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in obj"</span> <span class="attr">:key</span>=<span class="string">"item"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick"</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        obj: [<span class="string">'R'</span>, <span class="string">'C'</span>, <span class="string">'B'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>],</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick() &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">//1.push()方法</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.push('F')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//2.pop()方法，从末尾依次删除</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.pop()</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//3.shift()方法，从头开始依次删除</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.shift()</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//4.unshift()，从头开始依次添加元素</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.unshift('G','L')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//5.splice()，方法向/从数组中添加/删除/替换元素，然后返回被删除的项目。</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//this.obj.splice(4) //去除数组第五个值</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//6.sort()，对数组的元素进行排序</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.sort()</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//7.reverse()，对数组进行反转</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.reverse()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">          <span class="comment">//注意：通过索引值修改数组中的元素方法，不可取，vue不会帮我渲染修改后的值</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj[0] = 'M'</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//解决方法：</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//删除第五个</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.splice(3, 4, 'N')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//①：在第三个位置修改成 N</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// this.obj.splice(2, 1, 'N')</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">//②：建议：Vue自带的修改方法</span></span></span><br><span class="line"><span class="actionscript">          Vue.set(<span class="keyword">this</span>.obj, <span class="number">2</span>, <span class="string">'G'</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="对遍历出的列表，点击后对应的能变红"><a href="#对遍历出的列表，点击后对应的能变红" class="headerlink" title="对遍历出的列表，点击后对应的能变红"></a>对遍历出的列表，点击后对应的能变红</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 对遍历出来的结果列表，我能实现点击列表对应的值，能让它变成红色 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in obj"</span> <span class="attr">:key</span>=<span class="string">"item"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:class</span>=<span class="string">"&#123;active: currentIndex === index&#125;"</span> @<span class="attr">click</span>=<span class="string">"changeColor(index)"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        obj: [<span class="string">'R'</span>, <span class="string">'C'</span>, <span class="string">'B'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>],</span></span><br><span class="line">        currentIndex: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        changeColor(index) &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.currentIndex = index;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="书籍购物车案例"><a href="#书籍购物车案例" class="headerlink" title="书籍购物车案例"></a>书籍购物车案例</h2><h3 id="此案例包含JavaScript的高阶函数用法"><a href="#此案例包含JavaScript的高阶函数用法" class="headerlink" title="此案例包含JavaScript的高阶函数用法"></a>此案例包含JavaScript的高阶函数用法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// javascript的高阶函数：</span></span><br><span class="line"><span class="keyword">const</span> nums = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编程式范式：命令式编程/声明式编程</span></span><br><span class="line"><span class="comment">// 编程式编程（第一公民：对象），函数式编程（第一公民：函数）</span></span><br><span class="line"><span class="comment">// filter/map/reduce高阶函数</span></span><br><span class="line"><span class="comment">// ①：</span></span><br><span class="line"><span class="comment">// filter高阶函数的使用: 它的回调函数有一个要求，必须返回一个boolean值</span></span><br><span class="line"><span class="comment">// true：当返回true时，函数内部会自动将这次回调的n加入到新的数组中去</span></span><br><span class="line"><span class="comment">// false：当返回false时，函数内部会过滤掉这次的 n</span></span><br><span class="line"><span class="keyword">let</span> newNum1 = nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n &lt; <span class="number">100</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'newNum1==filter=='</span> + newNum1);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ②：</span></span><br><span class="line"><span class="comment">// map高阶函数的使用</span></span><br><span class="line"><span class="keyword">let</span> newNum2 = newNum1.map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n * <span class="number">2</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'newNum2==map=='</span> + newNum2);</span><br><span class="line"><span class="keyword">let</span> newNum21 = nums.map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 判断条件无效，输出结果与上面一样，看来还是需要filter来过滤</span></span><br><span class="line">  <span class="keyword">if</span> (n &lt; <span class="number">80</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> n * <span class="number">2</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'newNum21==map=='</span> + newNum21);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ③：</span></span><br><span class="line"><span class="comment">//6.reduce高阶函数的使用: 对数组中的所有数据进行汇总（相加，相乘......）</span></span><br><span class="line"><span class="keyword">let</span> total = newNum2.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> preValue + value;</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'total==='</span> + total);</span><br><span class="line"><span class="comment">// 长度为 5</span></span><br><span class="line"><span class="comment">//         preValue   value</span></span><br><span class="line"><span class="comment">//第一次：    0         20</span></span><br><span class="line"><span class="comment">//第二次：    20        40</span></span><br><span class="line"><span class="comment">//第三次：    60        60</span></span><br><span class="line"><span class="comment">//第四次：    120       80</span></span><br><span class="line"><span class="comment">//第五次：    200       100</span></span><br><span class="line"><span class="comment">//输出        300</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//④：将上面三个函数综合起来使用：</span></span><br><span class="line"><span class="keyword">let</span> sum = nums.filter(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n &lt; <span class="number">50</span></span><br><span class="line">&#125;).map(<span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n * <span class="number">2</span></span><br><span class="line">&#125;).reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, value</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> preValue + value</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'sum==='</span> + sum);</span><br><span class="line"></span><br><span class="line"><span class="comment">//⑤：使用箭头函数将上面三个函数综合起来使用（类似lombda表达式）</span></span><br><span class="line"><span class="keyword">let</span> sum1 = nums.filter(<span class="function"><span class="params">n</span> =&gt;</span> n &lt; <span class="number">50</span>).map(<span class="function"><span class="params">n</span> =&gt;</span> n * <span class="number">2</span>).reduce(<span class="function">(<span class="params">pre, value</span>) =&gt;</span> pre + value);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'sum1==='</span> + sum1);</span><br></pre></td></tr></table></figure>

<h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"isFull"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>书名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>出版日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in books"</span> <span class="attr">:class</span>=<span class="string">"&#123;changeColor: number == 1&#125;"</span> @<span class="attr">mouseenter</span>=<span class="string">"change(index)"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">mouseleave</span>=<span class="string">"remove(index)"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用函数：&lt;td&gt;&#123;&#123;getfinalPrice(item.price)&#125;&#125;&lt;/td&gt; --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用过滤器： --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.price | showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"subBtn(index)"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              &#123;&#123;item.count&#125;&#125;</span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"addBtn(index)"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-if</span>=<span class="string">"exchange"</span> @<span class="attr">click</span>=<span class="string">"addItemBtn(index)"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-else</span> @<span class="attr">click</span>=<span class="string">"removeBtn(index)"</span>&gt;</span>移除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"changeType()"</span>&gt;</span>切换类型<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>总价格：&#123;&#123;showTotalPrice | showPrice&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>购物车清空<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"main.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    books: [&#123;</span><br><span class="line">        id: <span class="number">1</span>,</span><br><span class="line">        name: <span class="string">'算法导论'</span>,</span><br><span class="line">        date: <span class="string">'2019-2'</span>,</span><br><span class="line">        price: <span class="number">87.21</span>,</span><br><span class="line">        count: <span class="number">1</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">2</span>,</span><br><span class="line">        name: <span class="string">'UNIX编程艺术'</span>,</span><br><span class="line">        date: <span class="string">'2019-4'</span>,</span><br><span class="line">        price: <span class="number">97.21</span>,</span><br><span class="line">        count: <span class="number">2</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">3</span>,</span><br><span class="line">        name: <span class="string">'编程珠玑'</span>,</span><br><span class="line">        date: <span class="string">'2012-2'</span>,</span><br><span class="line">        price: <span class="number">77.21</span>,</span><br><span class="line">        count: <span class="number">1</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        id: <span class="number">4</span>,</span><br><span class="line">        name: <span class="string">'大话西游'</span>,</span><br><span class="line">        date: <span class="string">'2019-7'</span>,</span><br><span class="line">        price: <span class="number">100</span>,</span><br><span class="line">        count: <span class="number">1</span>,</span><br><span class="line">        exchange: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    number: <span class="number">2</span>,</span><br><span class="line">    exchange: <span class="literal">false</span>,</span><br><span class="line">    isFull: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    showTotalPrice() &#123;</span><br><span class="line">      <span class="keyword">let</span> totalPrice = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">//1.普通for循环</span></span><br><span class="line">      <span class="comment">// for (let i = 0; i &lt; this.books.length; i++) &#123;</span></span><br><span class="line">      <span class="comment">//   totalPrice += this.books[i].price * this.books[i].count</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">// return totalPrice</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//2.index是索引</span></span><br><span class="line">      <span class="comment">// for (let index in this.books) &#123;</span></span><br><span class="line">      <span class="comment">//   totalPrice += this.books[index].price * this.books[index].count</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//3.for of</span></span><br><span class="line">      <span class="comment">// for (let item of this.books) &#123;</span></span><br><span class="line">      <span class="comment">//   totalPrice += item.price * item.count</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//4.利用reduce函数来写</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.books.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">preValue, book</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> preValue + book.price * book.count</span><br><span class="line">      &#125;, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> totalPrice</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">// 行内按钮操作</span></span><br><span class="line">    subBtn(index) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.books[index].count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.books[index].count--</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    addBtn(index) &#123;</span><br><span class="line">      <span class="keyword">this</span>.books[index].count++</span><br><span class="line">    &#125;,</span><br><span class="line">    removeBtn(index) &#123;</span><br><span class="line">      <span class="keyword">this</span>.books.splice(index, <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.books.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.isFull = !<span class="keyword">this</span>.isFull</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 鼠标移动进区域，改变背景颜色</span></span><br><span class="line">    change(index) &#123;</span><br><span class="line">      <span class="comment">// this</span></span><br><span class="line">      <span class="keyword">this</span>.number = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">this</span>.active = <span class="string">".changeColor&#123; background-color: #cae6e6&#125;"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    remove(index) &#123;</span><br><span class="line">      <span class="keyword">this</span>.number = <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 改变按钮类型</span></span><br><span class="line">    changeType() &#123;</span><br><span class="line">      <span class="keyword">this</span>.exchange = !<span class="keyword">this</span>.exchange</span><br><span class="line">    &#125;,</span><br><span class="line">    addItemBtn() &#123;</span><br><span class="line">      <span class="keyword">const</span> obj = [<span class="number">5</span>, <span class="string">'数值分析'</span>, <span class="string">'2018-8'</span>, <span class="number">96.10</span>, <span class="number">2</span>];</span><br><span class="line">      <span class="keyword">this</span>.books.push(obj)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 格式化价格</span></span><br><span class="line">    getfinalPrice(price) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">'￥'</span> + price.toFixed(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  filters: &#123;</span><br><span class="line">    showPrice(price) &#123;</span><br><span class="line">      <span class="comment">//.toFixed(2)：保留小数点后两位</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">'￥'</span> + price.toFixed(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="comment">/* 消除表格的边框内距 */</span></span><br><span class="line">  <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">  <span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">thead</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: lightskyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* table tr:hover &#123;</span></span><br><span class="line"><span class="comment">  background-color: pink;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tr</span> <span class="selector-tag">th</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#cccccc</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.changeColor</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#cae6e6</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="v-model的使用"><a href="#v-model的使用" class="headerlink" title="v-model的使用"></a>v-model的使用</h2><h3 id="v-model双向绑定的基本原理"><a href="#v-model双向绑定的基本原理" class="headerlink" title="v-model双向绑定的基本原理"></a>v-model双向绑定的基本原理</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model的基本使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span>&#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model的原理： --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 监听input内容改变事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-on:input</span>=<span class="string">"changeInput($event)"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> @<span class="attr">input</span>=<span class="string">"changeInput"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此方法：input中会直接有message的值 , 其中target是事件源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-bind:value</span>=<span class="string">"message"</span> <span class="attr">v-on:input</span>=<span class="string">"message = $event.target.value"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"message"</span> @<span class="attr">input</span>=<span class="string">"message = $event.target.value"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'你好呀'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        changeInput(event) &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.message = event.target.value;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合radio单选框使用"><a href="#v-model结合radio单选框使用" class="headerlink" title="v-model结合radio单选框使用"></a>v-model结合radio单选框使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name要一致，不然选择一个单选框，再选择另一个，之前那个还是被选中状态 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"女"</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span>女</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &#123;&#123;'你选中的值:' + message&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">''</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合checkbox多选框使用"><a href="#v-model结合checkbox多选框使用" class="headerlink" title="v-model结合checkbox多选框使用"></a>v-model结合checkbox多选框使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 单个多选框: 同意协议示范 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"agreeLisence"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"isAgree"</span>&gt;</span>统一协议</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">"!isAgree"</span>&gt;</span>下一步<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多个多选框：爱好 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"唱"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>唱</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"跳"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>跳</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"rap"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>rap</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"打篮球"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span>&gt;</span>打篮球</span><br><span class="line">    你选择的兴趣爱好是：&#123;&#123;hobbies&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isAgree: <span class="literal">false</span>, <span class="comment">//单选框</span></span></span><br><span class="line"><span class="actionscript">        hobbies: [] <span class="comment">//多选框</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合select下拉框使用"><a href="#v-model结合select下拉框使用" class="headerlink" title="v-model结合select下拉框使用"></a>v-model结合select下拉框使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 下拉框的单个使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"demo"</span> <span class="attr">v-model</span>=<span class="string">"fruit"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"香蕉"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"苹果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"葡萄"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"梨子"</span>&gt;</span>梨子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你选择的水果是：&#123;&#123;fruit&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 下拉框的多个选中使用: 注意添加multiple，然后选择多个需要按住ctrl键 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"demo"</span> <span class="attr">v-model</span>=<span class="string">"fruits"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"香蕉"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"苹果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"葡萄"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"梨子"</span>&gt;</span>梨子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>你选择的水果是：&#123;&#123;fruits&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        fruit: <span class="string">'香蕉'</span>,</span></span><br><span class="line">        fruits: []</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model结合v-for使用"><a href="#v-model结合v-for使用" class="headerlink" title="v-model结合v-for使用"></a>v-model结合v-for使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 单个多选框: 同意协议示范 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in originalHobbies"</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 如果绑定originalHobbies，点击下对应的多选框就会消失 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"hobbies"</span> <span class="attr">:id</span>=<span class="string">"index+1"</span> <span class="attr">:value</span>=<span class="string">"item"</span>&gt;</span>&#123;&#123;item&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    你选择的兴趣爱好是：&#123;&#123;hobbies&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isAgree: <span class="literal">false</span>, <span class="comment">//单选框</span></span></span><br><span class="line"><span class="actionscript">        hobbies: [], <span class="comment">//多选框</span></span></span><br><span class="line"><span class="actionscript">        originalHobbies: [<span class="string">'唱'</span>, <span class="string">'跳'</span>, <span class="string">'rap'</span>, <span class="string">'打篮球'</span>]</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-model的修饰符使用"><a href="#v-model的修饰符使用" class="headerlink" title="v-model的修饰符使用"></a>v-model的修饰符使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.lazy修饰符: 懒加载，可以让数据被按下回车失去焦点后才会更新 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.lazy</span>=<span class="string">"message"</span>&gt;</span>&#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.number修饰符：可以将 只能输入数字 的类型转换成String --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model</span>=<span class="string">"age"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;age&#125;&#125;--&#123;&#123;typeof age&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果不想转换成String类型，只要添加 .number --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model.number</span>=<span class="string">"height"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;height&#125;&#125;--&#123;&#123;typeof height&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.去掉两端的空格 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model.trim</span>=<span class="string">"name"</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 添加多个修饰符只需叠加后面就行，无先后顺序要求 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model.lazy.number</span>=<span class="string">"height"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'你好呀'</span>,</span></span><br><span class="line">        age: 0,</span><br><span class="line">        height: 1,</span><br><span class="line"><span class="actionscript">        name: <span class="string">''</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="组件化开发"><a href="#组件化开发" class="headerlink" title="组件化开发"></a>组件化开发</h2><h3 id="组件化的基本使用"><a href="#组件化的基本使用" class="headerlink" title="组件化的基本使用"></a>组件化的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">my-cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 创建组件构造器</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC = Vue.extend(&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ES6语法：` 号可以支持内容里面换行比 ''更好使用</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//如果有多个标签使用,必须有个div包裹起来，否则内容显示不完全</span></span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>组件化<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">'my-cpn'</span>, cpnC)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="全局组件和局部组件"><a href="#全局组件和局部组件" class="headerlink" title="全局组件和局部组件"></a>全局组件和局部组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC = Vue.extend(&#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>组件化<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, cpnC)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 注册局部组件，即只能在app里使用cpn这个组件</span></span></span><br><span class="line">        cpn: cpnC</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app2'</span>,</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="父组件和子组件"><a href="#父组件和子组件" class="headerlink" title="父组件和子组件"></a>父组件和子组件</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn2</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC = Vue.extend(&#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>子组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 父组件：root组件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpnC2 = Vue.extend(&#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>父组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 这个子组件需要先注册</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;<span class="name">cpn1</span>/&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn1: cpnC</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, cpnC)</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 注册局部组件，即只能在app里使用这个组件</span></span></span><br><span class="line">        cpn1: cpnC,</span><br><span class="line">        cpn2: cpnC2</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件的语法糖注册方式"><a href="#组件的语法糖注册方式" class="headerlink" title="组件的语法糖注册方式"></a>组件的语法糖注册方式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn2</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// const cpnC = Vue.extend()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 语法糖注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn1"</span>, &#123;</span></span><br><span class="line">      template: `</span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">      `</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 语法糖注册局部组件，即只能在app里使用这个组件</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">'cpn2'</span>: &#123;</span></span><br><span class="line">          template: `</span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，呵呵呵呵<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件模块的分离写法"><a href="#组件模块的分离写法" class="headerlink" title="组件模块的分离写法"></a>组件模块的分离写法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 1.使用script标签：注意类型需要添加：text/x-template --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/x-template"</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 2.使用template标签(推荐) --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// const cpnC = Vue.extend()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 语法糖注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn1'</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件中的数据存放问题"><a href="#组件中的数据存放问题" class="headerlink" title="组件中的数据存放问题"></a>组件中的数据存放问题</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是cpn1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是，哈哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 想要获取title，必须在组件里面定义一个函数，且有返回值 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// const cpnC = Vue.extend()</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 语法糖注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn1'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          title: <span class="string">'好好学习，天天向上'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 模板里的title不能获取到此值</span></span></span><br><span class="line"><span class="actionscript">        title: <span class="string">'好好学习，天天向上'</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件中的data为什么必须是函数"><a href="#组件中的data为什么必须是函数" class="headerlink" title="组件中的data为什么必须是函数"></a>组件中的data为什么必须是函数</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn1</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前计数：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"decrement"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>当前计数：&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"increment"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"decrement"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 推荐：count数据不会共享</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用data函数：不会引起连锁反应。即每个都是个新对象，值地址不一样，</span></span></span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn1'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">          count: 0</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        increment() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count++</span></span><br><span class="line">        &#125;,</span><br><span class="line">        decrement() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count--</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// count数据共享</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 都是使用的这个obj常量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> obj = &#123;</span></span><br><span class="line">      count: 0</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    Vue.component(<span class="string">"cpn1"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// '#cpn' </span></span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn2'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> obj</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        increment() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count++</span></span><br><span class="line">        &#125;,</span><br><span class="line">        decrement() &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.count--</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父组件向子组件传递数据"><a href="#组件通信-父组件向子组件传递数据" class="headerlink" title="组件通信-父组件向子组件传递数据"></a>组件通信-父组件向子组件传递数据</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    &#123;&#123;movies.toString()&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加了前缀v-bind，vue会帮我们解析movies，不会当成字符串处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-bind:vmoives</span>=<span class="string">"movies"</span> <span class="attr">:vmessage</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 当成字符串处理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">vmoives</span>=<span class="string">"movies"</span> <span class="attr">vmessage</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;vmessage&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in vmoives"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line"><span class="actionscript">      props: [<span class="string">'vmoives'</span>, <span class="string">'vmessage'</span>], <span class="comment">//这种其实是表示变量名字，不能当成字符串</span></span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 注册全局组件</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// Vue.component('cpn', cpn)</span></span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'海贼王'</span>, <span class="string">'航空母舰'</span>],</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'真香'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// ES6中的高阶写法，等同于 cpn: cpn</span></span></span><br><span class="line">        cpn</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-props用法详解"><a href="#组件通信-props用法详解" class="headerlink" title="组件通信-props用法详解"></a>组件通信-props用法详解</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    &#123;&#123;movies.toString()&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-bind:propF</span>=<span class="string">"movies"</span> <span class="attr">:propC</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;propC&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in propF"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">      props: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 基础的类型检查('null'匹配任何类型)</span></span></span><br><span class="line"><span class="javascript">        propA: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 多个可能的类型</span></span></span><br><span class="line"><span class="javascript">        propB: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 必填的字符串</span></span></span><br><span class="line">        propC: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">String</span>,</span></span><br><span class="line"><span class="actionscript">          required: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="string">'你好呀'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的数字</span></span></span><br><span class="line">        propD: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="number">100</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 注意：类型是对象/数组时，默认值必须是一个函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propE: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              message: <span class="string">'hello'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propF: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'大话西游'</span>, <span class="string">'造梦西游'</span>]</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 自定义验证函数</span></span></span><br><span class="line">        propG: &#123;</span><br><span class="line"><span class="actionscript">          validator: <span class="function"><span class="keyword">function</span> <span class="params">(value)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 这个值必须匹配下列字符串的一个</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'success'</span>, <span class="string">'warning'</span>, <span class="string">'danger'</span>].indexOf(value) !== <span class="number">-1</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'海贼王'</span>, <span class="string">'航空母舰'</span>],</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'真香'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父传子-props不支持驼峰标识"><a href="#组件通信-父传子-props不支持驼峰标识" class="headerlink" title="组件通信-父传子(props不支持驼峰标识)"></a>组件通信-父传子(props不支持驼峰标识)</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-bind:prop-f</span>=<span class="string">"movies"</span> <span class="attr">v-bind:prop-g</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;propG&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in propF"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">      props: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propE: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Object</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              message: <span class="string">'hello'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 带有默认值的对象</span></span></span><br><span class="line">        propF: &#123;</span><br><span class="line"><span class="javascript">          type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">default</span>() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'大话西游'</span>, <span class="string">'造梦西游'</span>]</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 自定义验证函数</span></span></span><br><span class="line">        propG: &#123;</span><br><span class="line"><span class="actionscript">          validator: <span class="function"><span class="keyword">function</span> <span class="params">(value)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 这个值必须匹配下列字符串的一个:如果要检索的字符串值没有出现，则该方法返回 -1。</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log([<span class="string">'success'</span>, <span class="string">'warning'</span>, <span class="string">'danger'</span>].indexOf(value) !== <span class="number">-1</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 校验失败：Invalid prop: custom validator check failed for prop "propG".</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> [<span class="string">'success'</span>, <span class="string">'warning'</span>, <span class="string">'danger'</span>].indexOf(value) !== <span class="number">-1</span></span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;&#125;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        movies: [<span class="string">'海王'</span>, <span class="string">'海贼王'</span>, <span class="string">'航空母舰'</span>],</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'succe'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父子组件通信的案例"><a href="#组件通信-父子组件通信的案例" class="headerlink" title="组件通信-父子组件通信的案例"></a>组件通信-父子组件通信的案例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- cpnClick在父组件中定义的方法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-on:item-click</span>=<span class="string">"cpnClick"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> @<span class="attr">item-click</span>=<span class="string">"cpnClick($event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in categories"</span> @<span class="attr">click</span>=<span class="string">"btnClick(item)"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /*步骤:</span><br><span class="line">    1.子组件:触发监听的事件,比如被点击了,</span><br><span class="line"><span class="actionscript">    <span class="number">2.</span>然后发送自定义事件<span class="keyword">this</span>.$emit(<span class="string">'cpn中的自定义事件名'</span>, item)</span></span><br><span class="line">    3.调用Vue中的事件监听函数,如若在html文件中,不饿能使用驼峰命名自定义函数</span><br><span class="line">    */</span><br><span class="line"><span class="actionscript">    <span class="comment">// 子组件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> cpn = &#123;</span></span><br><span class="line"><span class="actionscript">      template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line">          categories: [</span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a1'</span>, name: <span class="string">'热门推荐'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a2'</span>, name: <span class="string">'手机数码'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a3'</span>, name: <span class="string">'家用家电'</span>&#125;,</span></span><br><span class="line"><span class="actionscript">            &#123;id: <span class="string">'a4'</span>, name: <span class="string">'电脑办公'</span>&#125;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick(item) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">//发射事件：自定义事件(父组件的cpn中接收此事件的名字)</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// html不区分大小写,这里不能使用驼峰命名</span></span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.$emit(<span class="string">'item-click'</span>, item)</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">    // <span class="comment">&lt;!-- 父组件 --&gt;</span></span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        cpnClick(item) &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'cpnClick'</span>, item);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-数字游戏-1"><a href="#组件通信-数字游戏-1" class="headerlink" title="组件通信-数字游戏-1"></a>组件通信-数字游戏-1</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">:number1</span>=<span class="string">"num1"</span> <span class="attr">:number2</span>=<span class="string">"num2"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num1:&#123;&#123;dnum1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"dnum1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num2:&#123;&#123;dnum2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>  <span class="attr">v-model</span>=<span class="string">"dnum2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        num1: 0,</span><br><span class="line">        num2: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          props: &#123;</span><br><span class="line"><span class="javascript">            number1: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript">            number2: <span class="built_in">Number</span></span></span><br><span class="line">          &#125;,</span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">              /* </span><br><span class="line"><span class="actionscript">              Property or method <span class="string">"num2"</span> <span class="keyword">is</span> not defined on the instance but referenced during render.</span></span><br><span class="line"><span class="actionscript">              Make sure that <span class="keyword">this</span> property <span class="keyword">is</span> reactive, either <span class="keyword">in</span> the data option, </span></span><br><span class="line"><span class="actionscript">              or <span class="keyword">for</span> <span class="class"><span class="keyword">class</span>-<span class="title">based</span> <span class="title">components</span>, <span class="title">by</span> <span class="title">initializing</span> <span class="title">the</span> <span class="title">property</span></span></span></span><br><span class="line">              即需要添加data()&#123;&#125;</span><br><span class="line">              */</span><br><span class="line"><span class="actionscript">              dnum1: <span class="keyword">this</span>.number1,</span></span><br><span class="line"><span class="actionscript">              dnum2: <span class="keyword">this</span>.number2</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-数字游戏-2"><a href="#组件通信-数字游戏-2" class="headerlink" title="组件通信-数字游戏-2"></a>组件通信-数字游戏-2</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- number1的值来源与Vue中data的num1 但是在组件中取值要用&#123;&#123;number1&#125;&#125;，也就是props对应的值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">:number1</span>=<span class="string">"num1"</span> <span class="attr">:number2</span>=<span class="string">"num2"</span> @<span class="attr">change1props</span>=<span class="string">"change1props"</span> @<span class="attr">change2props</span>=<span class="string">"change2props"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 3.父组件接收传过来的自定义事件，Vue中的 "change2props"方法 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num1:&#123;&#123;dnum1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number1&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 这方式同 v-model: 监听input框，调用组件中的 changeInputValue1事件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"dnum1"</span> @<span class="attr">input</span>=<span class="string">"changeInputValue1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>双向绑定的是num2:&#123;&#123;dnum2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>props:&#123;&#123;number2&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">:value</span>=<span class="string">"dnum2"</span> @<span class="attr">input</span>=<span class="string">"changeInputValue2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line">        num1: 0,</span><br><span class="line">        num2: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          props: &#123;</span><br><span class="line"><span class="javascript">            number1: <span class="built_in">Number</span>,</span></span><br><span class="line"><span class="javascript">            number2: <span class="built_in">Number</span></span></span><br><span class="line">          &#125;,</span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              dnum1: <span class="keyword">this</span>.number1,</span></span><br><span class="line"><span class="actionscript">              dnum2: <span class="keyword">this</span>.number2</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          methods: &#123;</span><br><span class="line">            changeInputValue1(event) &#123;</span><br><span class="line"><span class="actionscript">              <span class="comment">// 1.将input的值赋值到 dnum1 中去</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum1 = event.target.value;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">              <span class="comment">// 2.为了让父组件可以修改值，发送一个事件</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change1props'</span>, <span class="keyword">this</span>.dnum1)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">              <span class="comment">// 将下面输入框的props值: 变成1/2</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum2 = <span class="keyword">this</span>.dnum1 / <span class="number">2</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change2props'</span>, <span class="keyword">this</span>.dnum2)</span></span><br><span class="line">            &#125;,</span><br><span class="line">            changeInputValue2() &#123;</span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum2 = event.target.value;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change2props'</span>, <span class="keyword">this</span>.dnum2)</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">              <span class="comment">// 将上面输入框的props值: 变成2倍</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.dnum1 = <span class="keyword">this</span>.dnum2 * <span class="number">2</span></span></span><br><span class="line"><span class="actionscript">              <span class="keyword">this</span>.$emit(<span class="string">'change1props'</span>, <span class="keyword">this</span>.dnum1)</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        change1props(value) &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// 改变 prop 中的num1的值</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'dum1'</span> + value);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.num1 = <span class="built_in">parseFloat</span>(value);</span></span><br><span class="line">        &#125;,</span><br><span class="line">        change2props(value) &#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'dum2'</span> + value);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">this</span>.num2 = <span class="built_in">parseFloat</span>(value);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-父访问子-children-refs"><a href="#组件通信-父访问子-children-refs" class="headerlink" title="组件通信-父访问子-children-refs"></a>组件通信-父访问子-children-refs</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">ref</span>=<span class="string">"refA"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      我是子组件</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'Lemon'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        btnClick() &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// 1. $.chlidren</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> <span class="keyword">this</span>.$children) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(item.name);</span></span><br><span class="line">            item.showMessage()</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">          <span class="comment">// 2. $.refs: 仅仅会调动带有refs标示的</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 这样有时候我们想即使在新增数据后，依旧能操控它</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">'refs'</span> + <span class="keyword">this</span>.$refs.refA.name);</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              name: <span class="string">'Lemon'</span>,</span></span><br><span class="line">              id: 1,</span><br><span class="line">              height: 1.78</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          methods: &#123;</span><br><span class="line">            showMessage() &#123;</span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="keyword">this</span>.id);</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="组件通信-子访问父-parent-root"><a href="#组件通信-子访问父-parent-root" class="headerlink" title="组件通信-子访问父-parent-root"></a>组件通信-子访问父-parent-root</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ccpn</span>&gt;</span><span class="tag">&lt;/<span class="name">ccpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是cpn子组件<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- cpn的子组件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"ccpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是cpn的子组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick"</span>&gt;</span>ccpn按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> ccpn = Vue.component(<span class="string">'ccpn'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">              template: <span class="string">'#ccpn'</span>,</span></span><br><span class="line">              methods: &#123;</span><br><span class="line">                btnClick() &#123;</span><br><span class="line"><span class="actionscript">                  <span class="comment">// 按理这个是cpn的子组件，this应该指ccpn对象，</span></span></span><br><span class="line"><span class="actionscript">                  <span class="comment">// 调用this.$parent时，访问的是ccpn的父组件cpn，即返回对象是vuecomponents</span></span></span><br><span class="line"><span class="actionscript">                  <span class="comment">// 调用this.$root时，访问的才应该是cpn的父组件，即返回对象是vue</span></span></span><br><span class="line"><span class="actionscript">                  <span class="comment">// 可是我放在cpn的components里说ccpn没有注册</span></span></span><br><span class="line"><span class="javascript">                  <span class="built_in">console</span>.log(<span class="string">'ccpn='</span>, <span class="keyword">this</span>.$root.message)</span></span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        message: <span class="string">'Lemon'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              name: <span class="string">'我是cpn的name'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          components: &#123;</span><br><span class="line">            ccpn</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="组件化高级"><a href="#组件化高级" class="headerlink" title="组件化高级"></a>组件化高级</h2><h3 id="slot-插槽的基本使用"><a href="#slot-插槽的基本使用" class="headerlink" title="slot-插槽的基本使用"></a>slot-插槽的基本使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    1.插槽的基本使用：&lt;slot&gt;&lt;/slot&gt;</span></span><br><span class="line"><span class="comment">    2.插槽的默认值：&lt;slot&gt;传的元素/值：eg 哈哈哈&lt;/slot&gt;</span></span><br><span class="line"><span class="comment">    3.如果有多个值，同时被放入到组件中进行替换，会一起作为替换元素</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span>嘻嘻嘻<span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>组件化开发<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="slot-具名插槽的使用"><a href="#slot-具名插槽的使用" class="headerlink" title="slot-具名插槽的使用"></a>slot-具名插槽的使用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span>嘻嘻嘻<span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">slot</span>=<span class="string">"right"</span>&gt;</span>哈哈哈<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"left"</span>&gt;</span>左边<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"center"</span>&gt;</span>中间<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"right"</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span>&gt;</span>右边<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="什么是编译的作用域"><a href="#什么是编译的作用域" class="headerlink" title="什么是编译的作用域"></a>什么是编译的作用域</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 总结：</span></span><br><span class="line"><span class="comment">  父组件模板的所有东西都会在父级作用域内编译</span></span><br><span class="line"><span class="comment">  子组件模板的所有东西都会在子级作用域内编译 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这个里面的isShow会先从所在模板里面顺下去找，即从Vue里找寻，</span></span><br><span class="line"><span class="comment">    因此Vue中的data的isShow才能影响显示与否 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span> <span class="attr">v-show</span>=<span class="string">"isShow"</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是组件<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 这个里面的isShowCpn会先从所在模板里面顺下去找，即从cpn里找寻， --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-show</span>=<span class="string">"isShowCpn"</span>&gt;</span>我是哈哈哈<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"><span class="actionscript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              isShow: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">              isShowCpn: <span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="作用域插槽的准备"><a href="#作用域插槽的准备" class="headerlink" title="作用域插槽的准备"></a>作用域插槽的准备</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 作用域插槽：父组件替换插槽的标签，但是内容由子组件来提供 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span><span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line">      哈哈哈哈·</span><br><span class="line">      <span class="comment">&lt;!-- 目标获得子组件中的pLanguages --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot-scope</span>=<span class="string">"slot"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in slot.data"</span>&gt;</span>- &#123;&#123;item&#125;&#125; &#123;&#123;item&#125;&#125; - <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">cpn</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 目标获得子组件中的pLanguagesv-slot:todo todo指向slot中的name="todo" --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:todo</span>=<span class="string">"slotProps"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">          加join()：<span class="tag">&lt;<span class="name">span</span>&gt;</span>- &#123;&#123;slotProps.data.join(' - ')&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;slotProps.data&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">cpn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- :名字="cpn中对应需要获取的值" --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">:data</span>=<span class="string">"pLanguages"</span>  <span class="attr">name</span>=<span class="string">"todo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in pLanguages"</span>&gt;</span></span><br><span class="line">            &#123;&#123;item&#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      components: &#123;</span><br><span class="line">        cpn: &#123;</span><br><span class="line"><span class="actionscript">          template: <span class="string">'#cpn'</span>,</span></span><br><span class="line">          data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">              pLanguages: [<span class="string">'Java'</span>, <span class="string">'C'</span>, <span class="string">'C++'</span>, <span class="string">'Python'</span>, <span class="string">'C#'</span>]</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="前端模块化"><a href="#前端模块化" class="headerlink" title="前端模块化"></a>前端模块化</h2><h3 id="ES模块化的实现"><a href="#ES模块化的实现" class="headerlink" title="ES模块化的实现"></a>ES模块化的实现</h3><p><strong>aaa.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'小红'</span></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(sum(<span class="number">200</span>, <span class="number">300</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  flag, sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>bbb.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'小红'</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var name = '小明'</span></span><br><span class="line"><span class="comment">// let age = 18</span></span><br><span class="line"><span class="comment">// var flag = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// function sum(num1, num2) &#123;</span></span><br><span class="line"><span class="comment">//   return num1 + num2</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if (flag) &#123;</span></span><br><span class="line"><span class="comment">//   console.log(sum(20, 30));</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// export &#123;</span></span><br><span class="line"><span class="comment">//   flag, sum</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>index.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 出现了跨域的问题，但是原理基本这样 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"aaa.js"</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bbb.js"</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"mmm.js"</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>mmm.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;flag&#125; <span class="keyword">from</span> <span class="string">"./aaa.js"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'小明是天才，哈哈哈哈'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="webpack使用"><a href="#webpack使用" class="headerlink" title="webpack使用"></a>webpack使用</h2><h3 id="webpack的起步"><a href="#webpack的起步" class="headerlink" title="webpack的起步"></a>webpack的起步</h3><p><strong>info.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">'why'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> height = <span class="number">1.78</span></span><br></pre></td></tr></table></figure>

<p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.使用commonjs的模块化规范</span></span><br><span class="line"><span class="keyword">const</span> &#123;add, mul&#125; = <span class="built_in">require</span>(<span class="string">'./mathUtils.js'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">20</span>, <span class="number">30</span>));</span><br><span class="line"><span class="built_in">console</span>.log(mul(<span class="number">25</span>, <span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.使用ES6的模块化的规范</span></span><br><span class="line"><span class="keyword">import</span> &#123;name, age, height&#125; <span class="keyword">from</span> <span class="string">"./info"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name);</span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br><span class="line"><span class="built_in">console</span>.log(height);</span><br></pre></td></tr></table></figure>

<p><strong>mathUtils.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 * num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  add,</span><br><span class="line">  mul</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>index.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    PS D:\Web_Study\vue.js学习&gt; cd  12-webpack使用\1-webpack的起步</span></span><br><span class="line"><span class="comment">    PS D:\Web_Study\vue.js学习\12-webpack使用\1-webpack的起步&gt; webpack ./src/main.js ./dist/bundle.js --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 生成文件的位置 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./dist/bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="webpack的配置"><a href="#webpack的配置" class="headerlink" title="webpack的配置"></a>webpack的配置</h3><p><strong>webpack.config.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// npm init; npm install</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/main.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">// 动态获取路径：resolve拼接地址</span></span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'bundle.js'</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>package.json</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"meetwebpack"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"webpack.config.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"webpack"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^3.6.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="webpack配置loader和vue"><a href="#webpack配置loader和vue" class="headerlink" title="webpack配置loader和vue"></a>webpack配置loader和vue</h3><p><strong>webpack.config.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// npm init; npm install</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">'./src/main.js'</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    <span class="comment">// 动态获取路径：resolve拼接地址</span></span><br><span class="line">    path: path.resolve(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">    filename: <span class="string">'bundle.js'</span>,</span><br><span class="line">    <span class="comment">// 可以显示加载后的图片</span></span><br><span class="line">    <span class="comment">// publicPath: '/dist'</span></span><br><span class="line">    publicPath: <span class="string">'dist/'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [&#123;</span><br><span class="line">        test: <span class="regexp">/\.css$/i</span>,</span><br><span class="line">        use: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>],</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        test: <span class="regexp">/\.less$/</span>,</span><br><span class="line">        use: [&#123;</span><br><span class="line">          loader: <span class="string">"style-loader"</span> <span class="comment">// creates style nodes from JS strings</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          loader: <span class="string">"css-loader"</span> <span class="comment">// translates CSS into CommonJS</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          loader: <span class="string">"less-loader"</span> <span class="comment">// compiles Less to CSS</span></span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        test: <span class="regexp">/\.(png|jpg|gif)$/</span>,</span><br><span class="line">        use: [&#123;</span><br><span class="line">          loader: <span class="string">'url-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            <span class="comment">// 如果limit小于文件大小 * 1024，就会报错，Cannot find module 'file-loader'</span></span><br><span class="line">            <span class="comment">// 一般配置成8kb</span></span><br><span class="line">            limit: <span class="number">8192</span>,</span><br><span class="line">            name: <span class="string">'img/[name].[hash:8].[ext]'</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        test: <span class="regexp">/\.js$/</span>,</span><br><span class="line">        <span class="comment">// 排除</span></span><br><span class="line">        exclude: <span class="regexp">/(node_modules|bower_components)/</span>,</span><br><span class="line">        use: &#123;</span><br><span class="line">          loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">          options: &#123;</span><br><span class="line">            presets: [<span class="string">'es2015'</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><p><strong>index.html</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    webpack官网：https://www.webpackjs.com/loaders/babel-loader/</span></span><br><span class="line"><span class="comment">    重命名会让配置正确的出错，需要重新安装</span></span><br><span class="line"><span class="comment">    如若出现，ERROR in Entry module not found: Error: Can't resolve 'babel-loader' in 'D:\Web_Study\vue.js学习\12-webpack使用\4-webpack配置vue'</span></span><br><span class="line"><span class="comment">    请 cnpm install babel-loader@8.0.0-beta.0 @babel/core @babel/preset-env webpack</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    0. 动态获取webpack的dist配置路径</span></span><br><span class="line"><span class="comment">        //入口</span></span><br><span class="line"><span class="comment">        entry: './src/main.js',</span></span><br><span class="line"><span class="comment">        //输出</span></span><br><span class="line"><span class="comment">        output: &#123;</span></span><br><span class="line"><span class="comment">          // 动态获取路径：resolve拼接地址</span></span><br><span class="line"><span class="comment">          path: path.resolve(__dirname, 'dist'),</span></span><br><span class="line"><span class="comment">          filename: 'bundle.js',</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">    使用 cnpm run build 启动方式配值：</span></span><br><span class="line"><span class="comment">    1.安装本地webpack</span></span><br><span class="line"><span class="comment">    2.在package.json文件中的script添加 "build": "webpack"</span></span><br><span class="line"><span class="comment">    3.然后输入cnpm run build，就会在webpack.config.js中根据动态路径创建</span></span><br><span class="line"><span class="comment">    4.加载css文件：cnpm install --save-dev css-loader</span></span><br><span class="line"><span class="comment">    5.解析加载进去的css文件：cnpm install --save-dev style-loader</span></span><br><span class="line"><span class="comment">    6.在webpack.config.js中的module.exports = &#123;&#125;中添加</span></span><br><span class="line"><span class="comment">    module: &#123;</span></span><br><span class="line"><span class="comment">      rules: [</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">          test: /\.css$/i,</span></span><br><span class="line"><span class="comment">          use: ['style-loader', 'css-loader'],</span></span><br><span class="line"><span class="comment">        &#125;,</span></span><br><span class="line"><span class="comment">      ],</span></span><br><span class="line"><span class="comment">    &#125;,</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    7.导入less文件，并转换成css文件：cnpm install --save-dev less-loader less</span></span><br><span class="line"><span class="comment">    8.在webpack.config.js中的module.exports = &#123;&#125;中添加</span></span><br><span class="line"><span class="comment">     module: &#123;</span></span><br><span class="line"><span class="comment">        rules: [&#123;</span></span><br><span class="line"><span class="comment">            test: /\.less$/,</span></span><br><span class="line"><span class="comment">            use: [&#123;</span></span><br><span class="line"><span class="comment">                loader: "style-loader" // creates style nodes from JS strings</span></span><br><span class="line"><span class="comment">            &#125;, &#123;</span></span><br><span class="line"><span class="comment">                loader: "css-loader" // translates CSS into CommonJS</span></span><br><span class="line"><span class="comment">            &#125;, &#123;</span></span><br><span class="line"><span class="comment">                loader: "less-loader" // compiles Less to CSS</span></span><br><span class="line"><span class="comment">            &#125;]</span></span><br><span class="line"><span class="comment">        &#125;]</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    9.加载图片：cnpm install --save-dev url-loader</span></span><br><span class="line"><span class="comment">    10.&#123;</span></span><br><span class="line"><span class="comment">        test: /\.(png|jpg|gif)$/,</span></span><br><span class="line"><span class="comment">        use: [</span></span><br><span class="line"><span class="comment">          &#123;</span></span><br><span class="line"><span class="comment">            loader: 'url-loader',</span></span><br><span class="line"><span class="comment">            options: &#123;</span></span><br><span class="line"><span class="comment">              // 如果limit小于文件大小 * 1024，就会报错，Cannot find module 'file-loader'</span></span><br><span class="line"><span class="comment">              // 如果要加载的图片小于8kb，就会将加载的图片转换成base64</span></span><br><span class="line"><span class="comment">              // 一般配置成8kb</span></span><br><span class="line"><span class="comment">              limit:8192</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">        ]</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">      11.404  会把图片发布在dist文件夹里，但是我们css文件中还是在找img里的图片</span></span><br><span class="line"><span class="comment">      GET file:///D:/Web_Study/vue.js%E5%AD%A6%E4%B9%A0/12-webpack%E4%BD%BF%E7%94%A8/4-webpack%E7%9A%84lcss%E6%A0%B7%E5%BC%8F-</span></span><br><span class="line"><span class="comment">        less%E6%96%87%E4%BB%B6/c67dcb9e8b50af7c2550f6da0c40f7e0.jpg net::ERR_FILE_NOT_FOUND</span></span><br><span class="line"><span class="comment">      12. 解决方法：可以显示加载后的图片 publicPath: '/dist'</span></span><br><span class="line"><span class="comment">      在webpack.config.js中的output里添加</span></span><br><span class="line"><span class="comment">      // 可以显示加载后的图片</span></span><br><span class="line"><span class="comment">      publicPath: '/dist'</span></span><br><span class="line"><span class="comment">      13. 让加载后的图片在dist里的指定目录：</span></span><br><span class="line"><span class="comment">      图片名字  img文件夹/[name]此为变量名/hash为32位，截取8位/ext：拓展名</span></span><br><span class="line"><span class="comment">      注意：若只写name就是固定值，即一直都是这个名字</span></span><br><span class="line"><span class="comment">      name: 'img/[name].[hash:8].[ext]'</span></span><br><span class="line"><span class="comment">      14. 显示图片：publicPath: 'dist/'</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      15. ES6语法 转换成 ES5语法：</span></span><br><span class="line"><span class="comment">      ①：cnpm install --save-dev babel-loader@7 babel-core babel-preset-es2015</span></span><br><span class="line"><span class="comment">      ②：配置文件中添加:</span></span><br><span class="line"><span class="comment">            module: &#123;</span></span><br><span class="line"><span class="comment">        rules: [</span></span><br><span class="line"><span class="comment">          &#123;</span></span><br><span class="line"><span class="comment">            test: /\.js$/,</span></span><br><span class="line"><span class="comment">            exclude: /(node_modules|bower_components)/,</span></span><br><span class="line"><span class="comment">            use: &#123;</span></span><br><span class="line"><span class="comment">              loader: 'babel-loader',</span></span><br><span class="line"><span class="comment">              options: &#123;</span></span><br><span class="line"><span class="comment">                presets: ['@babel/preset-env']</span></span><br><span class="line"><span class="comment">              &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment">        ]</span></span><br><span class="line"><span class="comment">      &#125;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./dist/bundle.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.使用commonjs的模块化规范</span></span><br><span class="line"><span class="keyword">const</span> &#123;add, mul&#125; = <span class="built_in">require</span>(<span class="string">'./js/mathUtils.js'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">20</span>, <span class="number">30</span>));</span><br><span class="line"><span class="built_in">console</span>.log(mul(<span class="number">25</span>, <span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.使用ES6的模块化的规范</span></span><br><span class="line"><span class="keyword">import</span> &#123;name, age, height&#125; <span class="keyword">from</span> <span class="string">"./js/info"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name);</span><br><span class="line"><span class="built_in">console</span>.log(age);</span><br><span class="line"><span class="built_in">console</span>.log(height);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.依赖css文件</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./css/normal.css'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.依赖less文件</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">'./css/special.less'</span>)</span><br><span class="line"><span class="built_in">document</span>.writeln(<span class="string">'&lt;h2&gt;你好呀，李银河&lt;/h2&gt;'</span>)</span><br></pre></td></tr></table></figure>

<p><strong>info.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">'why'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> age = <span class="number">18</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> height = <span class="number">1.78</span></span><br></pre></td></tr></table></figure>

<p><strong>mathUtils.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mul</span>(<span class="params">num1, num2</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num1 * num2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  add,</span><br><span class="line">  mul</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p><strong>normal.css</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="comment">/* background: mediumaquamarine; */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">"../img/timg1.jpg"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>special.less</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">@fontSize: 50px;</span><br><span class="line">@fontColor: orange;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: @fontSize;</span><br><span class="line">  <span class="attribute">color</span>: @fontColor</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>模块展示<br><img src="https://img-blog.csdnimg.cn/20200210194545975.png" alt=""></p>
<h2 id="vue-cli3使用"><a href="#vue-cli3使用" class="headerlink" title="vue-cli3使用"></a>vue-cli3使用</h2><p><strong>App.vue</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">alt</span>=<span class="string">"Vue logo"</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">msg</span>=<span class="string">"Welcome to Your Vue.js App"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'./components/HelloWorld.vue'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'app'</span>,</span></span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line">  font-family: 'Avenir', Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>HelloWorld.vue</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">  props: &#123;</span><br><span class="line"><span class="javascript">    msg: <span class="built_in">String</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line">h3 &#123;</span><br><span class="line">  margin: 40px 0 0;</span><br><span class="line">&#125;</span><br><span class="line">ul &#123;</span><br><span class="line">  list-style-type: none;</span><br><span class="line">  padding: 0;</span><br><span class="line">&#125;</span><br><span class="line">li &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  margin: 0 10px;</span><br><span class="line">&#125;</span><br><span class="line">a &#123;</span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#42b983</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// 使用的是runtime-only</span></span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">  <span class="comment">// render: h =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   return h(App)</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure>

<h2 id="vue-router前端路由"><a href="#vue-router前端路由" class="headerlink" title="vue-router前端路由"></a>vue-router前端路由</h2><h2 id="vue-tabbar"><a href="#vue-tabbar" class="headerlink" title="vue-tabbar"></a>vue-tabbar</h2><h2 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h2><h2 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h2><p><strong>request.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处不使用defaults，为了能导出多个自定义的</span></span><br><span class="line"><span class="comment">// 强烈推荐：回调方式四：Promise</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params">config</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 1.创建axios的实例</span></span><br><span class="line">  <span class="keyword">const</span> instance = axios.create(&#123;</span><br><span class="line">    baseURL: <span class="string">'http://123.207.32.32:8000'</span>,</span><br><span class="line">    timeout: <span class="number">5000</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.axios的拦截器</span></span><br><span class="line">  <span class="comment">// 2.1请求拦截</span></span><br><span class="line">  <span class="comment">// instance.interceptors.request.use(config =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   console.log(config);</span></span><br><span class="line">  <span class="comment">//   // 拦截放行，否则报错TypeError: Cannot read property 'cancelToken' of undefined</span></span><br><span class="line">  <span class="comment">//   // 1.比如config中的一些信息不符合服务器的要求</span></span><br><span class="line">  <span class="comment">//   // 2.比如每次发送网络请求时，都希望在界面中显示一个请求的图标</span></span><br><span class="line">  <span class="comment">//   // 3.某些网络请求(比如登录(token))，必须携带一些特殊的信息</span></span><br><span class="line">  <span class="comment">//   return config</span></span><br><span class="line">  <span class="comment">// &#125;, err =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//   console.log(err);</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 2.2响应拦截</span></span><br><span class="line">  instance.interceptors.response.use(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">  &#125;, err =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 底层已经帮我们封装好了new Promise()，我们可以直接return</span></span><br><span class="line">  <span class="keyword">return</span> instance(config)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 推荐：回调方式三：Promise</span></span><br><span class="line"><span class="comment">// export function request(config) &#123;</span></span><br><span class="line"><span class="comment">//   return new Promise((resolve, reject) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     // 1.创建axios的实例</span></span><br><span class="line"><span class="comment">//     const instance = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//       baseURL: 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//       timeout: 5000</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     // 发送真正的网络请求</span></span><br><span class="line"><span class="comment">//     instance(config)</span></span><br><span class="line"><span class="comment">//       .then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//         resolve(res)</span></span><br><span class="line"><span class="comment">//       &#125;)</span></span><br><span class="line"><span class="comment">//       .catch(err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//         reject(err)</span></span><br><span class="line"><span class="comment">//       &#125;)</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式一：</span></span><br><span class="line"><span class="comment">// export function request(config, success, failure) &#123;</span></span><br><span class="line"><span class="comment">//   // 1.创建axios的实例</span></span><br><span class="line"><span class="comment">//   const instance = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//     baseURL: 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//     timeout: 5000</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   // 发送真正的网络请求</span></span><br><span class="line"><span class="comment">//   instance(config)</span></span><br><span class="line"><span class="comment">//     .then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       success(res)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">//     .catch(err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       failure(err)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式二：</span></span><br><span class="line"><span class="comment">// export function request(config) &#123;</span></span><br><span class="line"><span class="comment">//   // 1.创建axios的实例</span></span><br><span class="line"><span class="comment">//   const instance = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//     baseURL: 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//     timeout: 5000</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   // 发送真正的网络请求</span></span><br><span class="line"><span class="comment">//   instance(config.baseConfig)</span></span><br><span class="line"><span class="comment">//     .then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       success(res)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">//     .catch(err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//       failure(err)</span></span><br><span class="line"><span class="comment">//     &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>main.js</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios的多种请求方式：</span></span><br><span class="line"><span class="comment">// axios(config), axios.request(config), axios.get(url[,config])</span></span><br><span class="line"><span class="comment">// axios.delete(url[, config]), axios.head(url[,config])</span></span><br><span class="line"><span class="comment">// axios.post(url[,data[,config]]), axios.put(url[,data[,config]])</span></span><br><span class="line"><span class="comment">// axios.patch(url[,data[,config]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.axios基本使用，默认get请求</span></span><br><span class="line"><span class="comment">// axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/multidata',</span></span><br><span class="line"><span class="comment">//   method: 'get'</span></span><br><span class="line"><span class="comment">// &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/data',</span></span><br><span class="line"><span class="comment">// url: 'http://123.207.32.32:8000/home/data?type=sell&amp;&amp;page=1',</span></span><br><span class="line"><span class="comment">//   params: &#123;</span></span><br><span class="line"><span class="comment">//     type: 'sell',</span></span><br><span class="line"><span class="comment">//     page: 1</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line"><span class="comment">//   method: 'get'</span></span><br><span class="line"><span class="comment">// &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.axios发送并发请求</span></span><br><span class="line"><span class="comment">// axios.all([axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;), axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: 'http://123.207.32.32:8000/home/data',</span></span><br><span class="line"><span class="comment">//   params: &#123;</span></span><br><span class="line"><span class="comment">//     type: 'pop',</span></span><br><span class="line"><span class="comment">//     page: 4</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;)]).then(results =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   // 返回的是数组形式的</span></span><br><span class="line"><span class="comment">//   console.log(results);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.axios公共配置的相关信息</span></span><br><span class="line"><span class="comment">// axios.defaults.baseURL = 'http://123.207.32.32:8000'</span></span><br><span class="line"><span class="comment">// 5秒</span></span><br><span class="line"><span class="comment">// axios.defaults.timeout = 5000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// axios.all([axios(&#123;</span></span><br><span class="line"><span class="comment">//   // baseURL = 'http://123.207.32.32:8000',</span></span><br><span class="line"><span class="comment">//   url: '/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;), axios(&#123;</span></span><br><span class="line"><span class="comment">//   url: '/home/data',</span></span><br><span class="line"><span class="comment">//   params: &#123;</span></span><br><span class="line"><span class="comment">//     type: 'pop',</span></span><br><span class="line"><span class="comment">//     page: 4</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   // spread可以将数组中的元素依次展开</span></span><br><span class="line"><span class="comment">// &#125;)]).then(axios.spread((res1, res2) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   // 返回的是数组中的值</span></span><br><span class="line"><span class="comment">//   console.log(res1);</span></span><br><span class="line"><span class="comment">//   console.log(res2);</span></span><br><span class="line"><span class="comment">// &#125;))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.创建对应的axios的实例：可以设置多个不同的baseURL</span></span><br><span class="line"><span class="comment">// const instance1 = axios.create(&#123;</span></span><br><span class="line"><span class="comment">//   baseURL: 'http://123.207.32.32:8000/',</span></span><br><span class="line"><span class="comment">//   timeout: 5000</span></span><br><span class="line"><span class="comment">//   // headers: &#123;&#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// instance1(&#123;</span></span><br><span class="line"><span class="comment">//   url: '/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;).then(res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.封装request模块</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  request</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">"./network/request"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调方式三、四：Promise:推荐</span></span><br><span class="line">request(&#123;</span><br><span class="line">  url: <span class="string">'/home/multidata'</span></span><br><span class="line">&#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(res);</span><br><span class="line">&#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式一：</span></span><br><span class="line"><span class="comment">// request(&#123;</span></span><br><span class="line"><span class="comment">//   url: '/home/multidata'</span></span><br><span class="line"><span class="comment">// &#125;, res =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(res);</span></span><br><span class="line"><span class="comment">// &#125;, err =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   console.log(err);</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调的方式二：</span></span><br><span class="line"><span class="comment">// request(&#123;</span></span><br><span class="line"><span class="comment">//   baseConfig: &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line"><span class="comment">//   success: function(res)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line"><span class="comment">//   failure: function(err)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;)</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Promise异步编程</title>
    <url>/2162723474/</url>
    <content><![CDATA[<h2 id="Promise的使用"><a href="#Promise的使用" class="headerlink" title="Promise的使用"></a>Promise的使用</h2><a id="more"></a>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 参数 -&gt; 函数(resolve, reject)</span></span><br><span class="line">    <span class="comment">// resolve, reject本身它们又是函数</span></span><br><span class="line">    <span class="comment">// 链式编程</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 第一次网路请求的代码 </span></span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve()</span><br><span class="line">      &#125;, <span class="number">2000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第二次网络请求的代码</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          resolve()</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 第二次处理的代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第三次网络请求的代码</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          resolve()</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 第三次处理的代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello css'</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 成功的时候</span></span><br><span class="line">        resolve(<span class="string">'异步传数据'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 失败的时候</span></span><br><span class="line">        <span class="comment">// reject('error message')</span></span><br><span class="line">      &#125;, <span class="number">5000</span>)</span><br><span class="line">    <span class="comment">// .then((data) =&gt; 只有一个参数,data括号可以省略</span></span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'成功反馈'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 捕获错误信息</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'错误信息'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><font color="black" face="黑体">什么情况下用到Promise? </font><br>  一般情况下是有异步操作时,使用Promise对这个异步操作进行封装<br>  new -&gt; 构造函数(1.保存了一些状态信息 2.执行传入的函数)<br>  在执行传入的回调函数时,会传入两个参数,resolve,reject,本身又是函数</p>
</blockquote>
<h2 id="Promise的另种处理形式"><a href="#Promise的另种处理形式" class="headerlink" title="Promise的另种处理形式"></a>Promise的另种处理形式</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// then(函数一:成功, 函数二:失败)</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// resolve('Hello Vue.js')</span></span><br><span class="line">        reject(<span class="string">'error message'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(data);</span><br><span class="line">    &#125;, err =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;)  </span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Promise的链式调用"><a href="#Promise的链式调用" class="headerlink" title="Promise的链式调用"></a>Promise的链式调用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// wrapped into 内部包装</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">'aaa'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 1.自己处理10行代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第一层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.对结果进行第一次处理</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(res + <span class="string">'111'</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第二层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(res + <span class="string">'222'</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第三层的10行处理代码'</span>)</span><br><span class="line">    &#125;)  </span><br><span class="line"></span><br><span class="line">    <span class="comment">//简写</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">'aaa'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 1.自己处理10行代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第一层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.对结果进行第一次处理</span></span><br><span class="line">      <span class="comment">// 捕获失败信息</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.reject(<span class="string">'error'</span>)</span><br><span class="line">      <span class="comment">//手动抛出异常</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="string">'error message'</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(res + <span class="string">'111'</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第二层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Promise</span>.resolve(res + <span class="string">'222'</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第三层的10行处理代码'</span>)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;) </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略Promise.resolve</span></span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(<span class="string">'aaa'</span>)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 1.自己处理10行代码</span></span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第一层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.对结果进行第一次处理</span></span><br><span class="line">      <span class="keyword">return</span> res + <span class="string">'111'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第二层的10行处理代码'</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> res + <span class="string">'222'</span></span><br><span class="line">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res, <span class="string">'第三层的10行处理代码'</span>)</span><br><span class="line">    &#125;)  </span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="Promise的all方法使用"><a href="#Promise的all方法使用" class="headerlink" title="Promise的all方法使用"></a>Promise的all方法使用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="built_in">Promise</span>.all([</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// resolve('result1')</span></span><br><span class="line">        resolve(&#123;<span class="attr">name</span>: <span class="string">'why'</span>, <span class="attr">age</span>: <span class="number">18</span>&#125;)</span><br><span class="line">      &#125;, <span class="number">2000</span>)</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// resolve('result2')</span></span><br><span class="line">        resolve(&#123;<span class="attr">name</span>: <span class="string">'blue'</span>, <span class="attr">age</span>: <span class="number">19</span>&#125;)</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  ]).then(<span class="function"><span class="params">results</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(results)</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>ES6</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>箭头函数</title>
    <url>/4068895603/</url>
    <content><![CDATA[<h2 id="箭头函数的基本使用"><a href="#箭头函数的基本使用" class="headerlink" title="箭头函数的基本使用"></a>箭头函数的基本使用</h2><a id="more"></a>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//  箭头函数：也是一种定义方式 </span></span><br><span class="line">    <span class="comment">// 1.定义函数的方式 function</span></span><br><span class="line">    <span class="keyword">const</span> fun = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.对象字面量中定义函数</span></span><br><span class="line">    <span class="keyword">const</span> obj = &#123;</span><br><span class="line">      fun: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line">      fun1() &#123;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.ES6中的箭头函数</span></span><br><span class="line">    <span class="keyword">const</span> abc = <span class="function">(<span class="params">参数列表</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 无参数:</span></span><br><span class="line">    <span class="keyword">const</span> abc = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="箭头函数参数和返回值"><a href="#箭头函数参数和返回值" class="headerlink" title="箭头函数参数和返回值"></a>箭头函数参数和返回值</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1.参数问题</span></span><br><span class="line">    <span class="comment">// 1.1放入两个参数:</span></span><br><span class="line">    <span class="keyword">const</span> sum = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> num1 + num2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.2放入一个参数</span></span><br><span class="line">    <span class="keyword">const</span> mul = <span class="function">(<span class="params">num</span>) =&gt;</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> num * num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> mul = <span class="function"><span class="params">num</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> num * num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.函数中</span></span><br><span class="line">    <span class="comment">// 2.1函数代码块中有多行代码时</span></span><br><span class="line">    <span class="keyword">const</span> test = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello World'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'Hello Vue.js'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.2函数代码块中只有一行代码时</span></span><br><span class="line">    <span class="keyword">const</span> mul1 = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> num1 * num2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ①:有返回值</span></span><br><span class="line">    <span class="keyword">const</span> mul1 = <span class="function">(<span class="params">num1, num2</span>) =&gt;</span> num1 * num2</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'mul'</span> + mul1(<span class="number">200</span>, <span class="number">3</span>));</span><br><span class="line">    <span class="comment">// ②:无返回值:</span></span><br><span class="line">    <span class="keyword">const</span> mul2 = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'Hello Demo'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'mul2=='</span> + mul2);</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="箭头函数的this使用"><a href="#箭头函数的this使用" class="headerlink" title="箭头函数的this使用"></a>箭头函数的this使用</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 问题：箭头函数中的this是如何查找的</span></span><br><span class="line">    <span class="comment">// 答案：向外层作用域中，一层层查找this，直到有this的定义</span></span><br><span class="line">    <span class="comment">// 结论：箭头函数中的this引用的就是最近作用域中的this</span></span><br><span class="line">    <span class="keyword">const</span> obj = &#123;</span><br><span class="line">      aaa() &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//window  </span></span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 外层的setTimeout函数指向的就是window</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//window</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">          setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//window  </span></span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line">          setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 外层的setTimeout函数指向的就是obj对象</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="keyword">this</span>); <span class="comment">//obj对象</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    obj.aaa()</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>ES6</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6的基本语法</title>
    <url>/2775795099/</url>
    <content><![CDATA[<p>ES6， 全称 ECMAScript 6.0 ，是 JavaScript 的下一个版本标准，2015.06 发版。</p>
<p>ES6 主要是为了解决 ES5 的先天不足，比如 JavaScript 里并没有类的概念，但是目前浏览器的 JavaScript 是 ES5 版本，大多数高版本的浏览器也支持 ES6，不过只实现了 ES6 的部分特性和功能。</p>
<a id="more"></a>
<h2 id="块级作用域讲解"><a href="#块级作用域讲解" class="headerlink" title="块级作用域讲解"></a>块级作用域讲解</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮4<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>按钮5<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> btns = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'button'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式1（错误方法）：var全局变量，没有块级作用域</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//方式2：使用闭包</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        (<span class="function"><span class="keyword">function</span> <span class="params">(i)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)(i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 方式3. 使用ES6中的let</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; btns.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        btns[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//详解：</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span><span class="params">(i)</span> </span>&#123; <span class="comment">//i = 0，点击第一次</span></span></span><br><span class="line"><span class="actionscript">         btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">             <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">         &#125;)</span><br><span class="line">     &#125;</span><br><span class="line"><span class="actionscript">     <span class="function"><span class="keyword">function</span><span class="params">(i)</span> </span>&#123; </span></span><br><span class="line"><span class="actionscript">      <span class="comment">//i = 1,点击第二次。</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ①：由于使用的是var，前面i = 0/的函数里i又会被重新赋值成i = 1，故点击五次后，不论点击哪个按钮，都是打印的第5个按钮被点击</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ②：闭包方式，此循环的函数调用完后，会寻找i，然后由于是闭包形式，此i就相当于局部变量使用，其他循环下的i不相互影响</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// ③：let方式：局部变量，有作用域范围</span></span></span><br><span class="line"><span class="actionscript">         btns[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">             <span class="built_in">console</span>.log(<span class="string">'第'</span> + i + <span class="string">'个按钮被点击了'</span>);</span></span><br><span class="line">         &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="const使用和注意"><a href="#const使用和注意" class="headerlink" title="const使用和注意"></a>const使用和注意</h2><p><strong>在使用ES6开发中我们优先使用const，只当有需要改变一个标识符时才使用let</strong></p>
<ol>
<li>const的注意一：一旦给const修饰的标识符被赋值后，不能修改<ul>
<li>const a = 20;</li>
<li>a = 12;</li>
</ul>
</li>
<li>const的注意二:<ul>
<li>const name; //错误，必须赋值。</li>
</ul>
</li>
<li>const的注意三：常量的含义是指向的对象的指针引用不能被修改，但是内部属性可以被修改<ul>
<li>const obj = {<br>  id: 10,<br>  name: ‘why’,<br>  weight: 88<br>}</li>
<li>obj.id = 12;</li>
<li>obj.name = ‘Lemon’;</li>
<li>obj.weight = 90;</li>
</ul>
</li>
</ol>
<h2 id="ES6字面量的增强写法"><a href="#ES6字面量的增强写法" class="headerlink" title="ES6字面量的增强写法"></a>ES6字面量的增强写法</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//1.属性的增强写法</span></span><br><span class="line">    <span class="keyword">const</span> name = <span class="string">'lemon'</span>;</span><br><span class="line">    <span class="keyword">const</span> age = <span class="number">18</span>;</span><br><span class="line">    <span class="keyword">const</span> height = <span class="number">1.88</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ES5的写法</span></span><br><span class="line">    <span class="keyword">const</span> obj1 = &#123;</span><br><span class="line">      name: name,</span><br><span class="line">      age: age,</span><br><span class="line">      height: height</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ES6的写法</span></span><br><span class="line">    <span class="keyword">const</span> obj2 = &#123;</span><br><span class="line">      name,</span><br><span class="line">      age,</span><br><span class="line">      height</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.方法的简写：</span></span><br><span class="line">    <span class="comment">//ES6之前</span></span><br><span class="line">    <span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">      test: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">""</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ES6的写法</span></span><br><span class="line">    <span class="keyword">let</span> obj2 = &#123;</span><br><span class="line">      test() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">""</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.jianshu.com/p/d23a506cdca2" target="_blank" rel="noopener">进阶链接</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>JS</tag>
        <tag>ES6</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建到部署教程</title>
    <url>/2815155592/</url>
    <content><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>在正式安装 Hexo 之前，我们需要确认电脑中是否已安装下列应用程序:</p>
<a id="more"></a>
<ul>
<li><p>GitHub 账号</p>
</li>
<li><p>Node.js</p>
<blockquote>
<p><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">详情安装教程</a><br>  查看Node版本：node -v</p>
</blockquote>
</li>
<li><p>Git</p>
<blockquote>
<p><a href="https://blog.csdn.net/weixin_44950987/article/details/102619708" target="_blank" rel="noopener">详情安装教程</a><br>  查看git版本：$ git version</p>
</blockquote>
<ul>
<li>打开git的.ssh目录(我的是C:\Users\Administrator.ssh)，然后右键git bash如下图:<br><img src="https://img-blog.csdnimg.cn/20200225120130407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></li>
<li>执行如下命令：  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的用户名"</span>  </span><br><span class="line">git config --global user.email 你的邮箱  </span><br><span class="line">ssh-keygen -t rsa -C <span class="string">"你的邮箱"</span> </span><br><span class="line"><span class="comment">// 记住三下回车，提示y/n就输入y</span></span><br></pre></td></tr></table></figure></li>
<li>添加SSH key到github或者gitee: 复制密钥文件内容（路径形如C:\Users\Administrator.ssh\id_rsa.pub），粘贴到New SSH Key即可</li>
<li>测试是否添加成功。在命令行（即Git Bash）依次输入以下命令，返回“You’ve successfully authenticated”即成功  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>


</li>
</ul>
</li>
</ul>
<h2 id="在本地安装Hexo"><a href="#在本地安装Hexo" class="headerlink" title="在本地安装Hexo"></a>在本地安装Hexo</h2><p>全局安装Hexo，在cmd中运行以下命令：<br>npm install -g hexo-cli</p>
<p>安装淘宝镜像源：</p>
<blockquote>
<p>方式一：npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a><br>方式二：npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a><br>检验：npm config get registry<br>再安装：<br>npm install -g cnpm</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200228101909121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p>所有必备的应用程序安装完成后，即可使用 cnpm 安装 Hexo。在blog文件下右键点击Git Bash here，输入如下命令:</p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><blockquote>
<p>hexo g #完整命令为hexo generate,生成静态文件<br>hexo s #完整命令为hexo server,启动服务器,本地可以测试<br>hexo d #完整命令为hexo deploy,将本地编译好的静态文件发布到github上<br>hexo n #完整命令为hexo new,新建一篇文章<br>hexo clean #清除当前项目的静态文件<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br>hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s #加载豆瓣插件部署博客</p>
</blockquote>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>以下都是在博客根目录下操作~/blog </p>
<blockquote>
<p>npm install -g hexo</p>
</blockquote>
<h3 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h3><blockquote>
<p>$ hexo init</p>
</blockquote>
<h3 id="安装本地预览服务"><a href="#安装本地预览服务" class="headerlink" title="安装本地预览服务"></a>安装本地预览服务</h3><blockquote>
<p>在博客根目录 npm i hexo-server</p>
</blockquote>
<h3 id="生成和本地预览"><a href="#生成和本地预览" class="headerlink" title="生成和本地预览"></a>生成和本地预览</h3><blockquote>
<p>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</p>
</blockquote>
<h3 id="查看浏览器-localhost-4000"><a href="#查看浏览器-localhost-4000" class="headerlink" title="查看浏览器:localhost:4000"></a>查看浏览器:localhost:4000</h3><p><img src="https://ask.qcloudimg.com/http-save/yehe-4220914/tutewqpbhm.jpeg?imageView2/2/w/1620" alt="原始界面"></p>
<h2 id="部署博客到-GitHub-Pages"><a href="#部署博客到-GitHub-Pages" class="headerlink" title="部署博客到 GitHub Pages"></a>部署博客到 GitHub Pages</h2><ul>
<li>创建一个repo，名称为yourname.github.io, 其中yourname是你的github名称，按照这个规则创建才有用</li>
<li><blockquote>
<p>npm install hexo-deployer-git –save</p>
</blockquote>
</li>
<li>更改自己博客的_config.yml文件，找到如下代码  <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: 仓库的ssh链接</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></li>
<li>上传到自己建立的仓库：hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy</li>
<li>访问网站方式：<a href="https://yourname.github.io/" target="_blank" rel="noopener">https://yourname.github.io/</a><br><a href="https://cloud.tencent.com/developer/article/1520557" target="_blank" rel="noopener">具体可以参考</a></li>
</ul>
<h2 id="部署到gitee"><a href="#部署到gitee" class="headerlink" title="部署到gitee"></a>部署到gitee</h2><p>基本步骤跟github的相同，但是有几个需要注意的点：<br>1.hexo的yml配置文件,一致<br><img src="https://img-blog.csdnimg.cn/20200228102114858.png" alt=""><br>2.需要额外修改root路径，否则css这种静态资源加载不到：</p>
<ul>
<li>blog是你的仓库名</li>
<li>url是你仓库在服务里面开通pages后的访问博客地址<br><img src="https://img-blog.csdnimg.cn/20200228102501186.png" alt=""><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3>搭建好了博客，也有了hexo，但是报错:ERROR Local hexo not found in D:\hexo 解决：</li>
</ul>
<p>1.cmd进入博客当前文件夹路径<br>2.执行 npm install<br>3.执行 hexo server<br>4.执行成功后,再到博客下的git中执行 hexo d /hexo g 发现可以执行成功。</p>
<h2 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h2><p>以下我以阿里云服务器的centos系统为例：<br>1.搭建git环境<br>xshell进入后台，安装git</p>
<blockquote>
<p>yum install git </p>
</blockquote>
<p>然后</p>
<blockquote>
<p>git –version  </p>
</blockquote>
<p>查看git版本<br>创建一个git用户，然后按照以下代码步骤一步一步完成：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">adduser git <span class="comment">//添加git用户</span></span><br><span class="line">passwd git <span class="comment">// 设置git密码  </span></span><br><span class="line">su git <span class="comment">// 切换用户  </span></span><br><span class="line">cd /home/git/   <span class="comment">//进入git目录  </span></span><br><span class="line">mkdir -p projects/blog <span class="comment">// 创建文件来放置hexo静态工程  </span></span><br><span class="line">mkdir repos &amp;&amp; cd repos <span class="comment">//创建文件放置git仓库  </span></span><br><span class="line">git init --bare blog.git <span class="comment">// 创建一个裸露的仓库  </span></span><br><span class="line">cd blog.git/hooks  <span class="comment">//进入钩子目录</span></span><br><span class="line">vi post-receive <span class="comment">//创建hook钩子函数(git提交时自动部署)  </span></span><br><span class="line"></span><br><span class="line">hook钩子函数内容:  (注xshell命令vi/vim这两个命令的用法，输入之后按一下i字母键代表输入，输入完了之后，先按Esc键，再输入:wq代表保存退出，:q是退出不保存)</span><br><span class="line">#!/bin/sh </span><br><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure>

<p>修改权限</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">chmod +x post-receive</span><br><span class="line">exit <span class="comment">// 退出到 root 登录</span></span><br><span class="line">chown -R git:git /home/git/repos/blog.git <span class="comment">// 添加权限</span></span><br></pre></td></tr></table></figure>

<p>2.建立ssh免密登录：<br>这里注意，还是git用户，不能退出，不能切换到root管理用户<br>创建authorized_keys文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">su git     <span class="comment">//切换git用户</span></span><br><span class="line">cd /home/git   <span class="comment">//进入git目录</span></span><br><span class="line">mkdir .ssh  <span class="comment">//创建免密公匙目录</span></span><br><span class="line">cd /home/git/.ssh  <span class="comment">//注意是用git用户进这个目录，不是root</span></span><br><span class="line">touch authorized_keys  <span class="comment">//存放客户端的ssh公钥(id_rsa.pub)  </span></span><br><span class="line">chmod <span class="number">600</span> authorized_keys   <span class="comment">//配置权限  </span></span><br><span class="line">cd .. <span class="comment">//退出.ssh目录  </span></span><br><span class="line">chmod <span class="number">700</span> .ssh  <span class="comment">//.ssh目录必须700权限</span></span><br></pre></td></tr></table></figure>

<p>然后用winscap远程连接服务器，打开这个文件，注意看以下操作：<br>客户端本地(就是我自己的电脑)进入.ssh目录，右键git bash，同上面的操作，然后输入如下命令:<br>cat id_rsa.pub，复制公匙key，从ssh-rsa开始复制到最后的邮箱地址.com,如下图:<br><img src="https://img-blog.csdnimg.cn/20200225120801405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="免密key"></p>
<p>粘贴到刚刚前面winscap打开的authorized_keys里面，复制完了注意，粘贴的时候后面不能有任何的空格和回车，最后是鼠标点到最后，按del键清空下，这里就是把本地的id_rsa.pub内容复制到authorized_keys里面<br>测试下能否本地免密登录，首次联系会提示你输入yes，然后输入密码，如下图：<br><img src="https://img-blog.csdnimg.cn/20200225120949794.png" alt="首次连接"><br><img src="https://img-blog.csdnimg.cn/20200225121023583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="免密成功"></p>
<p>到这里免密成功，服务器git环境搭建完成，测试下能否可能服务器的目录到本地：<br>随便打开一个文件夹，输入以下命令：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">git clone git<span class="meta">@server</span>_ip:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure>
<p>成功以后如下：<br><img src="https://img-blog.csdnimg.cn/20200225121134137.png" alt="克隆成功"></p>
<p>3.限制git登录<br>git用户的登录权限禁掉，只能clone和push，修改目录/etc/下面的passwd文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cat /etc/shells <span class="comment">// 查看`git-shell`是否在登录方式里面，有则跳过</span></span><br><span class="line">which git-shell <span class="comment">// 查看是否安装 </span></span><br><span class="line">vi /etc/shells</span><br><span class="line">添加(which git-shell)显示出来的路劲，通常在 /usr/bin/git-shell</span><br></pre></td></tr></table></figure>

<p>修改</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd /etc  </span><br><span class="line">vi passwd</span><br></pre></td></tr></table></figure>

<p>更改方式如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">将原来的</span><br><span class="line">git:x:<span class="number">1000</span>:<span class="number">1000</span>:/home/git:/bin/bash <span class="comment">//原来的</span></span><br><span class="line">修改为:</span><br><span class="line">git:x:<span class="number">1000</span>:<span class="number">1000</span>:/home/git:/usr/bin/git-shell <span class="comment">//修改后的</span></span><br></pre></td></tr></table></figure>

<p>4.nginx配置<br>这里非常重点，特别注意，容易出很多错。所以在root根目录，先执行以下几个命令，执行过程中就不会报错了:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">yum update  <span class="comment">//更新  </span></span><br><span class="line">yum -y install pcre-devel openssl openssl-devel  </span><br><span class="line">yum -y install gcc-c++  </span><br><span class="line">yum install -y zlib-devel</span><br></pre></td></tr></table></figure>

<p>然后安装nginx，执行以下命令，一步一步来:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">centos8系统自带nginx，所以直接yum  </span><br><span class="line">yum install nginx  <span class="comment">//安装</span></span><br><span class="line">nginx -t  <span class="comment">//测试安装  </span></span><br><span class="line">systemctl enable nginx  <span class="comment">//添加系统自启动</span></span><br><span class="line">systemctl start nginx  <span class="comment">//启动服务,还有stop/restart</span></span><br></pre></td></tr></table></figure>

<p>以上代码只要前面的环境都安装了，到这里不会报任何错误的，然后修改nginx配置文件：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cd /etc/nginx/</span><br><span class="line">vi nginx.conf</span><br><span class="line">修改 root 路径为: /home/git/projects/blog; </span><br><span class="line">同时将 user 改为 root</span><br></pre></td></tr></table></figure>

<p>如下图，改三个地方：<br><img src="https://img-blog.csdnimg.cn/20200225121443220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="修改处"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#user everyone;修改为user root; //注意去掉#字符  </span><br><span class="line">server_name localhost;修改为server_name 你的域名or公网IP  </span><br><span class="line">root index;修改为root /home/git/projects/blog;</span><br></pre></td></tr></table></figure>

<p>改完后记得systemctl restart nginx，就可以访问你的域名啦</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">npm  run  start</span><br></pre></td></tr></table></figure>

<p>5.修改hexo配置<br>返回本地hexo根目录，找到_system.yml，代码样式如下:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git<span class="meta">@serverId</span>:/home/git/repos/blog.git  <span class="comment">//serverID是你的服务器地址或者git地址</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>如果有多个仓库，repo这里填写方式一定要特别注意：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">repo:</span><br><span class="line">  linxu: git<span class="meta">@serverId</span>:/home/git/repos/blog.git <span class="comment">//注意缩进</span></span><br><span class="line">  github: git<span class="meta">@your</span> git site    <span class="comment">//注意缩进</span></span><br></pre></td></tr></table></figure>
<p>每个仓库都可以命名一个名称,我自己的就写的linxu,还有例如github等等，这个可以随便写，没有规定，但是要</p>
<p>特别注意，多个仓库并列，必须要缩进，不能和repo并齐，否则上传会出错</p>
<p>6.上传测试<br>至此，所有配置均完成，然后本地cmd写一篇文章测试下</p>
<blockquote>
<p>hexo new hello</p>
</blockquote>
<p>生成的hello.md文件在myblog/source/_pos下面，打开可以看到发现默认的文章title就是你新建的hello.md</p>
<p>的hello，这里有个小技巧，修改myblog\scaffolds下面的post.md，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;  <span class="comment">//标题：注意窍门，hexo new的是你网页打开的链接显示，title可以改成中文</span></span><br><span class="line">date: &#123;&#123; date &#125;&#125;  <span class="comment">//时间轴</span></span><br><span class="line">top:   <span class="comment">//置顶排序，数字越大越靠前</span></span><br><span class="line">categories:   <span class="comment">//分类</span></span><br><span class="line">tags:   <span class="comment">//标签</span></span><br></pre></td></tr></table></figure>
<p>这样下次新建文章，就带有上面的这些字段了，</p>
<h2 id="博客美化"><a href="#博客美化" class="headerlink" title="博客美化"></a>博客美化</h2><h3 id="两个yml文件"><a href="#两个yml文件" class="headerlink" title="两个yml文件"></a>两个yml文件</h3><p>以下next主题为例：</p>
<ul>
<li>站点配置文件，位于站点文件夹根目录内<ul>
<li>~/blog/_config.yml</li>
</ul>
</li>
<li>主题配置文件，位于主题文件夹根目录内<ul>
<li>~/blog/themes/next/_config.yml<h3 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h3>如更换成yilia主题</li>
</ul>
</li>
<li>下载主题<ul>
<li>git clone <a href="https://github.com/litten/hexo-theme-yilia.git" target="_blank" rel="noopener">https://github.com/litten/hexo-theme-yilia.git</a></li>
</ul>
</li>
<li>配置文件 _config.yml 中指定所使用的 theme：yilia</li>
<li>安装插件<ul>
<li>npm install –save-dev 插件名</li>
</ul>
</li>
<li>注：可以使用<strong>cnpm</strong>替换npm，下载速度更快，安装淘宝镜像源即可。<h3 id="yilia主题"><a href="#yilia主题" class="headerlink" title="yilia主题"></a>yilia主题</h3></li>
</ul>
<ol>
<li>起初小杨是根据B站视频来搭建的，选择的yilia主题<a href="https://www.bilibili.com/video/av62400697?t=274&p=9" target="_blank" rel="noopener">hexo + yilia主题</a><br>但是主题里面都没有很是中意的，遂改成了Next主题，更加符合我的审美。</li>
<li>具体的主题优化配置可以参考如下文档:<ul>
<li><a href="https://www.liuyun.fun/2018/04/07/Hexo_yilia_%E4%B8%BB%E9%A2%98%E4%B8%80%E6%8F%BD%E5%AD%90%E4%BC%98%E5%8C%96%E6%96%B9%E6%A1%88/" target="_blank" rel="noopener">Hexo_yilia_主题一揽子优化方案</a></li>
<li><a href="https://blog.csdn.net/qq_30930805/article/details/97623045" target="_blank" rel="noopener">集成码云和github评论</a></li>
</ul>
</li>
</ol>
<h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><p>###动态背景<br><img src="https://io-oi.me/images/hexo-next-optimization-2.gif" alt="仰慕很久了的，总觉得很好玩"></p>
<ul>
<li>在主题配置文件中，靠后面，改 canvas_nest: true，想要更改颜色和数量？<a href="https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md" target="_blank" rel="noopener">请参考</a><br>修改文件：<blockquote>
<p>文件位置：~/blog/themes/next/source/lib/canvas-nest/canvas-nest.min.js<br>###使用腾讯云给博客添加动态相册功能<br><a href="https://me.idealli.com/post/73ad4183.html" target="_blank" rel="noopener">参考小鸡</a>，哈哈，所有的坑我都踩过一遍了，最后幸好出来了<br>基于此，完善步骤如下：</p>
</blockquote>
</li>
</ul>
<p>1.创建腾讯云cos存储桶<br><img src="https://me.idealli.com/images/blog/18122202.jpg" alt=""><br>2.跨域访问cors设置</p>
<ul>
<li>在基础配置中找到cors设置<br>  <img src="https://me.idealli.com/images/blog/18122201.jpg" alt="引用小鸡的"><br>  origin源可以先填为*，然后后面成功了再改成自己的博客地址<br>  <img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/cors%E4%BF%AE%E6%94%B9%E8%A7%84%E5%88%99.png" alt="引用小鸡的"></li>
</ul>
<p>3.Policy权限设置</p>
<ul>
<li>存储桶访问权限：一般共有读私有写就行, 权限不配置访问存储桶域名可能会依然出现error节点<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE.png" alt=""></li>
</ul>
<p>4.本地创建相册页面<br>    &gt;$ hexo new page photos<br>    * 编辑source/photos路径下的index.md文件，写入以下代码:<br>    <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"box"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function loadXMLDoc(xmlUrl) </span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    try //Internet Explorer</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        xmlDoc=new ActiveXObject("</span>Microsoft.XMLDOM<span class="string">");</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    catch(e)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">    try //Firefox, Mozilla, Opera, etc.</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">        xmlDoc=document.implementation.createDocument("</span><span class="string">","</span><span class="string">",null);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    catch(e) &#123;alert(e.message)&#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    try </span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        xmlDoc.async=false;</span></span><br><span class="line"><span class="string">        xmlDoc.load(xmlUrl);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    catch(e) &#123;</span></span><br><span class="line"><span class="string">        try //Google Chrome  </span></span><br><span class="line"><span class="string">        &#123;  </span></span><br><span class="line"><span class="string">            var chromeXml = new XMLHttpRequest();</span></span><br><span class="line"><span class="string">            chromeXml.open("</span>GET<span class="string">", xmlUrl, false);</span></span><br><span class="line"><span class="string">            chromeXml.send(null);</span></span><br><span class="line"><span class="string">            xmlDoc = chromeXml.responseXML.documentElement; 				</span></span><br><span class="line"><span class="string">            //alert(xmlDoc.childNodes[0].nodeName);</span></span><br><span class="line"><span class="string">            //return xmlDoc;    </span></span><br><span class="line"><span class="string">        &#125;  </span></span><br><span class="line"><span class="string">        catch(e)  </span></span><br><span class="line"><span class="string">        &#123;  </span></span><br><span class="line"><span class="string">            alert(e.message)  </span></span><br><span class="line"><span class="string">        &#125;  		  	</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    return xmlDoc; </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var xmllink="</span>你的访问域名链接<span class="string">"</span></span><br><span class="line"><span class="string">//访问域名链接就是我上面提到的那个访问域名xml链接</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">xmlDoc=loadXMLDoc(xmllink);</span></span><br><span class="line"><span class="string">var urls=xmlDoc.getElementsByTagName('Key');</span></span><br><span class="line"><span class="string">var date=xmlDoc.getElementsByTagName('LastModified');</span></span><br><span class="line"><span class="string">var wid=250;</span></span><br><span class="line"><span class="string">var showNum=12; //每个相册一次展示多少照片</span></span><br><span class="line"><span class="string">if ((window.innerWidth)&gt;1200) &#123;wid=(window.innerWidth*3)/18;&#125;</span></span><br><span class="line"><span class="string">var box=document.getElementById('box');</span></span><br><span class="line"><span class="string">var i=0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var content=new Array();</span></span><br><span class="line"><span class="string">var tmp=0;</span></span><br><span class="line"><span class="string">var kkk=-1;</span></span><br><span class="line"><span class="string">for (var t = 0; t &lt; urls.length ; t++) &#123;</span></span><br><span class="line"><span class="string">    var bucket=urls[t].innerHTML;</span></span><br><span class="line"><span class="string">    var length=bucket.indexOf('/');</span></span><br><span class="line"><span class="string">    if(length===bucket.length-1)&#123;</span></span><br><span class="line"><span class="string">        kkk++;</span></span><br><span class="line"><span class="string">        content[kkk]=new Array();</span></span><br><span class="line"><span class="string">        content[kkk][0]=&#123;'url':bucket,'date':date[t].innerHTML.substring(0,10)&#125;;</span></span><br><span class="line"><span class="string">        tmp=1;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else &#123;</span></span><br><span class="line"><span class="string">        content[kkk][tmp++]=&#123;'url':bucket.substring(length+1),'date':date[t].innerHTML.substring(0,10)&#125;;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for (var i = 0; i &lt; content.length; i++) &#123;</span></span><br><span class="line"><span class="string">    var conBox=document.createElement("</span>div<span class="string">");</span></span><br><span class="line"><span class="string">    conBox.id='conBox'+i;</span></span><br><span class="line"><span class="string">    box.appendChild(conBox);</span></span><br><span class="line"><span class="string">    var item=document.createElement("</span>div<span class="string">");</span></span><br><span class="line"><span class="string">    var title=content[i][0].url;</span></span><br><span class="line"><span class="string">    item.innerHTML="</span>&lt;button <span class="class"><span class="keyword">class</span></span>=title style=background:url(<span class="string">"+xmllink+'/'+title+"</span>封面.jpg<span class="string">"+"</span>);&gt;<span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">display:inline;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span> <span class="attr">style</span>=<span class="string">color:#f0f3f6;</span> &gt;</span>"+title.substring(0,title.length-1)+"<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>&lt;<span class="regexp">/button&gt;";</span></span><br><span class="line"><span class="regexp">    conBox.appendChild(item);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    for (var j = 1; j &lt; content[i].length &amp;&amp; j &lt; showNum+1; j++) &#123;</span></span><br><span class="line"><span class="regexp">        var con=content[i][j].url;</span></span><br><span class="line"><span class="regexp">        var item=document.createElement("li");</span></span><br><span class="line"><span class="regexp">        item.innerHTML="&lt;div class=imgbox id=imgbox style=height:"+wid+"px;&gt;&lt;img class=imgitem src="+xmllink+'/</span><span class="string">'+title+con+" alt="+con+"&gt;&lt;/div&gt;&lt;span&gt;"+con.substring(0,con.length-4)+"&lt;/span&gt;&lt;p&gt;上传于"+content[i][j].date+"&lt;/p&gt;";</span></span><br><span class="line"><span class="string">        conBox.appendChild(item);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if(content[i].length &gt; showNum)&#123;</span></span><br><span class="line"><span class="string">        var moreItem=document.createElement("button");</span></span><br><span class="line"><span class="string">        moreItem.className="btn-more-posts";</span></span><br><span class="line"><span class="string">        moreItem.id="more"+i;</span></span><br><span class="line"><span class="string">        moreItem.value=showNum+1;</span></span><br><span class="line"><span class="string">        let cur=i;</span></span><br><span class="line"><span class="string">        moreItem.onclick= function ()&#123;</span></span><br><span class="line"><span class="string">            moreClick(this,cur,content[cur],content[cur][0].url);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        moreItem.innerHTML="&lt;span style=display:inline;&gt;&lt;strong style=color:#f0f3f6;&gt;加载更多&lt;/strong&gt;&lt;/span&gt;";</span></span><br><span class="line"><span class="string">        conBox.appendChild(moreItem);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function moreClick(obj,cur,cont,title)&#123;</span></span><br><span class="line"><span class="string">    var parent=obj.parentNode;</span></span><br><span class="line"><span class="string">    parent.removeChild(obj);</span></span><br><span class="line"><span class="string">    var j=obj.value;</span></span><br><span class="line"><span class="string">    var begin=j;</span></span><br><span class="line"><span class="string">    for ( ; j &lt; cont.length &amp;&amp; j &lt; Number(showNum) + Number(begin); j++) &#123;</span></span><br><span class="line"><span class="string">        console.log( Number(showNum) + Number(begin));</span></span><br><span class="line"><span class="string">        var con=cont[j].url;</span></span><br><span class="line"><span class="string">        var item=document.createElement("li");</span></span><br><span class="line"><span class="string">        item.innerHTML="&lt;div class=imgbox id=imgbox style=height:"+wid+"px;&gt;&lt;img class=imgitem src="+xmllink+'</span>/<span class="string">'+title+con+" alt="+con+"&gt;&lt;/div&gt;&lt;span&gt;"+con.substring(0,con.length-4)+"&lt;/span&gt;&lt;p&gt;上传于"+cont[j].date+"&lt;/p&gt;";</span></span><br><span class="line"><span class="string">        parent.appendChild(item);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    if(cont.length &gt; j)&#123;</span></span><br><span class="line"><span class="string">        obj.value=j;</span></span><br><span class="line"><span class="string">        parent.appendChild(obj);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><br>    * 相册样式可以自行去调整<br>    * 注意：<br>        * 存储桶中应该必须是文件夹，不能图片和文件夹同级，否则报错：Uncaught ypeError: Cannot set property ‘0’ of undefined，</p>
<h3 id="手动修改博客css样式，打造属于自己的博客样式"><a href="#手动修改博客css样式，打造属于自己的博客样式" class="headerlink" title="手动修改博客css样式，打造属于自己的博客样式"></a>手动修改博客css样式，打造属于自己的博客样式</h3><ul>
<li>F12手动查看网页</li>
<li>自己主题的themes extsourcecss_custom目录下的custom.styl文件<h3 id="自定义文章底部版权声明"><a href="#自定义文章底部版权声明" class="headerlink" title="自定义文章底部版权声明"></a>自定义文章底部版权声明</h3></li>
</ul>
<ol>
<li>在目录 themes/next/layout/_macro/ 下添加 my-copyright.swig ，内容如下： <figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if page.copyright %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my_post_copyright"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JS库 sweetalert 可修改路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>本文标题:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>文章作者:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; theme.author &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>发布时间:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>最后更新:<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>原始链接:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(page.path) &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; page.title &#125;&#125;"</span>&gt;</span>&#123;&#123; page.permalink &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"copy-path"</span>  <span class="attr">title</span>=<span class="string">"点击复制文章链接"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-clipboard"</span> <span class="attr">data-clipboard-text</span>=<span class="string">"&#123;&#123; page.permalink &#125;&#125;"</span>  <span class="attr">aria-label</span>=<span class="string">"复制成功！"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>许可协议:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-creative-commons"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">"license"</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"</span>&gt;</span>署名-非商业性使用-禁止演绎 4.0 国际<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 转载请保留原文链接及作者。<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> clipboard = <span class="keyword">new</span> Clipboard(<span class="string">'.fa-clipboard'</span>);</span></span><br><span class="line"><span class="javascript">    clipboard.on(<span class="string">'success'</span>, $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">".fa-clipboard"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">        swal(&#123;   </span><br><span class="line"><span class="actionscript">        title: <span class="string">""</span>,   </span></span><br><span class="line"><span class="actionscript">        text: <span class="string">'复制成功'</span>,   </span></span><br><span class="line"><span class="actionscript">        html: <span class="literal">false</span>,</span></span><br><span class="line">        timer: 500,   </span><br><span class="line"><span class="actionscript">        showConfirmButton: <span class="literal">false</span></span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &#125;));  </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>
<li>在目录 themes/next/source/css/_common/components/post/ 下添加 my-post-copyright.styl，内容如下:<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.my_post_copyright</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">85%</span>;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">45em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2.8em</span> auto <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1.0em</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d3d3d3</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.93rem</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">    <span class="attribute">word-break</span>: break-all;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.4</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5.2em</span>;</span><br><span class="line">    color: #333333; // title color</span><br><span class="line">    <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.raw</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>:<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    color: #0593d3; // link color</span><br><span class="line">    <span class="selector-tag">text-decoration</span>: <span class="selector-tag">underline</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.fa-clipboard</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.post-url</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">    +mobile()&#123;display:none;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.my_post_copyright</span> <span class="selector-class">.copy-path</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#808080</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li>修改 themes/next/layout/_macro/post.swig ，如下：<br>在代码<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;% include 'wechat-subscriber.swig' %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
之前，新增如下代码：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &#123;% include 'my-copyright.swig' %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>打开 themes/next/source/css/_common/components/post/post.styl 文件，在最后一行增加代码:<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"my-post-copyright"</span></span><br></pre></td></tr></table></figure></li>
<li>设置新建文章自动开启 copyright ，即新建文章自动显示自定义的版权声明，设置 ～/scaffolds/post.md 文件，如下：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">copyright: true #新增,开启</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h3 id="建立标签云及效果展示"><a href="#建立标签云及效果展示" class="headerlink" title="建立标签云及效果展示"></a>建立标签云及效果展示</h3><a href="http://www.aomanhao.top/2019/04/20/hexo_Tag_cloud/" target="_blank" rel="noopener">Hexo博客建立标签云及效果展示</a><h3 id="Hexo文章简单加密访问"><a href="#Hexo文章简单加密访问" class="headerlink" title="Hexo文章简单加密访问"></a>Hexo文章简单加密访问</h3><a href="https://blog.paddings.cn/2016/12/01/blog/hexo-password/" target="_blank" rel="noopener">教程：密码 password</a><h3 id="在Hexo博客中加入豆瓣读书页面"><a href="#在Hexo博客中加入豆瓣读书页面" class="headerlink" title="在Hexo博客中加入豆瓣读书页面"></a>在Hexo博客中加入豆瓣读书页面</h3><a href="https://bestzuo.cn/posts/hexo-douban.html" target="_blank" rel="noopener">参考链接</a></li>
</ol>
<hr>
<p><a href="https://io-oi.me/tech/hexo-next-optimization/#%E5%9C%A8%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85-hexo" target="_blank" rel="noopener">参考文档：打造个性超赞博客 Hexo + NexT + GitHub Pages 的超深度优化</a><br><a href="https://www.liaofuzhan.com/posts/2114475547.html" target="_blank" rel="noopener">参考文档：Hexo NexT主题美化2.0</a><br><a href="https://www.chenuon.com/2020/01/29/code-hexo-git-nginx/" target="_blank" rel="noopener">参考文档：hexo部署到个人服务器</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis小笔记</title>
    <url>/477450866/</url>
    <content><![CDATA[<p>本文旨在记录我在idea中使用mybatis时的经验总结<br><br></p>
<a id="more"></a>

<h2 id="基本规范："><a href="#基本规范：" class="headerlink" title="基本规范："></a>基本规范：</h2><ol>
<li><p>Base_Column</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;sql id="Base_Column"&gt;</span><br><span class="line">  ID,USER_NAME,PASSWORD,CREATE_TIME,UPDATE_TIME,HEAD_PORTRAIT,STATUS</span><br><span class="line">&lt;/sql&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Base_Where</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;sql id="Base_Where"&gt;</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">      &lt;if test="id != null and id != ''"&gt;</span><br><span class="line">          AND ID=<span class="comment">#&#123;id&#125;</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test="userName != null and userName != ''"&gt;</span><br><span class="line">          AND USER_NAME like concat('%',<span class="comment">#&#123;userName&#125;,'%')</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test="password != null and password != ''"&gt;</span><br><span class="line">          AND PASSWORD=md5(<span class="comment">#&#123;password&#125;)</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">      &lt;if test="status != null"&gt;</span><br><span class="line">          AND STATUS=<span class="comment">#&#123;status&#125;</span></span><br><span class="line">      &lt;/if&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">&lt;/sql&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Update_Column</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;sql id="Update_Column"&gt;</span><br><span class="line">  &lt;set&gt;</span><br><span class="line">      &lt;if test="userName != null and userName!= ''"&gt;USER_NAME =#&#123;userName&#125;,&lt;/if&gt;</span><br><span class="line">      &lt;if test="password != null and password!= ''"&gt;PASSWORD=md5(#&#123;password&#125;),&lt;/if&gt;</span><br><span class="line">      &lt;if test="headPortrait != null and headPortrait != ''"&gt;HEAD_PORTRAIT=#&#123;headPortrait&#125;,&lt;/if&gt;</span><br><span class="line">      &lt;if test="updateTime != null"&gt;UPDATE_TIME=#&#123;updateTime&#125;,&lt;/if&gt;</span><br><span class="line">      &lt;if test="status != null"&gt;STATUS=#&#123;status&#125;,&lt;/if&gt;</span><br><span class="line">  &lt;/set&gt;</span><br><span class="line">&lt;/sql&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="单表操作"><a href="#单表操作" class="headerlink" title="单表操作"></a>单表操作</h3><ol>
<li><p>新增</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;insert id="insertOneUser" parameterType="cn.blue.项目工程名.bean.UserInfo"</span><br><span class="line">        useGeneratedKeys="true" keyColumn="id" keyProperty="id"&gt;</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span></span><br><span class="line">    user_info(<span class="keyword">ID</span>,USER_NAME,<span class="keyword">PASSWORD</span>,CREATE_TIME)</span><br><span class="line">    <span class="keyword">VALUES</span>(<span class="comment">#&#123;id&#125;,#&#123;userName&#125;,md5(#&#123;password&#125;),now())</span></span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>查询: 根据封装进userInfo对象里的条件查询，结果可以是单个对象也可以是集合</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findOneUser" parameterType="cn.blue.项目工程名.bean.UserInfo" </span><br><span class="line">    resultType="cn.blue.项目工程名.bean.UserInfo"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;delete id="deleteById" parameterType="string"&gt;</span><br><span class="line">    <span class="keyword">DELETE</span> <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">delete</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;update id="deleteById" parameterType="string"&gt;</span><br><span class="line">    <span class="keyword">UPDATE</span> user_info <span class="keyword">SET</span> <span class="keyword">STATUS</span> = <span class="number">1</span></span><br><span class="line">    <span class="keyword">WHERE</span></span><br><span class="line">    <span class="keyword">id</span>=<span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/<span class="keyword">update</span>&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="两表查询"><a href="#两表查询" class="headerlink" title="两表查询"></a>两表查询</h3><ol>
<li><p>resultMap：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;resultMap type="cn.blue.项目工程名.bean.UserInfo" id="userInfoMap"&gt;</span><br><span class="line">    &lt;id column="ID" property="id"/&gt;</span><br><span class="line">    &lt;result column="USER_NAME" property="userName"/&gt;</span><br><span class="line">    &lt;result column="PASSWORD" property="password"/&gt;</span><br><span class="line">    &lt;result column="CREATE_TIME" property="createTime"/&gt;</span><br><span class="line">    &lt;result column="UPDATE_TIME" property="updateTime"/&gt;</span><br><span class="line">    &lt;result column="HEAD_PORTRAIT" property="headPortrait"/&gt;</span><br><span class="line">    &lt;result column="STATUS" property="status"/&gt;</span><br><span class="line">    &lt;collection column="ID" property="roles" ofType="cn.blue.项目工程名.bean.Role"</span><br><span class="line">                <span class="keyword">select</span>=<span class="string">"cn.blue.项目工程名.mapper.RoleMapper.findRoleById"</span>/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>UserInfoMapper中的查询语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findAll" parameterType="cn.blue.项目工程名.bean.UserInfo"</span><br><span class="line">        resultMap="userInfoMap"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>RoleMapper表中的查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findById" parameterType="int"</span><br><span class="line">    resultMap="roleMap"&gt;</span><br><span class="line">    <span class="keyword">select</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>&gt;&lt;/<span class="keyword">include</span>&gt;</span><br><span class="line">    <span class="keyword">from</span> <span class="keyword">role</span></span><br><span class="line">    <span class="keyword">where</span> <span class="keyword">id</span>=<span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h3 id="利用中间表过渡的两表查询"><a href="#利用中间表过渡的两表查询" class="headerlink" title="利用中间表过渡的两表查询"></a>利用中间表过渡的两表查询</h3><ol>
<li><p>resultMap：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;resultMap type="cn.blue.项目工程名.bean.UserInfo" id="userInfoMap"&gt;</span><br><span class="line">    &lt;id column="ID" property="id"/&gt;</span><br><span class="line">    &lt;result column="USER_NAME" property="userName"/&gt;</span><br><span class="line">    &lt;result column="PASSWORD" property="password"/&gt;</span><br><span class="line">    &lt;result column="CREATE_TIME" property="createTime"/&gt;</span><br><span class="line">    &lt;result column="UPDATE_TIME" property="updateTime"/&gt;</span><br><span class="line">    &lt;result column="HEAD_PORTRAIT" property="headPortrait"/&gt;</span><br><span class="line">    &lt;result column="STATUS" property="status"/&gt;</span><br><span class="line">    &lt;collection column="ID" property="roles" ofType="cn.blue.项目工程名.bean.Role"</span><br><span class="line">                <span class="keyword">select</span>=<span class="string">"cn.blue.项目工程名.mapper.RoleMapper.findRoleByUserId"</span>/&gt;</span><br><span class="line">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>UserInfoMapper中的查询语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findAll" parameterType="cn.blue.项目工程名.bean.UserInfo"</span><br><span class="line">        resultMap="userInfoMap"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> user_info</span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Where"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>RoleMapper中的查询语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;select id="findRoleByUserId" parameterType="int" resultType="cn.blue.项目工程名.bean.Role"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">    &lt;<span class="keyword">include</span> refid=<span class="string">"Base_Column"</span>/&gt;</span><br><span class="line">    <span class="keyword">FROM</span> <span class="keyword">role</span> r, user_role ur</span><br><span class="line">    <span class="keyword">WHERE</span> r.id=ur.role_id</span><br><span class="line">    <span class="keyword">AND</span> ur.user_id=<span class="comment">#&#123;userId&#125;</span></span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="遍历操作"><a href="#遍历操作" class="headerlink" title="遍历操作"></a>遍历操作</h3><ol>
<li>根据ids来删除:<br>注：前面ids是个数组，故需要以此表达：String[] ids<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*  支持批量删除用户</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> ids 多个用户id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> 受影响行数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteByIds</span><span class="params">(@Param(<span class="string">"ids"</span>)</span>String... ids)</span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;delete id=<span class="string">"deleteByIds"</span> parameterType=<span class="string">"string"</span>&gt;</span><br><span class="line">    DELETE FROM user_info</span><br><span class="line">    WHERE</span><br><span class="line">    &lt;foreach collection=<span class="string">"ids"</span> open=<span class="string">"id in ("</span> close=<span class="string">")"</span></span><br><span class="line">              separator=<span class="string">","</span> item=<span class="string">"id"</span>&gt;</span><br><span class="line">        #&#123;id&#125;</span><br><span class="line">    &lt;/foreach&gt;</span><br><span class="line">&lt;/delete&gt;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>根据用户id来在中间表中新增与之对应的角色ids：一对一或者一对多的关系<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 修改中间表user_role的id</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> userId 用户id</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> roleIds 角色id</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@return</span> 受影响行数</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addRolesByUserId</span><span class="params">(@Param(<span class="string">"userId"</span>)</span> String userId, @<span class="title">Param</span><span class="params">(<span class="string">"roleIds"</span>)</span> String[] roleIds)</span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">&lt;insert id="addRolesByUserId"&gt;</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> user_role</span><br><span class="line">    &lt;foreach collection=<span class="string">"roleIds"</span> <span class="keyword">open</span>=<span class="string">"values"</span> item=<span class="string">"roleId"</span> separator=<span class="string">","</span>&gt;</span><br><span class="line">        (<span class="comment">#&#123;userId&#125;,#&#123;roleId&#125;)</span></span><br><span class="line">    &lt;/foreach&gt;</span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title>ssm-crud项目</title>
    <url>/3618772320/</url>
    <content><![CDATA[<p>本文记录着我搭建ssm-crud项目时的主要代码实现，依次来熟悉ssm项目的搭建。<a href="https://github.com/onecoderly/crud" target="_blank" rel="noopener">github代码地址</a><br><br></p>
<a id="more"></a>
<h2 id="前端页面代码"><a href="#前端页面代码" class="headerlink" title="前端页面代码"></a>前端页面代码</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">contentType</span>=<span class="string">"text/html;charset=UTF-8"</span> <span class="attr">language</span>=<span class="string">"java"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">    /*引用<span class="attr">jsp-api</span>*/</span></span><br><span class="line"><span class="tag">    <span class="attr">pageContext.setAttribute</span>("<span class="attr">APP_PATH</span>", <span class="attr">request.getContextPath</span>());</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">prefix</span>=<span class="string">"c"</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>员工列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/bootstrap/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/bootstrap/css/bootstrap-theme.min.css"</span>&gt;</span>--%&gt;</span><br><span class="line">    <span class="comment">&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"$&#123;APP_PATH&#125;/resources/bootstrap/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%--搭建显示页面--%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--标题--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>SSM-CRUD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--按钮--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4 col-md-offset-8"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"table_add"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary btn"</span> <span class="attr">data-target</span>=<span class="string">"#myModal"</span>&gt;</span></span><br><span class="line">                新增</span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"table_del"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--显示表格数据--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%--设置表的网格状：table-bordered--%</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span> <span class="attr">id</span>=<span class="string">"emps_table"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span> <span class="attr">checkbox</span>=<span class="string">"true"</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>DeptName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">%--显示分页信息--%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%--分页文字信息--%</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_info_area"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%--分页条信息--%</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-6"</span> <span class="attr">id</span>=<span class="string">"page_nav_area"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nav</span> <span class="attr">aria-label</span>=<span class="string">"Page navigation"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%--员工修改的模态框--%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"updateModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span>&gt;</span>员工修改<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>EmpName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--</span>                            只读：<span class="attr">Readonly--</span>%&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_update"</span> <span class="attr">Readonly</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入员工用户名"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"empId"</span> <span class="attr">id</span>=<span class="string">"empId_update"</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--</span>                            静态实列<span class="attr">--</span>%&gt;</span></span><br><span class="line">                            &lt;%--&lt;p id="empName_update" class="form-control-static"&gt;&lt;/p&gt;--%&gt;</span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"email_update"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入合法邮箱"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--多选框--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_update"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_update"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span> 女</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>DeptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--部门提交部门id--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"deptId"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"btn_update"</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-dialog --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%--员工添加的模态框--%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">role</span>=<span class="string">"document"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-label</span>=<span class="string">"Close"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span>&gt;</span>员工添加<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"form-horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>EmpName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"empName"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empName_add"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入员工用户名"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"empEmail_add"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">placeholder</span>=<span class="string">"请输入合法邮箱"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--添加校验信息--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-10"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--多选框--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender1_add"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">id</span>=<span class="string">"gender2_add"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span> 女</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"col-sm-2 control-label"</span>&gt;</span>DeptName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-4"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">%--部门提交部门id--%</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">name</span>=<span class="string">"deptId"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span>=<span class="string">"model_save"</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-dialog --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"application/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//定义一个总记录数，为了后面新增后直接跳转到最后一页</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> totalRecord;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $(function () ncaught TypeError: e.indexOf is not a function</span></span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">window</span>).on(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"input[name='checkbox']"</span>).prop(<span class="string">"checked"</span>, <span class="literal">true</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// window.onload = function () ,同页面加载就会调函数</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"tr:checkbox"</span>).prop(<span class="string">"checked"</span>, <span class="keyword">this</span>.checked);</span></span><br><span class="line">        to_page(1);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">to_page</span><span class="params">(page)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/emps'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            data: <span class="string">"page="</span> + page,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(result)</span> </span>&#123;</span></span><br><span class="line">                if (result.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//解析并显示员工数据</span></span></span><br><span class="line">                    build_emps_table(result);</span><br><span class="line"><span class="actionscript">                    <span class="comment">//将总记录数复制给全局变量</span></span></span><br><span class="line">                    totalRecord = result.pageInfo.total;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//解析并显示分页信息</span></span></span><br><span class="line">                    build_page_info(result);</span><br><span class="line"><span class="actionscript">                    <span class="comment">//解析并显示分页条数据</span></span></span><br><span class="line">                    build_page_nav(result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">build_emps_table</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> emps = result.pageInfo.list;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#emps_table tbody"</span>).empty();</span></span><br><span class="line"><span class="javascript">        $.each(emps, <span class="function"><span class="keyword">function</span> (<span class="params">index, item</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> empId = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empId);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> empName = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.empName);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> gender = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.gender ? <span class="string">'男'</span> : <span class="string">'女'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> email = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.email);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> deptName = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(item.department.deptName);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> editBtn = $(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-primary btn-sm edit_btn"</span>)</span></span><br><span class="line"><span class="handlebars"><span class="xml">                .append("<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'padding-right: 3px;'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-paperclip")</span></span></span><br><span class="line"><span class="actionscript">                .append(<span class="string">"编辑"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//为每一行的编辑按钮添加一个属性,赋值给它</span></span></span><br><span class="line"><span class="actionscript">            editBtn.attr(<span class="string">"edit-id"</span>, item.empId);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> delBtn = $(<span class="string">"&lt;button&gt;&lt;/button&gt;"</span>).addClass(<span class="string">"btn btn-primary btn-sm delete_btn"</span>)</span></span><br><span class="line"><span class="handlebars"><span class="xml">                .append("<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'padding-right: 3px;'</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>").addClass("glyphicon glyphicon-trash")</span></span></span><br><span class="line"><span class="actionscript">                .append(<span class="string">"删除"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> btnOperation = $(<span class="string">"&lt;td&gt;&lt;/td&gt;"</span>).append(editBtn).append(delBtn);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//append方法执行后还是返回的原来的元素</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"&lt;tr&gt;&lt;/tr&gt;"</span>).append(empId)</span></span><br><span class="line">                .append(empName)</span><br><span class="line">                .append(email)</span><br><span class="line">                .append(gender)</span><br><span class="line">                .append(deptName)</span><br><span class="line">                .append(btnOperation)</span><br><span class="line"><span class="actionscript">                .appendTo(<span class="string">"#emps_table tbody"</span>);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">/*解析显示分页信息*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">build_page_info</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空元素方法，避免重复添加数据，成倍增长</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#page_info_area"</span>).empty();</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#page_info_area"</span>).append(<span class="string">"当前"</span> + result.pageInfo.pageNum + <span class="string">"页,总"</span> + result.pageInfo.pages + <span class="string">"页,总记录数"</span> + result.pageInfo.total);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">/*解析显示分页条*/</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">build_page_nav</span><span class="params">(result)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空元素方法，避免重复添加数据，成倍增长</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#page_nav_area"</span>).empty();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> ul = $(<span class="string">"&lt;ul&gt;&lt;/ul&gt;"</span>).addClass(<span class="string">"pagination"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//首页的li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> firstPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"首页"</span>).attr(<span class="string">'href'</span>, <span class="string">'#'</span>));</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> prePageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).append(<span class="string">"&amp;laquo;"</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//判断是否有上一页，为false就是首页，禁用</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (result.pageInfo.hasPreviousPage == <span class="literal">false</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            firstPageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">            prePageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//为首页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            firstPageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(1)</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">//为前一页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            prePageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(result.pageInfo.pageNum - 1);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> nextPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).append(<span class="string">"&amp;raquo;"</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//末页的li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> lastPageLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(<span class="string">"末页"</span>).attr(<span class="string">'href'</span>, <span class="string">'#'</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//如果为尾页，没有下一页，就禁用，也就不需要click函数触发</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (result.pageInfo.hasNextPage == <span class="literal">false</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            nextPageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">            lastPageLi.addClass(<span class="string">"disabled"</span>);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//为下一页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            nextPageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(result.pageInfo.pageNum + 1);</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">//为末页提供翻页</span></span></span><br><span class="line"><span class="actionscript">            lastPageLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(result.pageInfo.pages);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//添加首页和上一页在分页条中</span></span></span><br><span class="line">        ul.append(firstPageLi).append(prePageLi);</span><br><span class="line"><span class="actionscript">        <span class="comment">//遍历当前需要的导航条页码数,ep:1,2,3,4,5</span></span></span><br><span class="line"><span class="javascript">        $.each(result.pageInfo.navigatepageNums, <span class="function"><span class="keyword">function</span> (<span class="params">index, item</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> numLi = $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).append($(<span class="string">"&lt;a&gt;&lt;/a&gt;"</span>).append(item));</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//如果当前页码等于正在显示数据的页面，就激活图标颜色</span></span></span><br><span class="line">            if (result.pageInfo.pageNum == item) &#123;</span><br><span class="line"><span class="actionscript">                numLi.addClass(<span class="string">"active"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            numLi.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                to_page(item);</span><br><span class="line">            &#125;);</span><br><span class="line">            ul.append(numLi);</span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">//添加下一页和尾页在分页条中</span></span></span><br><span class="line">        ul.append(nextPageLi).append(lastPageLi);</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> navEle = $(<span class="string">"&lt;nav&gt;&lt;/nav&gt;"</span>).append(ul);</span></span><br><span class="line"><span class="actionscript">        navEle.appendTo(<span class="string">"#page_nav_area"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//点击新增按钮，弹出模态框</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#table_add"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//重置表单数据,但是span里的信息、input框颜色仍然有</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#myModal form"</span>)[<span class="number">0</span>].reset();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//清空span信息，重置input颜色</span></span></span><br><span class="line"><span class="actionscript">        show_validate_msg(<span class="string">"#empName_add"</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="actionscript">        show_validate_msg(<span class="string">"#empEmail_add"</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//查出下拉框里的部门名字</span></span></span><br><span class="line"><span class="actionscript">        getDepts(<span class="string">"#myModal select"</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#myModal'</span>).modal(&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//点击背景空白处不被关闭；</span></span></span><br><span class="line"><span class="actionscript">            backdrop: <span class="string">'static'</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//触发键盘esc事件时不关闭。</span></span></span><br><span class="line"><span class="actionscript">            keyboard: <span class="literal">false</span></span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//校验员工添加的表单数据</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">validate_add_form</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//1.拿到想要的数据，校验.  前端校验用户名</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> empName = $(<span class="string">"#empName_add"</span>).val();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//6-16位 或者 2-5位中文</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> regName = <span class="regexp">/(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\u2E80-\u9FFF]&#123;2,5&#125;)/</span>;</span></span><br><span class="line">        if (!regName.test(empName)) &#123;</span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"error"</span>, <span class="string">"需要输入6-16位字母和数字或者2-5位中文的组合"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"success"</span>, <span class="string">""</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> email = $(<span class="string">"#empEmail_add"</span>).val();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//双斜杠，转义</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> regEmail = <span class="regexp">/^([a-z0-9_-]+)@([\da-z.-]+)\.([a-z.]&#123;2,6&#125;)$/</span>;</span></span><br><span class="line">        if (!regEmail.test(email)) &#123;</span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empEmail_add"</span>, <span class="string">"error"</span>, <span class="string">"邮箱格式不合法"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            show_validate_msg(<span class="string">"#empEmail_add"</span>, <span class="string">"success"</span>, <span class="string">""</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//显示校验信息</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">show_validate_msg</span><span class="params">(ele, status, msg)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//每次点击都需要清空先前添加的元素</span></span></span><br><span class="line"><span class="javascript">        $(ele).parent().removeClass(<span class="string">"has-success has-error"</span>);</span></span><br><span class="line"><span class="javascript">        $(ele).next(<span class="string">"span"</span>).text();</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (status == <span class="string">"success"</span>) &#123;</span></span><br><span class="line"><span class="javascript">            $(ele).parent().addClass(<span class="string">"has-success"</span>);</span></span><br><span class="line"><span class="javascript">            $(ele).next(<span class="string">"span"</span>).text(msg);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status == <span class="string">"error"</span>) &#123;</span></span><br><span class="line"><span class="javascript">            $(ele).parent().addClass(<span class="string">"has-error"</span>);</span></span><br><span class="line"><span class="javascript">            $(ele).next(<span class="string">"span"</span>).text(msg);</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            $(ele).next(<span class="string">"span"</span>).text(msg);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//校验用户名是否可用，无重复</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#empName_add"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取员工用户名输入框的值, this表示当前#empName_add,这个含此id的对象html标签</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> empName = <span class="keyword">this</span>.value;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/checkName'</span>,</span></span><br><span class="line"><span class="actionscript">            data: <span class="string">'empName='</span> + empName,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"success"</span>, rs.msg);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#model_save"</span>).attr(<span class="string">"is_save"</span>, <span class="string">"success"</span>);</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"error"</span>, rs.msg);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#model_save"</span>).attr(<span class="string">"is_save"</span>, <span class="string">"error"</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//监听表头新增里模态框的保存按钮</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#model_save"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//序列化表单数据，</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> data = $(<span class="string">"#myModal form"</span>).serialize();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//校验数据</span></span></span><br><span class="line">        if (!validate_add_form()) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//检验是否有无错误信息，若有则不允许提交</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="keyword">this</span>).attr(<span class="string">"is_save"</span>) == <span class="string">"error"</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/save'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line">            data: data,</span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//关闭模态框，注意顺序</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#myModal'</span>).modal(<span class="string">'hide'</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//返回到最后一页，显示添加的数据</span></span></span><br><span class="line">                    to_page(totalRecord);</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(rs);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (rs.error.empName != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(rs.error.empName);</span></span><br><span class="line"><span class="actionscript">                        show_validate_msg(<span class="string">"#empName_add"</span>, <span class="string">"error"</span>, rs.error.empName);</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (rs.error.email != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                        show_validate_msg(<span class="string">"#email_add"</span>, <span class="string">"error"</span>, rs.error.email);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">//查出所有的部门信息并显示在x下拉列表中</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getDepts</span><span class="params">(ele)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//重置下拉框的值</span></span></span><br><span class="line"><span class="javascript">        $(ele).empty();</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/depts'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">//显示部门信息在下拉框</span></span></span><br><span class="line"><span class="javascript">                    $.each(rs.depts, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> optionEle = $(<span class="string">"&lt;option&gt;&lt;/option&gt;"</span>).append(<span class="keyword">this</span>.deptName).attr(<span class="string">"value"</span>, <span class="keyword">this</span>.deptId);</span></span><br><span class="line">                        optionEle.appendTo(ele)</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//员工修改的模态框</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//1.我们是按钮创建前就绑定click事件，所以绑定不上 或者直接在 c:forEach 遍历时就添加onclick();</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//在生成的动态标签 $.each()里不建议使用onclick函数,不像thymeleaf遍历时还可以传值，这个用item.名称，显示item未定义</span></span></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).on(<span class="string">"click"</span>, <span class="string">".edit_btn"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//得到员工信息</span></span></span><br><span class="line"><span class="javascript">        getEmp($(<span class="keyword">this</span>).attr(<span class="string">'edit-id'</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//得到下拉框的部门信息</span></span></span><br><span class="line"><span class="actionscript">        getDepts(<span class="string">"#updateModal select"</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#updateModal"</span>).modal(&#123;</span></span><br><span class="line"><span class="actionscript">            backdrop: <span class="string">'static'</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">//遍历时添加函数onclik=edit()</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// function edit() &#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     var empId = $(".edit_btn").attr('edit-id');</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     getEmp(empId);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     getDepts("#updateModal select");</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     $("#updateModal").modal(&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         backdrop: 'static'</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &#125;)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">getEmp</span><span class="params">(empId)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//直接赋值在url中，取不到数据</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//var empId = $(".edit_btn").attr('edit-id');</span></span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/emp/'</span> + empId,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//清楚邮箱校验消息</span></span></span><br><span class="line"><span class="actionscript">                show_validate_msg(<span class="string">"#email_update"</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span></span><br><span class="line">                if (rs.code === 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> empData = rs.emp;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#empName_update"</span>).val(empData.empName);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#email_update"</span>).val(empData.email);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#updateModal input[name=gender]"</span>).val([empData.gender]);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#updateModal select"</span>).val([empData.deptId]);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"#empId_update"</span>).val(empData.empId);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn_update"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//序列化表单数据，</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> data = $(<span class="string">"#updateModal form"</span>).serialize();</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">            url: <span class="string">'/update'</span>,</span></span><br><span class="line"><span class="actionscript">            type: <span class="string">'post'</span>,</span></span><br><span class="line"><span class="actionscript">            dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript">            data: data + <span class="string">"&amp;_method=PUT"</span>,</span></span><br><span class="line"><span class="actionscript">            success: <span class="function"><span class="keyword">function</span> <span class="params">(rs)</span> </span>&#123;</span></span><br><span class="line">                if (rs.code !== 0) &#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(rs);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span> (rs.error.email != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                        show_validate_msg(<span class="string">"#email_update"</span>, <span class="string">"error"</span>, rs.error.email);</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//关闭模态框，注意顺序</span></span></span><br><span class="line"><span class="javascript">                    $(<span class="string">'#updateModal'</span>).modal(<span class="string">'hide'</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//返回到最后一页，显示添加的数据</span></span></span><br><span class="line">                    to_page(totalRecord);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> cn.blue.service.EmployeeService;</span><br><span class="line"><span class="keyword">import</span> cn.blue.utils.Result;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.ModelMap;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.FieldError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Pattern;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    EmployeeService employeeService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转到emps页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/list"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"emps"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有员工信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/emps"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getEmpsWithJson</span><span class="params">(@RequestParam(value = <span class="string">"page"</span>, defaultValue = <span class="string">"1"</span>)</span> Integer page) </span>&#123;</span><br><span class="line">        <span class="comment">//在查询之前只需调用，传入页码，每页数据量</span></span><br><span class="line">        PageHelper.startPage(page, <span class="number">5</span>);</span><br><span class="line">        List&lt;Employee&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//使用pageInfo包装后的结果，只需要将pageInfo传给页面就好了</span></span><br><span class="line">        <span class="comment">//封装了详细的分页信息，包括我们查询出来的数据，传入连续显示的页数</span></span><br><span class="line">        PageInfo pageInfo = <span class="keyword">new</span> PageInfo(emps, <span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> Result.success().add(<span class="string">"pageInfo"</span>, pageInfo).setMsg(<span class="string">"查询成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据员工id获取员工信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> empId 员工id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Emp员工信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/emp/&#123;empId&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getEmp</span><span class="params">(@PathVariable(<span class="string">"empId"</span>)</span> Integer empId)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Employee emp = employeeService.getEmp(empId);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"查询成功"</span>).add(<span class="string">"emp"</span>,emp);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"查询失败"</span>).add(<span class="string">"error"</span>,e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工信息修改</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> employee 员工信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">updateEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                employeeService.updateEmp(employee);</span><br><span class="line">                <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/find"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmps</span><span class="params">(@RequestParam(value = <span class="string">"page"</span>, defaultValue = <span class="string">"1"</span>)</span> Integer page, ModelMap map) </span>&#123;</span><br><span class="line">        <span class="comment">//在查询之前只需调用，传入页码，每页数据量</span></span><br><span class="line">        PageHelper.startPage(page, <span class="number">5</span>);</span><br><span class="line">        List&lt;Employee&gt; emps = employeeService.getAll();</span><br><span class="line">        <span class="comment">//使用pageInfo包装后的结果，只需要将pageInfo传给页面就好了</span></span><br><span class="line">        <span class="comment">//封装了详细的分页信息，包括我们查询出来的数据，传入连续显示的页数</span></span><br><span class="line">        PageInfo pageInfo = <span class="keyword">new</span> PageInfo(emps, <span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">"pageInfo"</span>, pageInfo);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"list"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 员工信息保存</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> employee 员工信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">saveEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            employeeService.saveEmp(employee);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检验员工用户名是否存在</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/checkName"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">checkName</span><span class="params">(@RequestParam(<span class="string">"empName"</span>)</span> String empName) </span>&#123;</span><br><span class="line">        String regx = <span class="string">"(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)$"</span>;</span><br><span class="line">        <span class="keyword">if</span>(!empName.matches(regx))&#123;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"需要输入6-16位字母和数字或者2-5位中文的组合"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> b = employeeService.checkName(empName);</span><br><span class="line">        <span class="keyword">if</span> (b) &#123;</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"此用户名可用"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"此用户名重复"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Department;</span><br><span class="line"><span class="keyword">import</span> cn.blue.service.DepartmentService;</span><br><span class="line"><span class="keyword">import</span> cn.blue.utils.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/19</span></span><br><span class="line"><span class="comment"> * 处理和部门有关的请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/depts"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DepartmentController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentService departmentService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查出部门所有信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">getDepts</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Department&gt; list = departmentService.getDepts();</span><br><span class="line">        <span class="keyword">return</span> Result.success().add(<span class="string">"depts"</span>,list).setMsg(<span class="string">"查询成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="逆向工程使用"><a href="#逆向工程使用" class="headerlink" title="逆向工程使用"></a>逆向工程使用</h2><ol>
<li>MBGTest</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.InvalidConfigurationException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.XMLParserException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MBGTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, XMLParserException, InvalidConfigurationException, SQLException, InterruptedException </span>&#123;</span><br><span class="line">        List&lt;String&gt; warnings = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">boolean</span> overwrite = <span class="keyword">true</span>;</span><br><span class="line">        File configFile = <span class="keyword">new</span> File(<span class="string">"mbg.xml"</span>);</span><br><span class="line">        ConfigurationParser cp = <span class="keyword">new</span> ConfigurationParser(warnings);</span><br><span class="line">        Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">        DefaultShellCallback callback = <span class="keyword">new</span> DefaultShellCallback(overwrite);</span><br><span class="line">        MyBatisGenerator myBatisGenerator = <span class="keyword">new</span> MyBatisGenerator(config, callback, warnings);</span><br><span class="line">        myBatisGenerator.generate(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>mbg.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"DB2Tables"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">&lt;!--表示在mybatis逆向工程是不需要添加注释--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--配置数据库连接--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://localhost:3306/ssm_crud"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">"账号"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">"密码"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--指定javaBean生成位置: .\src\main\java--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"cn.blue.bean"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--指定sql映射文件生成的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/resources"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--指定接口生成的位置,比如mapper接口--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> <span class="attr">targetPackage</span>=<span class="string">"cn.blue.dao"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--table表,指定每个表生成策略--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_emp"</span> <span class="attr">domainObjectName</span>=<span class="string">"Employee"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"tbl_dept"</span> <span class="attr">domainObjectName</span>=<span class="string">"Department"</span>/&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>pom.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis的逆向工程--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li><p>结果<br><img src="https://img-blog.csdnimg.cn/20191225104333311.png" alt="bean层生成"></p>
<ul>
<li>指定sql映射文件生成的位置<br><img src="https://img-blog.csdnimg.cn/20191225104456258.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191225104530149.png" alt="在这里插入图片描述"></li>
</ul>
</li>
</ol>
<ul>
<li>指定接口生成的位置,比如mapper接口<br><img src="https://img-blog.csdnimg.cn/20191225104619717.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191225104644537.png" alt="在这里插入图片描述"></li>
</ul>
<h2 id="curd-调用mapper方法进行数据库操作"><a href="#curd-调用mapper方法进行数据库操作" class="headerlink" title="curd-调用mapper方法进行数据库操作"></a>curd-调用mapper方法进行数据库操作</h2><ol>
<li>MapperTest</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.mapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Department;</span><br><span class="line"><span class="keyword">import</span> cn.blue.bean.Employee;</span><br><span class="line"><span class="keyword">import</span> cn.blue.dao.DepartmentMapper;</span><br><span class="line"><span class="keyword">import</span> cn.blue.dao.EmployeeMapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/17</span></span><br><span class="line"><span class="comment"> * 推荐spring的项目，就可以使用spring的单元测试，可以自动注入我们需要的组件</span></span><br><span class="line"><span class="comment"> * 1.导入Spring-Test模块</span></span><br><span class="line"><span class="comment"> * 2.<span class="doctag">@ContextConfiguration</span>指定的spring配置文件位置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">ContextConfiguration</span>(<span class="title">locations</span> </span>= &#123;<span class="string">"classpath:applicationContext.xml"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MapperTest</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试DepartmentMapper</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DepartmentMapper departmentMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeMapper employeeMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SqlSession sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testCurd</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//1.创建SpringIoc容器</span></span><br><span class="line">        ApplicationContext ioc = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">//2.从容器中获取mapper</span></span><br><span class="line">        DepartmentMapper bean = ioc.getBean(DepartmentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.err.println(<span class="string">"值："</span>+departmentMapper);</span><br><span class="line">        <span class="comment">//1.插入部门</span></span><br><span class="line">        departmentMapper.insertSelective(<span class="keyword">new</span> Department(<span class="keyword">null</span>, <span class="string">"开发部"</span>));</span><br><span class="line">        departmentMapper.insertSelective(<span class="keyword">new</span> Department(<span class="keyword">null</span>, <span class="string">"测试部"</span>));</span><br><span class="line">        <span class="comment">//2.生成员工数据，测试员工插入</span></span><br><span class="line">        employeeMapper.insertSelective(<span class="keyword">new</span> Employee(<span class="keyword">null</span>,<span class="string">"jerry"</span>,<span class="number">1</span>,<span class="string">"Jerry@qq.com"</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="comment">//3.批量插入员工数据</span></span><br><span class="line">        EmployeeMapper mapper = sqlSession.getMapper(EmployeeMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            String uid = UUID.randomUUID().toString().substring(<span class="number">0</span>, <span class="number">5</span>) + i;</span><br><span class="line">            mapper.insertSelective(<span class="keyword">new</span> Employee(<span class="keyword">null</span>, uid, <span class="number">1</span>, uid + <span class="string">"@qq.com"</span>, <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"批量完成"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>依赖<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--junit单元测试，需要版本对应--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--是一个为了测试为目的,且能组合成灵活表达式的匹配器类库--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hamcrest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hamcrest-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--对Junit等测试框架的简单封装--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="crud-配置文件"><a href="#crud-配置文件" class="headerlink" title="crud-配置文件"></a>crud-配置文件</h2><img src="https://img-blog.csdnimg.cn/20191225131208708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>applicationContext.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--这里是spring的配置文件，主要配置业务和逻辑有关的东西--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.blue"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数据源，事务控制，--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:dbconfig.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"pooledDataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.jdbcUrl&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driverClass&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.user&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--===========================--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置和mybatis的整合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定mybatis全局配置文件的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"pooledDataSource"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指定mybatis，mapper的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:mapper/*.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置扫描器，将mybatis接口的实现加入到ioc容器中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--扫描所有的dao接口，加入到ioc容器中--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"cn.blue.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置一个可以执行批量的sqlSession--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSession"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionTemplate"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sessionFactory"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"executorType"</span> <span class="attr">value</span>=<span class="string">"BATCH"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--===========================--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--事务控制的配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--控制数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"pooledDataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--开启基于注解的事务，使用xml配置形式的事务(必要主要的都是配置式)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--切入点表达式:service及其service子包下的都用事务控制--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"txPoint"</span> <span class="attr">expression</span>=<span class="string">"execution(* cn.blue.service..*(..))"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置事务增强, pointcut-ref指切入哪方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"txPoint"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置事务增强，事务如何切入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--所有方法都是事务方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--以get开始的所有方法--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>log4j.properties</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Global logging configuration</span><br><span class="line">log4j.rootLogger=TRACE, stdout</span><br><span class="line"># MyBatis logging configuration...</span><br><span class="line">#TRACE-&gt;DEBUG-&gt;WRAN-&gt;ERROR</span><br><span class="line">log4j.logger.cn.blue=TRACE</span><br><span class="line"># Console output...</span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%t] - %m%n</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>mybatis-config.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"cn.blue.bean"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--分页插件配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">interceptor</span>=<span class="string">"com.github.pagehelper.PageInterceptor"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--分页合理化，页码正确：要是-1页就是首页--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"reasonable"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>dispatcherServlet-servlet.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.blue"</span> <span class="attr">use-default-filters</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Controller"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--两个配置--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将springmvc不能处理的请求交给tomcat--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--能支持一些更高级的功能，JSR303校验，ajax等--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>web.xml</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">web-app</span> <span class="meta-keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://java.sun.com/dtd/web-app_2_3.dtd"</span> &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--启动spring的容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--前端控制器，拦截所有请求--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--字符编码过滤器,一定要放在所有过滤器之前的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncodingM<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用Rest风格的URI，将页面从普通的get/post请求转变成Put/delete方式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>dbconfig.properties</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jdbc.jdbcUrl=jdbc:mysql://localhost:3306/ssm_crud?serverTimezone=GMT%2b8</span><br><span class="line">jdbc.driverClass=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.user=账号</span><br><span class="line">jdbc.password=密码</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>pom.xml<ul>
<li><strong><em>注意版本对应，不然可能会有兼容性问题</em></strong><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring相关的包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--提供对AspectJ的支持，以便可以方便的将面向方面的功能集成进IDE中--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring mvc相关，实现SpringMVC的操作--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--spring提供对事务的支持，事务的相关处理以及实现类就在这个Jar包中--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--包含Spring 框架基本的核心工具类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit单元测试，需要版本对应--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--是一个为了测试为目的,且能组合成灵活表达式的匹配器类库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hamcrest<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hamcrest-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--对Junit等测试框架的简单封装--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--导入mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--导入日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis的逆向工程--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--转换解析json--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--JSR303数据校验--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.18.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ol>
<h2 id="JSR303数据校验"><a href="#JSR303数据校验" class="headerlink" title="JSR303数据校验"></a>JSR303数据校验</h2><ol>
<li><p>添加bean层校验规则</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span>,</span><br><span class="line">    message = <span class="string">"用户名需要输入6-16位字母和数字或者2-5位中文的组合\""</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Email</span></span><br><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"^([a-z0-9_.-]+)@([\\da-z.-]+)\\.([a-z.]&#123;2,6&#125;)$"</span> ,</span><br><span class="line">    message = <span class="string">"邮箱格式不合法"</span>)</span><br><span class="line"><span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取校验信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">saveEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            employeeService.saveEmp(employee);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>导入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSR303数据校验--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.18.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自定义封装Ajax返回值"><a href="#自定义封装Ajax返回值" class="headerlink" title="自定义封装Ajax返回值"></a>自定义封装Ajax返回值</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用于ajax</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Result</span> <span class="keyword">extends</span> <span class="title">HashMap</span>&lt;<span class="title">String</span>, <span class="title">Object</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="title">Result</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Result().setCode(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Result <span class="title">error</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> Result().setCode(code);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Result <span class="title">add</span><span class="params">(String key, Object value)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.put(key, value);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Result <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.put(<span class="string">"code"</span>, code);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getValue(<span class="string">"code"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Result <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.put(<span class="string">"msg"</span>, msg);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">this</span>.getValue(<span class="string">"msg"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getValue</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> (T) <span class="keyword">this</span>.get(key);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>ssm</tag>
        <tag>curd</tag>
      </tags>
  </entry>
  <entry>
    <title>前端小笔记</title>
    <url>/2619727741/</url>
    <content><![CDATA[<p>本文主要记录前端小笔记<br><br></p>
<a id="more"></a>


<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="适配手机端语法"><a href="#适配手机端语法" class="headerlink" title="适配手机端语法"></a>适配手机端语法</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 即宽度小于等于420px时触发 */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">420px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.col-sm-6</span><span class="selector-class">.col-md-3</span><span class="selector-class">.adapt1</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">2.5rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">/* 即宽度大于等于420px时触发 */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">min-width:</span> <span class="number">420px</span>)&#123;</span><br><span class="line">    <span class="selector-class">.col-sm-6</span><span class="selector-class">.col-md-3</span><span class="selector-class">.adapt1</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">2.5rem</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="绝对定位、相对定位、固定定位："><a href="#绝对定位、相对定位、固定定位：" class="headerlink" title="绝对定位、相对定位、固定定位："></a>绝对定位、相对定位、固定定位：</h3><p>绝对定位脱离了文档流，绝对定位元素渲染时它依赖的元素已经渲染完成 百分比是可以计算出来的。<br>而相对定位，子元素的高度会影响父元素，此时父元素高度未知，要等子元素高度确定，父元素高度才确定。<br>注意:单独使用relative的时候，top:%不会移动，但是换成px会移动。</p>
<h4 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位 relative"></a>相对定位 relative</h4><blockquote>
<p>设置right为正值，元素往左移动，bottom设置正值，元素往上移动。负值则往与正值相反的方向移动<br>设置left为正值，元素往右移动，top设置正值，元素往下移动。</p>
</blockquote>
<ul>
<li><strong>设置相对定位的盒子会相对它原来的位置，通过指定偏移</strong>，到达新的位置</li>
<li><strong>设置相对定位的盒子仍在标准文档流中</strong>，它对父级盒子和相邻的盒子都没有任何影响（没有脱离标准文档流）</li>
<li>设置相对定位的盒子原来的位置会被保留下来（之前的位置被空出来了，会影响页面布局）</li>
<li>相对定位的特性<ul>
<li>相对于自己的初始位置来定位</li>
<li>元素位置发生偏移后，它原来的位置会被保留下来（所以其他元素因此移动）</li>
<li>层级提高，可以把标准文档流中的元素及浮动元素盖在下边</li>
</ul>
</li>
<li>相对定位的使用场景<ul>
<li>相对定位一般情况下很少自己单独使用，都是配合绝对定位使用，为绝对定位创造定位父级而又不设置偏移量</li>
</ul>
</li>
</ul>
<h4 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位 absolute"></a>绝对定位 absolute</h4><ul>
<li>使用了绝对定位的元素以它<strong>最近的一个“已经定位”的“祖先元素” 为基准进行偏移</strong>（ 定位的基准是相对于最近的祖先元素在定位，没有则以浏览器窗口进行定位 ）</li>
<li>如果没有已经定位的祖先元素，会以浏览器窗口为基准进行定位</li>
<li>绝对定位的元素脱离标准文档流，这意味着它们对其他元素的定位不会造成影响</li>
<li>元素位置发生偏移后，它原来的位置不会被保留下来</li>
<li><strong>设置了绝对定位但没有设置偏移量的元素将保持在原来的位置。</strong><br>在网页制作中可以用于需要使某个元素脱离标准流，而仍然希望它保持在原来的位置的情况</li>
</ul>
<h4 id="固定定位-fixed"><a href="#固定定位-fixed" class="headerlink" title="固定定位 fixed"></a>固定定位 fixed</h4><ul>
<li>固定定位的特性<ul>
<li>相对浏览器窗口来定位</li>
<li>偏移量不会随滚动条的移动而移动</li>
</ul>
</li>
<li>固定定位的使用场景<ul>
<li>一般在网页中被用在窗口左右两边的固定广告、返回顶部图标、吸顶导航栏等</li>
</ul>
</li>
</ul>
<h3 id="CSS3渐变"><a href="#CSS3渐变" class="headerlink" title="CSS3渐变"></a>CSS3渐变</h3><h4 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h4><ul>
<li>颜色沿着一条直线过渡：从左到右、从右到左、从上到下等</li>
<li><strong>linear-gradient ( position渐变方向,  color1第一种颜色值,  color2第二种颜色,…)</strong><br>  To right从左到右</li>
</ul>
<h3 id="盒子"><a href="#盒子" class="headerlink" title="盒子"></a>盒子</h3><ol>
<li>溢出处理<blockquote>
<p>box-sizing: border-box;</p>
</blockquote>
</li>
<li>添加阴影<blockquote>
<p>box-shadow: 0 0 10px #ddd;</p>
</blockquote>
</li>
</ol>
<h3 id="居中方式"><a href="#居中方式" class="headerlink" title="居中方式"></a>居中方式</h3><ol>
<li><p>把margin设为auto<br>具体来说就是把要居中的元素的margin-left和margin-right都设为auto，此方法只能进行水平的居中，且对浮动元素或绝对定位元素无效。</p>
</li>
<li><p>使用 text-align:center<br>这个没什么好说的，只能对图片，按钮，文字等行内元素(display为inline或inline-block等)进行水平居中。但要说明的是在IE6、7这两个奇葩的浏览器中，它是能对任何元素进行水平居中的。</p>
</li>
<li><p>使用line-height让单行的文字垂直居中<br>把文字的line-height设为文字父容器的高度，适用于只有一行文字的情况。</p>
</li>
<li><p>使用display:table-cell来居中<br>对于那些不是表格的元素，我们可以通过display:table-cell 来把它模拟成一个表格单元格，这样就可以利用表格那很方便的居中特性了。例如：<br><img src="https://images0.cnblogs.com/blog/130623/201310/28171707-cf7a39a969e74ae69f9e1e87ff1dbc5c.png" alt=""><br>但是，这种方法只能在IE8+、谷歌、火狐等浏览器上使用，IE6、IE7都无效。</p>
</li>
<li><blockquote>
<p>position: absolute;<br> left: 50%;<br> top: 50%;<br> // 相对于自身长宽移动50%<br> transform: translate(-50%, -50%);</p>
</blockquote>
</li>
<li><p>使用绝对定位来进行居中<br>此法只适用于那些我们已经知道它们的宽度或高度的元素。<br> 绝对定位进行居中的原理是通过把这个绝对定位元素的left或top的属性设为50%,这个时候元素并不是居中的，而是比居中的位置向右或向左偏了这个元素宽度或高度的一半的距离，所以需要使用一个负的margin-left或margin-top的值来把它拉回到居中的位置，这个负的margin值就取元素宽度或高度的一半。<br><img src="https://images0.cnblogs.com/blog/130623/201310/28171708-266c44999e164e9f9e1e3efeeb736a87.png" alt=""></p>
</li>
<li><p>使用浮动配合相对定位来进行水平居中<br>浮动居中的原理是：把浮动元素相对定位到父元素宽度50%的地方，但这个时候元素还不是居中的，而是比居中的那个位置多出了自身一半的宽度，这时就需要他里面的子元素再用一个相对定位，把那多出的自身一半的宽度拉回来，而因为相对定位正是相对于自身来定位的，所以自身一半的宽度只要把left 或 right 设为50%就可以得到了，因而不用知道自身的实际宽度是多少。<br>这种使用浮动配合相对定位来居中的方法，优点是不用知道要居中的元素的宽度，即使这个宽度是不断变化的也行；缺点是需要一个多余的元素来包裹要居中的元素。<br>看下代码：<br><img src="https://images0.cnblogs.com/blog/130623/201310/28171711-ae736e6c8a0b4b069aca4363d987344d.png" alt=""><br><a href="https://www.cnblogs.com/gassnake999/p/6941415.html" target="_blank" rel="noopener">参考文档</a></p>
</li>
</ol>
<h3 id="跳动的桃心"><a href="#跳动的桃心" class="headerlink" title="跳动的桃心"></a>跳动的桃心</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"with-love"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-heart"</span> <span class="attr">id</span>=<span class="string">"hearts"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 自定义页脚跳动的心样式 ，记得 id="heart"给i图标添加的*/</span></span><br><span class="line"><span class="selector-id">#hearts</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: heartsAnimate <span class="number">1.33s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> heartsAnimate &#123;</span><br><span class="line">    0%,100%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1</span>);&#125;</span><br><span class="line">    10%,30%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.9</span>);&#125;</span><br><span class="line">    20%,40%,60%,80%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">    50%,70%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.with-love</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f10610</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><h3 id="单击图片查看方式"><a href="#单击图片查看方式" class="headerlink" title="单击图片查看方式"></a>单击图片查看方式</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 图片单击效果 --&gt;</span><br><span class="line">      &lt;script&gt;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">createImgEventFullScreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">					<span class="comment">// .article-entry图片的父级元素，f12查看图片即有</span></span><br><span class="line">          <span class="keyword">var</span> imgs = $(<span class="string">".article-entry"</span>).find(<span class="string">"img"</span>);</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgs.length; i++) &#123;</span><br><span class="line">            <span class="comment">// $(imgs[i]).click(createCover(imgs[i]));</span></span><br><span class="line">            imgs[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> src = e.srcElement.currentSrc;</span><br><span class="line">              <span class="keyword">var</span> _this = $(<span class="keyword">this</span>);</span><br><span class="line">              createCover(src, _this);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="function"><span class="keyword">function</span> <span class="title">createCover</span>(<span class="params">src, _this</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> cover = $(</span><br><span class="line">              <span class="string">"&lt;div id='outerDiv'  style='position:fixed;top:0;left:0;background:rgba(0,0,0,0.7);z-index:5;width:100%;height:100%;display:none;'&gt;&lt;div id='innerDiv' style='position:absolute;'&gt;&lt;img  id='bigImg' style='border:5px solid #fff;' src=''/&gt;&lt;/div&gt;&lt;/div&gt;"</span></span><br><span class="line">            );</span><br><span class="line">            $(<span class="string">"#outerDiv"</span>).remove();</span><br><span class="line">            $(<span class="string">"body"</span>).append(cover);</span><br><span class="line">            imgShow(<span class="string">"#outerDiv"</span>, <span class="string">"#innerDiv"</span>, <span class="string">"#bigImg"</span>, _this, src);</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">imgShow</span>(<span class="params">outerDiv, innerDiv, bigImg, _this, src</span>) </span>&#123;</span><br><span class="line">          <span class="comment">//var src = _this.attr("src"); //获取当前点击的common-img元素中的src属性</span></span><br><span class="line">          $(bigImg).attr(<span class="string">"src"</span>, src); <span class="comment">//设置#bigImg元素的src属性</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">/*获取当前点击图片的真实大小，并显示弹出层及大图*/</span></span><br><span class="line">          $(<span class="string">"&lt;img/&gt;"</span>).attr(<span class="string">"src"</span>, src).load(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> windowW = $(<span class="built_in">window</span>).width(); <span class="comment">//获取当前窗口宽度</span></span><br><span class="line">            <span class="keyword">var</span> windowH = $(<span class="built_in">window</span>).height(); <span class="comment">//获取当前窗口高度</span></span><br><span class="line">            <span class="keyword">var</span> realWidth = <span class="keyword">this</span>.width; <span class="comment">//获取图片真实宽度</span></span><br><span class="line">            <span class="keyword">var</span> realHeight = <span class="keyword">this</span>.height; <span class="comment">//获取图片真实高度</span></span><br><span class="line">            <span class="keyword">var</span> imgWidth, imgHeight;</span><br><span class="line">            <span class="keyword">var</span> scale = <span class="number">0.8</span>; <span class="comment">//缩放尺寸，当图片真实宽度和高度大于窗口宽度和高度时进行缩放</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (realHeight &gt; windowH * scale) &#123; <span class="comment">//判断图片高度</span></span><br><span class="line">              imgHeight = windowH * scale; <span class="comment">//如大于窗口高度，图片高度进行缩放</span></span><br><span class="line">              imgWidth = imgHeight / realHeight * realWidth; <span class="comment">//等比例缩放宽度</span></span><br><span class="line">              <span class="keyword">if</span> (imgWidth &gt; windowW * scale) &#123; <span class="comment">//如宽度仍大于窗口宽度</span></span><br><span class="line">                imgWidth = windowW * scale; <span class="comment">//再对宽度进行缩放</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (realWidth &gt; windowW * scale) &#123; <span class="comment">//如图片高度合适，判断图片宽度</span></span><br><span class="line">              imgWidth = windowW * scale; <span class="comment">//如大于窗口宽度，图片宽度进行缩放</span></span><br><span class="line">              imgHeight = imgWidth / realWidth * realHeight; <span class="comment">//等比例缩放高度</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//如果图片真实高度和宽度都符合要求，高宽不变</span></span><br><span class="line">              imgWidth = realWidth;</span><br><span class="line">              imgHeight = realHeight;</span><br><span class="line">            &#125;</span><br><span class="line">            $(bigImg).css(<span class="string">"width"</span>, imgWidth); <span class="comment">//以最终的宽度对图片缩放</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> w = (windowW - imgWidth) / <span class="number">2</span>; <span class="comment">//计算图片与窗口左边距</span></span><br><span class="line">            <span class="keyword">var</span> h = (windowH - imgHeight) / <span class="number">2</span>; <span class="comment">//计算图片与窗口上边距</span></span><br><span class="line">            $(innerDiv).css(&#123;</span><br><span class="line">              <span class="string">"top"</span>: h,</span><br><span class="line">              <span class="string">"left"</span>: w</span><br><span class="line">            &#125;); <span class="comment">//设置#innerDiv的top和left属性</span></span><br><span class="line">            <span class="comment">//console.log('****')</span></span><br><span class="line">            $(outerDiv).fadeIn(<span class="string">"fast"</span>); <span class="comment">//淡入显示#outerDiv</span></span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          $(outerDiv).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//再次点击淡出消失弹出层</span></span><br><span class="line">            $(<span class="keyword">this</span>).fadeOut(<span class="string">"fast"</span>);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          createImgEventFullScreen();</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">      &lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Java队列实现</title>
    <url>/1190033384/</url>
    <content><![CDATA[<h2 id="队列简单介绍"><a href="#队列简单介绍" class="headerlink" title="队列简单介绍"></a>队列简单介绍</h2><p>队列是一种常用的数据结构之一，与之前的栈类似，不过队列是“先进先出”。队列有队头（front）和队尾（rear），数据从队尾进入队列，从队头出队列，队头（front）指向队列的第一个数据，队尾（rear）指向队列中的最后一个数据。</p>
<a id="more"></a>
<h2 id="队列实现"><a href="#队列实现" class="headerlink" title="队列实现"></a>队列实现</h2><p>队列有很多种，这里只是介绍最基本的实现，采用链式存储，也就是链式队列，与之前的链表存储形式一样，通过结点对象描述一个数据，结点对象包含具体数据和下一个结点的引用。<br><img src="https://img-blog.csdnimg.cn/20200111092616449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>队列有两个重要的概念，一个叫队头，一个叫队尾，队头指向的是第一个元素，而队尾指向的是最后一个元素。队列跟栈一样也是访问受限制的，所以队列也只有两个主要的操作：<strong>入队(enqueue)操作</strong> 和 <strong>出队(dequeue)操作</strong> 。入队操作就是将一个元素添加到队尾，出队操作就是从队头取出一个元素。</p>
<p>队列的底层实现可以用数组和链表，基于数组实现的队列叫作顺序队列，基于链表实现的队列叫作链式队列，下面我们分别用数组和链表来简单的实现这两种队列。</p>
<h2 id="基于数组的队列"><a href="#基于数组的队列" class="headerlink" title="基于数组的队列"></a>基于数组的队列</h2><p>不管使用那种方式来实现队列，都需要定义两个指针分别指向队头和队尾，本文中我们用head指向队头，tail指向队尾，后面的示例中这将默认使用这个，有特殊的地方我会进行说明，先来看看顺序队列的入队、出队操作。<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E9%98%9F%E5%88%97" alt=""><br>图中可以看出，入队时，队尾往后移动，队头保持不变，出队是队头往后移动，队尾保持不变。入队、出队操作的逻辑都比较简单，可能你有疑问的地方是：出队时为什么队头要往后移动而不是一直指向数组下标为0的位置？ 为什么呢？如果我们保持队头一直指向数组下标为0的位置，那每次出队操作后，后面的数据都需要往前挪一位，换句话说每次出队操作都需要进行数据迁移，而数据迁移的代价比较大，每次数据迁移的时间复杂度为O(n)，这样会极大的影响队列的使用性能。如果我们出队时，队头往后移动一位，这样我们就避免每次出队都进行数据迁移，我们只需要在只有在tail等于数组大小且head不等于0时，进行一次数据迁移，将已经出队留下的空间继续供入队时使用。下图是数据迁移的过程：<br><img src="https://img-blog.csdnimg.cn/20200111093909448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br>数据迁移时，从head位置开始的数据都需要往前移动head位，这样就把出队后的空间腾出来，供后续入队操作使用。</p>
<h3 id="基于数组的队列实现代码："><a href="#基于数组的队列实现代码：" class="headerlink" title="基于数组的队列实现代码："></a>基于数组的队列实现代码：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于数组的队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存放数据的数组</span></span><br><span class="line">    <span class="keyword">private</span> String[] items;</span><br><span class="line">    <span class="comment">// 容器的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 最后一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tail = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">        items = <span class="keyword">new</span> String[size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">        <span class="comment">// 如果最后一个节点等于容器大小，说明队列满了</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 判断队列满了的条件，tail = size,head = 0,</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (tail == size &amp;&amp; head == <span class="number">0</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 如果tail = size，但是head != 0,说明前有数据删除，队列未满，需要数据迁移</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (tail == size)&#123;</span><br><span class="line">            <span class="comment">// head 后面的数据都需要往前迁移 head 位</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i= head;i&lt; size;i++)&#123;</span><br><span class="line">                items[i-head] = items[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 将最后一个元素迁移 head 位</span></span><br><span class="line">            tail -=head;</span><br><span class="line">            <span class="comment">// 第一个元素指向 0</span></span><br><span class="line">            head = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 向队列中添加元素</span></span><br><span class="line">        items[tail] = data;</span><br><span class="line"></span><br><span class="line">        tail++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 第一个元素和最后一个元素相等时，队列为空</span></span><br><span class="line">        <span class="keyword">if</span> (head == tail) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        String result = items[head];</span><br><span class="line">        <span class="comment">// 第一个元素后移一次，这样做的好处是在出队时不需要数据迁移</span></span><br><span class="line">        head ++ ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="链式队列"><a href="#链式队列" class="headerlink" title="链式队列"></a>链式队列</h2><p>链式队列实现起来相对顺序队列来说要简单很多，我们先来看看链式队列的入队、出队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E9%93%BE%E5%BC%8F%E9%98%9F%E5%88%97" alt=""><br>从图中可以看出链式队列入队操作是将tail的next指向新增的节点，然后将tail指向新增的节点，出队操作时，将head节点指向head.next节点。链式队列与顺序队列比起来不需要进行数据的迁移，但是链式队列增加了存储成本。</p>
<h3 id="基于链表的队列实现代码"><a href="#基于链表的队列实现代码" class="headerlink" title="基于链表的队列实现代码"></a>基于链表的队列实现代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基于链表的队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指向队首</span></span><br><span class="line">    <span class="keyword">private</span> Node head;</span><br><span class="line">    <span class="comment">// 指向队尾</span></span><br><span class="line">    <span class="keyword">private</span> Node tail;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">        Node node = <span class="keyword">new</span> Node(data,<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">// 判断队列中是否有元素</span></span><br><span class="line">        <span class="keyword">if</span> (tail == <span class="keyword">null</span>) &#123;</span><br><span class="line">            tail = node;</span><br><span class="line">            head = node;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            tail.next = node;</span><br><span class="line">            tail = node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head==<span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        String data = head.data;</span><br><span class="line">        head = head.next;</span><br><span class="line">        <span class="comment">// 取出元素后，头指针为空，说明队列中没有元素，tail也需要制为空</span></span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            tail = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String data;</span><br><span class="line">        <span class="keyword">private</span> Node next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(String data,Node node)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.data = data;</span><br><span class="line">            next = node;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h2><p>循环队列是对顺序队列的改进，因为顺序队列不可避免的数据迁移操作，数据迁移操作会导致队列的性能下降，为了避免这个问题，将队列改造成循环的，当tail到达数组的最大下标时，重新指回数组下标为0的位置，这样就避免了数据迁移。先来看看循环队列的出队、入队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E9%98%9F%E5%88%97" alt=""><br>因为队列是循环队列，所以在进行入队、出队操作时，就不能像顺序队列那样对<strong>tail</strong>、<strong>head</strong>进行简单的加1操作，我们需要对<strong>tail</strong>、<strong>head</strong>加1后与数组的大小进行求余操作，来得出<strong>tail</strong>、<strong>head</strong>的值，这样才能进行循环操作。循环队列需要牺牲一个存储空间，对于一个存储空间为<strong>n</strong>的循环队列来说只能存放<strong>n-1</strong>为数据，因为如果不牺牲一个存储空间的话，当<strong>tail</strong>==<strong>head</strong>时，就有可能存在队空或者队满的情况。</p>
<h3 id="循环队列的实现代码"><a href="#循环队列的实现代码" class="headerlink" title="循环队列的实现代码"></a>循环队列的实现代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 环形队列,不需要数据迁移，提高性能</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircularQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存放数据的数组</span></span><br><span class="line">    <span class="keyword">private</span> String[] items;</span><br><span class="line">    <span class="comment">// 容器的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 最后一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tail = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircularQueue</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">        items = <span class="keyword">new</span> String[size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 判断环形队列满了的条件，(tail+1)求余等于head</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> ((tail+<span class="number">1</span>)%size == head) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向队列中添加元素</span></span><br><span class="line">        items[tail] = data;</span><br><span class="line">        <span class="comment">// 因为是环形队列，所以下边是数组长度的余数</span></span><br><span class="line">        tail= (tail+<span class="number">1</span>)%size;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 出队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 第一个元素和最后一个元素相等时，队列为空</span></span><br><span class="line">        <span class="keyword">if</span> (head == tail) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        String result = items[head];</span><br><span class="line">        <span class="comment">// 因为是环形队列，所以下边是数组长度的余数</span></span><br><span class="line">        head = (head+<span class="number">1</span>)% size ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="双端队列"><a href="#双端队列" class="headerlink" title="双端队列"></a>双端队列</h2><p>双端队列是一种队头、队尾都可以进行入队、出队操作的队列，双端队列采用双向链表来实现，先来看一下双端队列的入队、出队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97" alt=""><br>可以从动态图中看出，双端队列的每一端都是一个栈，都符合栈先进后出的特性，如果我们对双端队列进行禁止队头入队和队尾出队操作的限制，双端队列又变成了一个链式队列，双端队列是一种多功能的数据结构，我们可以使用它来提供队列和栈两种功能。</p>
<h3 id="双端队列的实现代码"><a href="#双端队列的实现代码" class="headerlink" title="双端队列的实现代码"></a>双端队列的实现代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 双端队列，使用双向链表实现</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoubleEndsQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        String item;</span><br><span class="line">        Node next;</span><br><span class="line">        Node prev;</span><br><span class="line"></span><br><span class="line">        Node(Node prev, String element, Node next) &#123;</span><br><span class="line">            <span class="keyword">this</span>.item = element;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">            <span class="keyword">this</span>.prev = prev;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> Node first;</span><br><span class="line">    <span class="comment">// 最后一个节点</span></span><br><span class="line">    <span class="keyword">private</span> Node last;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 在第一个节点前面入队</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueueFirst</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Node f = first;</span><br><span class="line">        <span class="keyword">final</span> Node newNode = <span class="keyword">new</span> Node(<span class="keyword">null</span>, e, f);</span><br><span class="line">        <span class="comment">// 第一个节点指向新节点</span></span><br><span class="line">        first = newNode;</span><br><span class="line">        <span class="keyword">if</span> (f == <span class="keyword">null</span>)</span><br><span class="line">            <span class="comment">// 最后一个节点也指向该节点</span></span><br><span class="line">            last = newNode;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">// 当前节点的前节点指向新节点</span></span><br><span class="line">            f.prev = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在最后一个元素后面入队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueueLast</span><span class="params">(String e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Node l = last;</span><br><span class="line">        <span class="keyword">final</span> Node newNode = <span class="keyword">new</span> Node(l, e, <span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">// 最后一个节点指向新节点</span></span><br><span class="line">        last = newNode;</span><br><span class="line">        <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">            <span class="comment">// 第一个节点指向新节点</span></span><br><span class="line">            first = newNode;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment">// 当前节点的下节点指向新节点</span></span><br><span class="line">            l.next = newNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从第一个节点出队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeueFirst</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (first == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">final</span> Node f = first;</span><br><span class="line">        String element = f.item;</span><br><span class="line">        Node next = f.next;</span><br><span class="line">        f.item = <span class="keyword">null</span>;</span><br><span class="line">        f.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 第一个节点指向当先节点的next节点</span></span><br><span class="line">        first = next;</span><br><span class="line">        <span class="keyword">if</span> (next == <span class="keyword">null</span>)</span><br><span class="line">            <span class="comment">// 说明队列为空</span></span><br><span class="line">            last = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            next.prev = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> element;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从最后节点出队</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">dequeueLast</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Node l = last;</span><br><span class="line">        <span class="keyword">if</span> (last == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        String element = l.item;</span><br><span class="line">        Node prev = l.prev;</span><br><span class="line">        l.item = <span class="keyword">null</span>;</span><br><span class="line">        l.prev = <span class="keyword">null</span>;</span><br><span class="line">        last = prev;</span><br><span class="line">        <span class="keyword">if</span> (prev == <span class="keyword">null</span>)</span><br><span class="line">            first = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            prev.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> element;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出队列全部内容</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (first !=<span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.print(first.item+<span class="string">" "</span>);</span><br><span class="line">            first = first.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"==============="</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="优先队列"><a href="#优先队列" class="headerlink" title="优先队列"></a>优先队列</h2><p>优先队列为一种不必遵循队列先进先出(FIFO)特性的特殊队列，优先队列跟普通队列一样都只有一个队头和一个队尾并且也是从队头出队，队尾入队，不过在优先队列中，每次入队时，都会按照入队数据项的关键值进行排序(从大到小、从小到大)，这样保证了关键字最小的或者最大的项始终在队头，出队的时候优先级最高的就最先出队，这个就像我们医院就医一样，急救的病人要比普通的病人先就诊。一起来看看优先队列的出队、入队操作：<br><img src="https://blueblog-1301047842.cos.ap-chengdu.myqcloud.com/%E5%8D%9A%E5%AE%A2/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97" alt=""><br>在示例中，我们规定数值越小优先级越高。我们每执行一次入队操作时，小的元素都会靠近头队，在出队的时候，元素小的也就先出队。</p>
<h3 id="优先队列的代码实现"><a href="#优先队列的代码实现" class="headerlink" title="优先队列的代码实现"></a>优先队列的代码实现</h3><p>这里使用的数组实现优先队列，用数组实现主要原因是更好理解优先队列的思想。一般都是使用堆来实现优先队列，因为数组实现在插入的时候对数据的排序代价比较大。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 优先队列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PriorityQueue</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存放数据的数组</span></span><br><span class="line">    <span class="keyword">private</span> Integer[] items;</span><br><span class="line">    <span class="comment">// 容器的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 第一个节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> head = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PriorityQueue</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">        items = <span class="keyword">new</span> Integer[size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 入队操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">enqueue</span><span class="params">(Integer data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="number">0</span>)&#123;</span><br><span class="line">            items[head++] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (j=head-<span class="number">1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">                <span class="comment">// 将小的数往后排</span></span><br><span class="line">                <span class="keyword">if</span> (data &gt; items[j])&#123;</span><br><span class="line">                    items[j+<span class="number">1</span>] = items[j];</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            items[j+<span class="number">1</span>] = data;</span><br><span class="line">            head++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> items[--head];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li><p>队列是一种遵循先进先出(FIFO)的数据结构</p>
</li>
<li><p>队列可以使用数组和链表实现，数组实现叫作顺序队列，链表实现叫作链- 式队列</p>
</li>
<li><p>循环队列解决了顺序队列的数据迁移带来的性能损耗的问题</p>
</li>
<li><p>双端队列是队头和队尾都可以进行入队、出队操作的队列</p>
</li>
<li><p>优先队列是一种不必遵循先进先出规则的队列，任意元素加入时，都会讲- 优先级最高的放入到队头</p>
<p>  <a href="https://juejin.im/post/5d5fb74fe51d45620346b8d0" target="_blank" rel="noopener">参考链接</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构与算法</tag>
        <tag>队列</tag>
      </tags>
  </entry>
  <entry>
    <title>Java数据结构与算法</title>
    <url>/63686725/</url>
    <content><![CDATA[<h2 id="学习总结-尚硅谷2019java数据结构和算法"><a href="#学习总结-尚硅谷2019java数据结构和算法" class="headerlink" title="学习总结:尚硅谷2019java数据结构和算法"></a>学习总结:尚硅谷2019java数据结构和算法</h2><br>
<a id="more"></a>

<h2 id="线性结构和非线性结构"><a href="#线性结构和非线性结构" class="headerlink" title="线性结构和非线性结构"></a>线性结构和非线性结构</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWctbXkuY3Nkbi5uZXQvdXBsb2Fkcy8yMDEyMDQvMjYvMTMzNTQ0OTM5OF83NTA0LnBuZw?x-oss-process=image/format,png" alt=""><br><img src="https://img-blog.csdnimg.cn/20200110093408230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h3 id="线性结构"><a href="#线性结构" class="headerlink" title="线性结构"></a>线性结构</h3><ul>
<li>是一个有序数据元素的集合。 其中数据元素之间的关系是一对一的关系，即除了第一个和最后一个数据元素之外，其它数据元素都是首尾相接的。</li>
<li>常用的线性结构有：线性表，栈，队列，双队列，数组，串。</li>
<li>特点：<ul>
<li>1．集合中必存在唯一的一个”第一个元素”；</li>
<li>2．集合中必存在唯一的一个”最后的元素”；</li>
<li>3．除最后元素之外，其它数据元素均有唯一的”后继”；</li>
<li>4．除第一元素之外，其它数据元素均有唯一的”前驱”。</li>
<li>5．数据结构中线性结构指的是数据元素之间存在着“一对一”的线性关系的数据结构。</li>
</ul>
</li>
</ul>
<h3 id="非线性结构"><a href="#非线性结构" class="headerlink" title="非线性结构"></a>非线性结构</h3><ul>
<li>各个数据元素不再保持在一个线性序列中，每个数据元素可能与零个或者多个其他数据元素发生联系。</li>
<li>根据关系的不同，可分为层次结构和群结构。</li>
<li>常见的非线性结构有：二维数组，多维数组，广义表，树(二叉树等)。（其中多维数组是由多个一维数组组成的，所以不再是线性结构）</li>
<li>特点：<ul>
<li>非线性结构的逻辑特征是一个结点元素可能对应多个直接前驱和多个后继</li>
</ul>
</li>
</ul>
<h2 id="稀疏数组和队列"><a href="#稀疏数组和队列" class="headerlink" title="稀疏数组和队列"></a>稀疏数组和队列</h2><h3 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h3><ul>
<li><h4 id="稀疏数组介绍"><a href="#稀疏数组介绍" class="headerlink" title="稀疏数组介绍"></a>稀疏数组介绍</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008171353296-1873771023.png" alt=""></li>
<li><h4 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008171433194-1391110051.png" alt=""></li>
<li><h4 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008172426051-868490732.png" alt=""><br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191008183810690-14981835.png" alt=""></li>
<li><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><ul>
<li><a href="">SparseArray.java</a>：与二维数组的转换，包括二维转稀疏，和稀疏转二维。<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * 稀疏数组思路分析：与二维数组的转换，包括二维转稀疏，和稀疏转二维</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseArray</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个原始的二维数组11*11: 0：没有棋子，1表示黑子，2表示蓝子</span></span><br><span class="line">        <span class="keyword">int</span>[][] chessArr1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        chessArr1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        chessArr1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        chessArr1[<span class="number">4</span>][<span class="number">5</span>] = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出原始的二维数组</span></span><br><span class="line"><span class="comment">//        int[] arr = new  int[]&#123;1,2,3&#125;;</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.toString(arr));</span></span><br><span class="line"><span class="comment">//        System.out.println(Arrays.deepToString(chessArr1));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出原始的二维数组</span></span><br><span class="line">        System.out.println(<span class="string">"原始的二维数组："</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] row : chessArr1) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : row) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span>, data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将二维数组 转 稀疏数组</span></span><br><span class="line">        <span class="comment">//1、先遍历二维数组，得到非0数据的个数</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chessArr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArr1[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArr1[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"输出的值个数"</span> + sum);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、创建对应的稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] sparseArr = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        <span class="comment">//给稀疏数组列中的行赋值</span></span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">0</span>] = chessArr1.length;</span><br><span class="line">        <span class="comment">//给稀疏数组列中的列赋值</span></span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">1</span>] = chessArr1[<span class="number">0</span>].length;</span><br><span class="line">        <span class="comment">//给稀疏数组列中的值赋值</span></span><br><span class="line">        sparseArr[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        System.err.println(<span class="string">"赋值第一行后的稀疏数组："</span> + Arrays.deepToString(sparseArr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.遍历二维数组，将非0的值存放到稀疏数组中。</span></span><br><span class="line">        <span class="comment">//用于记录是第几个非0数据</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chessArr1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArr1[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (chessArr1[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    sparseArr[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArr[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArr[count][<span class="number">2</span>] = chessArr1[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.err.println(<span class="string">"赋值后的稀疏数组："</span> + Arrays.deepToString(sparseArr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出稀疏数组的完整样式</span></span><br><span class="line">        System.err.println(<span class="string">"======输出稀疏数组的完整样式: sparseArr.length == 4,获取的是二维数组的列数长度"</span>);</span><br><span class="line">        <span class="comment">//1.</span></span><br><span class="line">        IntStream.range(<span class="number">0</span>, sparseArr.length).forEach(i -&gt;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t%d\t%d\t\n"</span>, sparseArr[i][<span class="number">0</span>], sparseArr[i][<span class="number">1</span>], sparseArr[i][<span class="number">2</span>]));</span><br><span class="line">        <span class="comment">//2.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] sparse : sparseArr</span><br><span class="line">        ) &#123;</span><br><span class="line">            System.out.println(Arrays.toString(sparse));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.</span></span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (k &lt; sparseArr.length) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"%d\t%d\t%d\t\n"</span>, sparseArr[k][<span class="number">0</span>], sparseArr[k][<span class="number">1</span>], sparseArr[k][<span class="number">2</span>]);</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4.</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArr.length; i++) &#123;</span><br><span class="line">            System.out.printf(<span class="string">"%d\t%d\t%d\t\n"</span>, sparseArr[i][<span class="number">0</span>], sparseArr[i][<span class="number">1</span>], sparseArr[i][<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将稀疏数组 转 二维数组：读取稀疏数组的行列</span></span><br><span class="line">        <span class="keyword">int</span> chessArr2[][] = <span class="keyword">new</span> <span class="keyword">int</span>[sparseArr[<span class="number">0</span>][<span class="number">0</span>]][sparseArr[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="comment">//再读取稀疏数组后几行的数组，并赋给原始的二维数组即可。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sparseArr.length; i++) &#123;</span><br><span class="line">            chessArr2[sparseArr[i][<span class="number">0</span>]][sparseArr[i][<span class="number">1</span>]] = sparseArr[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"换成二维数组后的："</span> + Arrays.deepToString(chessArr2));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出还原后的二维数组</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; chessArr2.length) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chessArr2[i].length; j++) &#123;</span><br><span class="line">                System.out.printf(<span class="string">"%d\t"</span> , chessArr2[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>代码总结<ul>
<li>二维数组.length == 二维数组列的长度</li>
<li>使用占位符输出System.out.printf(“%d\t” , 值);</li>
</ul>
</li>
<li><h4 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h4><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009170736387-334842377.png" alt=""></li>
</ul>
<h3 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h3><ul>
<li><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><ul>
<li>先进先出，有序列表</li>
<li>可用数组或链表实现。数组（顺序存储），链表（链式存储）。</li>
<li>图示：使用数组模拟队列<br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009171442528-1920318177.png" alt=""></li>
</ul>
</li>
<li><h4 id="数组模拟队列"><a href="#数组模拟队列" class="headerlink" title="数组模拟队列"></a>数组模拟队列</h4><ul>
<li><strong>问题</strong>：<ul>
<li>目前数组不能复用，一次性。</li>
<li>使用取模的环形队列来改进<br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009190439047-831444374.png" alt=""></li>
</ul>
</li>
<li>代码实现：<br><a href="">ArrayQueueDemo.java</a>：用数组实现队列的五个小功能，并通过主函数验证(因为还不是环形队列，存在一些缺陷）</li>
</ul>
</li>
<li><h4 id="数组模拟环形队列"><a href="#数组模拟环形队列" class="headerlink" title="数组模拟环形队列"></a>数组模拟环形队列</h4><ul>
<li><strong>分析</strong><ul>
<li>重新设置rear和front的初始值均为0，且front指向第一个元-素，rear指向最后一个元素的后一个位置，并且预留一个空格-的位置，即若只剩一个空，视为满。</li>
<li>队满：(rear+1)%maxSize == front;</li>
<li>队空：rear==front</li>
<li>元素个数：(rear-front+maxSize)%maxSize</li>
</ul>
</li>
<li><strong>图示</strong><br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009213838087-567112643.png" alt=""><br><img src="https://img2018.cnblogs.com/blog/1265453/201910/1265453-20191009213927550-846255614.png" alt=""></li>
<li><strong>代码实现</strong><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.blue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2020/1/10</span></span><br><span class="line"><span class="comment">* 队列：</span></span><br><span class="line"><span class="comment">* 重新设置rear和front的初始值均为0，且front指向第一个元素，rear指向最后一个元素的后一个位置，并且预留一个空格的位置，</span></span><br><span class="line"><span class="comment">* 即若只剩一个空，视为满。</span></span><br><span class="line"><span class="comment">* 队满：(rear+1)%maxSize == front;</span></span><br><span class="line"><span class="comment">* 队空：rear==front</span></span><br><span class="line"><span class="comment">* 元素个数：(rear-front+maxSize)%maxSize</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueueDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个队列</span></span><br><span class="line">        ArrayQueue arrayQueue = <span class="keyword">new</span> ArrayQueue(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//用来接收输入的值</span></span><br><span class="line">        <span class="keyword">char</span> value = <span class="string">' '</span>;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">boolean</span> loop = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (loop) &#123;</span><br><span class="line">            System.out.println(<span class="string">"s(show)：显示队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"a(add)：添加数据到队列"</span>);</span><br><span class="line">            System.out.println(<span class="string">"g(get)：从队列中获取元素"</span>);</span><br><span class="line">            System.out.println(<span class="string">"h(head)：查看队列头的数据"</span>);</span><br><span class="line">            System.out.println(<span class="string">"e(exit)：退出程序"</span>);</span><br><span class="line">            System.err.println(<span class="string">"请选择如下的操作:"</span>);</span><br><span class="line">            value = scanner.next().charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">switch</span> (value) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">                    arrayQueue.showQueue();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">                    System.err.print(<span class="string">"请输入需要添加的值："</span>);</span><br><span class="line">                    <span class="keyword">int</span> addValue = scanner.nextInt();</span><br><span class="line">                    arrayQueue.addQueue(addValue);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'g'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = arrayQueue.getQueue();</span><br><span class="line">                        System.out.printf(<span class="string">"取出的数据是%d\n"</span>,res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'h'</span>:</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">int</span> res = arrayQueue.showHead();</span><br><span class="line">                        System.out.printf(<span class="string">"取出的数据是%d\n"</span>,res);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        System.out.println(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">'e'</span>:</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                    loop = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cn.blue;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment">* <span class="doctag">@date</span> 2020/1/10</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 数组的最大容量</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxSize;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 队列头</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 队列尾</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> rear;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 用于存放数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] arr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        maxSize = capacity;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">        <span class="comment">// 指向队列头部，分析出front是指向队列头的前一个位置</span></span><br><span class="line">        front = -<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//指向队列尾，指向队列尾的数据（即队列最后一个数据）</span></span><br><span class="line">        rear = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> front == rear;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFull</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> rear == maxSize - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 添加数据到队列</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addQueue</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isFull()) &#123;</span><br><span class="line">            System.err.println(<span class="string">"队列已满，不能加入数据"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        rear++;</span><br><span class="line">        arr[rear] = value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 获得队列的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列数据不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//front后移,出列</span></span><br><span class="line">        front++;</span><br><span class="line">        <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 显示队列的所有数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判断是否是空的</span></span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            System.err.println(<span class="string">"目前队列数据为空，请先添加"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.err.printf(<span class="string">"arr[%d]=%d\n"</span>, i, arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 显示队列的头数据，注意不是取出</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">showHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"队列数据不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//注意：front指向的是队列头的前一个数据。（更小的一个位置）</span></span><br><span class="line">        <span class="keyword">return</span> arr[front + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<a href="/2020/01/11/Java队列实现/">以上代码实现只能带我们初步认识队列，具体参考</a></li>
</ul>
</li>
</ul>
<h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="链表-LinkedList-介绍"><a href="#链表-LinkedList-介绍" class="headerlink" title="链表(LinkedList)介绍"></a>链表(LinkedList)介绍</h3><p>链表是有序的列表，但是它在内存中是存储如下<br><img src="https://img-blog.csdnimg.cn/20200113092843919.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><strong>小结:</strong></p>
<ol>
<li>链表是以节点的方式来存储,是链式存储</li>
<li>每个节点包含 data 域， next 域：指向下一个节点.</li>
<li>如图：发现链表的各个节点不一定是连续存储.</li>
<li>链表分带头节点的链表和没有头节点的链表，根据实际的需求来确定</li>
</ol>
<h3 id="单链表"><a href="#单链表" class="headerlink" title="单链表"></a>单链表</h3><h4 id="单链表介绍"><a href="#单链表介绍" class="headerlink" title="单链表介绍"></a>单链表介绍</h4><p>单链表(带头结点) 逻辑结构示意图如下<br><img src="https://img-blog.csdnimg.cn/20200113093234889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<h4 id="单链表的应用实例"><a href="#单链表的应用实例" class="headerlink" title="单链表的应用实例"></a>单链表的应用实例</h4><p><strong>使用带head头的单向链表实现 –水浒英雄排行榜管理 完成对英雄人物的增删改查操作</strong></p>
<p>解题思路:</p>
<p><img src="https://img-blog.csdnimg.cn/20200113093712217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><img src="https://img-blog.csdnimg.cn/20200113093814617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><img src="https://img-blog.csdnimg.cn/20200113094416679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<p><strong>代码实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.company;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * 单链表的应用实例</span></span><br><span class="line"><span class="comment"> * 使用带head头的单向链表实现 –水浒英雄排行榜管理 完成对英雄人物的增删改查操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedListDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HeroNode heroNode1 = <span class="keyword">new</span> HeroNode(<span class="number">1</span>, <span class="string">"鲁智深"</span>, <span class="string">"花和尚"</span>);</span><br><span class="line">        HeroNode heroNode2 = <span class="keyword">new</span> HeroNode(<span class="number">2</span>, <span class="string">"李逵"</span>, <span class="string">"黑旋风"</span>);</span><br><span class="line">        HeroNode heroNode3 = <span class="keyword">new</span> HeroNode(<span class="number">3</span>, <span class="string">"吴用"</span>, <span class="string">"智多星"</span>);</span><br><span class="line">        HeroNode heroNode4 = <span class="keyword">new</span> HeroNode(<span class="number">4</span>, <span class="string">"林冲"</span>, <span class="string">"豹子头"</span>);</span><br><span class="line">        SingleLinkedList singleLinkedList = <span class="keyword">new</span> SingleLinkedList();</span><br><span class="line">        singleLinkedList.addByOrder(heroNode1);</span><br><span class="line">        singleLinkedList.addByOrder(heroNode4);</span><br><span class="line">        singleLinkedList.addByOrder(heroNode2);</span><br><span class="line">        singleLinkedList.addByOrder(heroNode3);</span><br><span class="line">        singleLinkedList.list();</span><br><span class="line">        HeroNode heroNode5 = <span class="keyword">new</span> HeroNode(<span class="number">4</span>, <span class="string">"smile"</span>, <span class="string">"豹子头~~"</span>);</span><br><span class="line">        System.out.println(<span class="string">"修改后的链表"</span>);</span><br><span class="line">        singleLinkedList.update(heroNode5);</span><br><span class="line">        singleLinkedList.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleLinkedList</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个空的头结点：头结点的Data域可以不设任何信息，也可以记录表长等相关信息</span></span><br><span class="line">        <span class="keyword">private</span> HeroNode head = <span class="keyword">new</span> HeroNode(<span class="number">0</span>, <span class="string">" "</span>, <span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回头结点</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> HeroNode <span class="title">getHead</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//链表按序号顺序添加数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addByOrder</span><span class="params">(HeroNode node)</span> </span>&#123;</span><br><span class="line">            HeroNode temp = head;</span><br><span class="line">            <span class="comment">//标示编号是否存在</span></span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="comment">//用来判断链表是否为空，已经如果现有链表中没有比要插入的数据大的id，可以通过此来跳出循环</span></span><br><span class="line">                <span class="keyword">if</span> (temp.getNext() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (temp.getNext().getId() &gt; node.getId()) &#123;</span><br><span class="line">                    <span class="comment">// 1 ,3 , 2, 4.由于1小于3，故插入在1 2 之间</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp.getNext().getId() == node.getId()) &#123;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                temp = temp.getNext();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="comment">//链表为空</span></span><br><span class="line">                System.out.printf(<span class="string">"准备插入的英雄编号%d已经存在，不能插入"</span>, head.getId());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                node.setNext(temp.getNext());</span><br><span class="line">                temp.setNext(node);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//展示链表所有数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">//判断链表是否为空</span></span><br><span class="line">            <span class="keyword">if</span> (head.getNext() == <span class="keyword">null</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            HeroNode temp = head.getNext();</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"遍历结束"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(temp);</span><br><span class="line">                temp = temp.getNext();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//修改链表存在的数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(HeroNode node)</span> </span>&#123;</span><br><span class="line">            HeroNode temp = head.getNext();</span><br><span class="line">            <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(temp == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="comment">//遍历结束</span></span><br><span class="line">                    System.out.println(<span class="string">"没有找到该节点"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (temp.getId() == node.getId()) &#123;</span><br><span class="line">                    <span class="comment">//链表中已存在相同编号的数据</span></span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                    temp.setId(node.getId());</span><br><span class="line">                    temp.setName(node.getName());</span><br><span class="line">                    temp.setNikeName(node.getNikeName());</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                temp = temp.getNext();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 节点对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">HeroNode</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> String nikeName;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 下一节点</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> HeroNode next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HeroNode</span><span class="params">(<span class="keyword">int</span> id, String name, String nikeName)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.nikeName = nikeName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id = id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNikeName</span><span class="params">(String nikeName)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.nikeName = nikeName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext</span><span class="params">(HeroNode next)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getNikeName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> nikeName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> HeroNode <span class="title">getNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"HeroNode&#123;"</span> +</span><br><span class="line">                    <span class="string">"id="</span> + id +</span><br><span class="line">                    <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">", nikeName='"</span> + nikeName + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><p><strong>1.求单链表中有效节点的个数</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getLength</span><span class="params">(HeroNode head)</span> </span>&#123;</span><br><span class="line">    HeroNode temp = head;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (temp.getNext() == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp.getNext() != <span class="keyword">null</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        temp = temp.getNext();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"length: "</span> + count);</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>2.查找单链表中的倒数第k个结点 【新浪面试题】</strong></p>
<ul>
<li>代码实现：<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查找单链表中的倒数第k个结点 【新浪面试题】</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> index 倒数第k个</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 结点</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> HeroNode <span class="title">getNodeByIndex</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">    HeroNode temp = head;</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(temp.getNext() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        size++;</span><br><span class="line">        temp = temp.getNext();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//校验给出的索引</span></span><br><span class="line">    HeroNode node = head.getNext();</span><br><span class="line">    <span class="keyword">if</span>(index &gt; size || index &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">"输入数据不合理"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line">    HeroNode nodeByIndex = head.getNext();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(cur == size - index)&#123;</span><br><span class="line">            <span class="keyword">return</span> nodeByIndex;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(nodeByIndex.getNext() == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"遍历结束，未找到索引对应的结点"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cur++;</span><br><span class="line">        nodeByIndex = nodeByIndex.getNext();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>3.单链表的反转【腾讯面试题，有点难度】</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200113095142187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
<ul>
<li>代码实现:<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>工作中的Bug</title>
    <url>/3948678525/</url>
    <content><![CDATA[<p>本文旨在记录我在公司项目上遇到的Bug问题，以及解决思路：<br><br></p>
<a id="more"></a>

<h2 id="状态码问题"><a href="#状态码问题" class="headerlink" title="状态码问题"></a>状态码问题</h2><h3 id="400"><a href="#400" class="headerlink" title="400"></a>400</h3><blockquote>
<p>简单传递：1.注意参数匹配，如果缺少参数也会访问不了<br>Ajax传递：<br>1.注意加@ResponseBody注解(有时候代码正确，但是无法访问，因为 前端是json格式，但是后端解析不了)<br>2.文件上传的话需要添加：MultipartFile参数接收上传文件内容</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">①：</span><br><span class="line"><span class="comment">//点击图片</span></span><br><span class="line">$(<span class="string">"#uploadImage"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//触发input[file类型]</span></span><br><span class="line">    $(<span class="string">"#fileImage"</span>).click();</span><br><span class="line">    <span class="comment">//点击提交按钮上传图片</span></span><br><span class="line">    $(<span class="string">"#btnUpload"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//获取input[file类型]的值</span></span><br><span class="line">        <span class="keyword">let</span> fileImage = $(<span class="string">"#fileImage"</span>);</span><br><span class="line">        <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">        formData.append(<span class="string">"file"</span>, fileImage.get(<span class="number">0</span>).files[<span class="number">0</span>]);</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="comment">//请求地址</span></span><br><span class="line">            url: <span class="string">'[[@&#123;/user/upload&#125;]]'</span>,</span><br><span class="line">            type: <span class="string">'post'</span>,</span><br><span class="line">            dataType: <span class="string">'json'</span>,</span><br><span class="line">            data: formData,</span><br><span class="line">            <span class="comment">//ajax上传图片需要添加.</span></span><br><span class="line">            contentType: <span class="literal">false</span>,</span><br><span class="line">            processData: <span class="literal">false</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">"上传成功"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">②：</span><br><span class="line">$(<span class="string">"#fileImage"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#uploadImage"</span>).click();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//选中文件后立即上传</span></span><br><span class="line">$(<span class="string">"#fileUpload"</span>).on(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">    <span class="keyword">let</span> uploadImage = $(<span class="string">"#uploadImage"</span>);</span><br><span class="line">    formData.append(<span class="string">"file"</span>, uploadImage.get(<span class="number">0</span>).files[<span class="number">0</span>]);</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'[[@&#123;user/upload&#125;]]'</span>,</span><br><span class="line">        data: formData,</span><br><span class="line">        dataType: <span class="string">'json'</span>,</span><br><span class="line">        type: <span class="string">'post'</span>,</span><br><span class="line">        contentType: <span class="literal">false</span>,</span><br><span class="line">        processData: <span class="literal">false</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            layer.open(&#123;</span><br><span class="line">                title: <span class="string">"上传成功"</span>,</span><br><span class="line">                content: data.msg,</span><br><span class="line">                yes: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    parent.location.reload();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title>Java小笔记</title>
    <url>/457859619/</url>
    <content><![CDATA[<p>java每日小笔记<br><br></p>
<a id="more"></a>

<h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (File f : files) &#123;</span><br><span class="line">    System.out.println(f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>foreach相对于for循环，代码减少了，但是foreach依赖IEnumerable(IEnumerable是一个接口，它定义一个方法GetEnumerator，它返回一个IEnumerator接口，这允许只读访问一个集合，然后实现IEnumerable的集合可以与for-each语句一起使用)。<br>在运行的时候效率低于for循环。当然了，在处理不确定循环次数的循环，或者循环次数需要计算的情况下，使用foreach比较方便。而且foreach的代码经过编译系统的代码优化后，和for循环的循环类似。</p>
<ul>
<li>如果只是遍历集合或者数组，用foreach好些，快些。</li>
<li>如果对集合中的值进行修改，确定循环次数就要用for循环了。<h2 id="日期转换"><a href="#日期转换" class="headerlink" title="日期转换"></a>日期转换</h2><h3 id="SimpleDateFormate简单用法"><a href="#SimpleDateFormate简单用法" class="headerlink" title="SimpleDateFormate简单用法"></a>SimpleDateFormate简单用法</h3>Date类型转化成为String<br>①.<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Date date = <span class="keyword">new</span> Date();</span><br><span class="line"> SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>); </span><br><span class="line">String date=sdf.formate(date);（字符串时间格式不同）</span><br></pre></td></tr></table></figure>
②.<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SimpleDateFormat sdf1 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日  HH时mm分ss秒"</span>);</span><br></pre></td></tr></table></figure>
注意：用Mybatis往Mysql中添加时间时候，mysql 类型datetime ，往里面存是 时间对象可以是String和java.sql.Timestamp 两种类型，String类型的时间必须是“yyyyu-MM-dd HH:mm:ss”格式<br>String 类型转化成Date<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>); </span><br><span class="line">Date start = sdf.parse(startTime);</span><br></pre></td></tr></table></figure>
注意：传递进来的startTime是String类型的字符串，其格式必须和SimpleDateFormate里面的参数形式一直，不能任何格式的字符串都可以转化，要不出现转发异常<h2 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h2><h3 id="空间复杂度：以时间换空间"><a href="#空间复杂度：以时间换空间" class="headerlink" title="空间复杂度：以时间换空间"></a>空间复杂度：以时间换空间</h3></li>
<li><em>对一个算法在运行过程中临时占用存储空间大小的量度*</em><br>目的：找出roles集合中是否有与userInfo中id相同的，如果有就setChecked(true)，即被选中<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Role&gt; roles = roleService.find(<span class="keyword">null</span>);</span><br><span class="line">UserInfo userInfo = userInfoService.findByI(id);</span><br><span class="line"></span><br><span class="line">Map&lt;Integer,Role&gt; roleMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span>(Role role : roles) &#123;</span><br><span class="line">    roleMap.put(role.getId(), role);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(Role r : userInfo.getRoles()) &#123;</span><br><span class="line">    <span class="keyword">if</span>(roleMap.containsKey(r.getId())) &#123;</span><br><span class="line">        roleMap.get(r.getId()).setChecked(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="时间复杂度：以空间换时间"><a href="#时间复杂度：以空间换时间" class="headerlink" title="时间复杂度：以空间换时间"></a>时间复杂度：以空间换时间</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;Role&gt; roles = roleService.find(<span class="keyword">null</span>);</span><br><span class="line">UserInfo userInfo = userInfoService.findByI(id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(Role role : roles) &#123;</span><br><span class="line">    <span class="keyword">for</span>(Role r : userInfo.getRoles()) &#123;</span><br><span class="line">        role.setChecked(role.getId() == r.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//时间复杂度为:O(n²)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">100</span>;<span class="comment">//执行次数:1</span></span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;<span class="comment">//执行次数:1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;<span class="comment">//执行次数:n</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;<span class="comment">//执行次数:n*n</span></span><br><span class="line">            sum += j;<span class="comment">//执行次数:n*n</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="请求转发和重定向的区别和应用场景"><a href="#请求转发和重定向的区别和应用场景" class="headerlink" title="请求转发和重定向的区别和应用场景"></a>请求转发和重定向的区别和应用场景</h2><h3 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h3></li>
<li><em>一次请求，两次转发*</em><br>request.getRequestDispatcher(URL地址).forward(request, response)<br>处理流程：<blockquote>
<p>1.客户端发送请求，Servlet做出业务逻辑处理。</p>
</blockquote>
</li>
</ul>
<p>2.Servlet调用forword()方法，服务器Servlet把目标资源返回给客户端浏览器。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy85Mzg3MDctYWExMmIxYjFmNTUwZGY2Yy5wbmc?x-oss-process=image/format,png" alt="请求转发"><br><strong>注：请求转发会返回到资源的相对目录下</strong></p>
<h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p><strong>两次请求，两次转发</strong><br>response.sendRedirect(URL地址)<br>处理流程：</p>
<blockquote>
<p>1.客户端发送请求，Servlet做出业务逻辑处理。<br>2.Servlet调用response.sendReadirect()方法，把要访问的目标资源作为response响应头信息发给客户端浏览器(web客户端)。<br>3.客户端浏览器重新访问服务器资源xxx.jsp，<br>4.服务器再次对客户端浏览器做出响应。</p>
</blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy85Mzg3MDctNjc0MTQyYTliZmEyMmRhNS5wbmc?x-oss-process=image/format,png" alt="重定向"><br><strong>注：重定向能调用在controller中对应返回地址的方法</strong></p>
<h2 id="cookie-是什么和使用场景"><a href="#cookie-是什么和使用场景" class="headerlink" title="cookie 是什么和使用场景"></a>cookie 是什么和使用场景</h2><p><strong>cookie 是服务器端保存在浏览器的一小段文本信息，浏览器每次向服务器端发出请求，都会附带上这段信息</strong></p>
<h3 id="使用场景："><a href="#使用场景：" class="headerlink" title="使用场景："></a>使用场景：</h3><ul>
<li>对话管理：保存登录、购物车等需要记录的信息</li>
<li>个性化：保存用户的偏好，比如网页的字体大小、背景色等等</li>
<li>追踪：记录和分析用户的行为</li>
</ul>
<h4 id="Cookie的创建"><a href="#Cookie的创建" class="headerlink" title="Cookie的创建"></a>Cookie的创建</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCookie</span><span class="params">(HttpServletRequest request,String cookieName)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Cookie[] cookies =  request.getCookies();</span><br><span class="line">        <span class="keyword">if</span>(cookies != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(Cookie cookie : cookies)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cookie.getName().equals(cookieName))&#123;</span><br><span class="line">                    <span class="keyword">return</span> cookie.getValue();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeCookie</span><span class="params">(HttpServletResponse response, String cookieName,String value)</span></span>&#123;</span><br><span class="line">        Cookie cookie = <span class="keyword">new</span> Cookie(cookieName,value);</span><br><span class="line">        <span class="comment">// 只能资源目录下能使用Cookie</span></span><br><span class="line">        cookie.setPath(<span class="string">"/"</span>);</span><br><span class="line">        cookie.setMaxAge(<span class="number">3600</span>);</span><br><span class="line">        response.addCookie(cookie);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Seesion-和-Cookie的结合应用"><a href="#Seesion-和-Cookie的结合应用" class="headerlink" title="Seesion 和 Cookie的结合应用"></a>Seesion 和 Cookie的结合应用</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/page"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"login"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(@CookieValue(value = <span class="string">"token"</span>, required = <span class="keyword">false</span>)</span> Cookie cookie) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (cookie != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//如果cookie不为空则说明已经d登陆 则直接跳转主界面</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">"/index"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//TODO 重定向次数过多 使用redirect，会再次调用controller层的login方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/login/page"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(UserInfo userInfo, HttpSession session, HttpServletResponse response, ModelMap map)</span> </span>&#123;</span><br><span class="line">        UserInfo user = userInfoService.findOneUser(userInfo);</span><br><span class="line">        <span class="comment">//判断用户名密码是否正确</span></span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            session.setAttribute(ApplicationConst.LOGIN_SESSION_STATUS, user);</span><br><span class="line">            <span class="comment">//生成token</span></span><br><span class="line">            String token = UUID.randomUUID().toString();</span><br><span class="line">            <span class="comment">//创建cookie</span></span><br><span class="line">            Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"token"</span>, token);</span><br><span class="line">            <span class="comment">// 3、设置 cookie 的有效时间，就浏览器关闭不会清楚此Cookie，但是谷歌浏览器依旧删除了:</span></span><br><span class="line">            <span class="comment">// 设置有效期 单位是秒，不是毫秒</span></span><br><span class="line">            <span class="comment">// 默认情况下创建的 cookie 是一个会话级别的 cookie，即存储在浏览器内存中，浏览器关闭，cookie 消失。</span></span><br><span class="line">            <span class="comment">// 正整数：表示将 cookie 保存到浏览器的缓存目录(硬盘)中，数值表示保存的时间；</span></span><br><span class="line">            <span class="comment">// 负整数：表示将 cookie 保存到浏览器的内存中，浏览器关闭 cookie 就会销毁；</span></span><br><span class="line">            <span class="comment">// 0：表示删除同名的 cookie,删除 cookie 时，有效路径必须一致，否则不会删除</span></span><br><span class="line">            cookie.setMaxAge(<span class="number">20</span> * <span class="number">60</span>);</span><br><span class="line">            <span class="comment">//将cookie响应给浏览器</span></span><br><span class="line">            response.addCookie(cookie);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            map.put(<span class="string">"msg"</span>, <span class="string">"账号或密码错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/login/page"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/logout"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">logout</span><span class="params">(HttpSession session)</span> </span>&#123;</span><br><span class="line">        session.invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"redirect:/login/page"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="Arrays-toString-数组"><a href="#Arrays-toString-数组" class="headerlink" title="Arrays.toString(数组)"></a>Arrays.toString(数组)</h3><ul>
<li><p>Arrays类中只可以用toString()方法进行遍历一维数组,而不可以用deepToString(Object a)</p>
</li>
<li><p>操作一维数组：</p>
<blockquote>
<p>int[] arr = new  int[]{1,2,3};<br>  输出：[1, 2, 3]</p>
</blockquote>
</li>
<li><p>操作二维数组：</p>
<ul>
<li><p><strong>输出的是数组的地址</strong>：eg：[[I@7a7b0070, [I@39a054a5</p>
</li>
<li><p>拼接步骤：</p>
<ul>
<li>1.如果不为空且length大于0</li>
<li>2.采用StringBuilder b = new StringBuilder();</li>
<li>3.拼接b.append(‘[‘);</li>
<li>4.循环每一行：for (int i = 0; ; i++)</li>
<li>5.调用String.valueOf():</li>
</ul>
<p>  <em>return getClass().getName() + “@” + Integer.toHexString(hashCode());</em></p>
<ul>
<li>6.循环到最后一行：return b.append(‘]’).toString();</li>
</ul>
</li>
</ul>
</li>
<li><p>源码展示</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toString</span><span class="params">(<span class="keyword">int</span>[] a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"null"</span>;</span><br><span class="line">    <span class="keyword">int</span> iMax = a.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (iMax == -<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"[]"</span>;</span><br><span class="line"></span><br><span class="line">    StringBuilder b = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    b.append(<span class="string">'['</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; ; i++) &#123;</span><br><span class="line">        b.append(a[i]);</span><br><span class="line">        <span class="keyword">if</span> (i == iMax)</span><br><span class="line">            <span class="keyword">return</span> b.append(<span class="string">']'</span>).toString();</span><br><span class="line">        b.append(<span class="string">", "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Arrays-deepToString-数组"><a href="#Arrays-deepToString-数组" class="headerlink" title="Arrays.deepToString(数组))"></a>Arrays.deepToString(数组))</h3></li>
<li><p>不仅可以遍历二维,还可以遍历三维甚至更高.</p>
<blockquote>
<p>返回指定数组“深层内容”的字符串表示形式。如果数组包含作为元素的其他数组，则字符串表示形式包含其内容等。此方法是为了将多维数组转换为字符串而设计的。<br>  字符串表示形式由数组的元素列表组成，括在方括号（”[]”）中。相邻元素用字符 “, “（逗号加空格）分隔。这些元素通过 String.valueOf(Object) 转换为字符串，除非它们是自身的数组。 </p>
</blockquote>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">deepToString</span><span class="params">(Object[] a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"null"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> bufLen = <span class="number">20</span> * a.length;</span><br><span class="line">    <span class="keyword">if</span> (a.length != <span class="number">0</span> &amp;&amp; bufLen &lt;= <span class="number">0</span>)</span><br><span class="line">        bufLen = Integer.MAX_VALUE;</span><br><span class="line">    StringBuilder buf = <span class="keyword">new</span> StringBuilder(bufLen);</span><br><span class="line">    deepToString(a, buf, <span class="keyword">new</span> HashSet&lt;Object[]&gt;());</span><br><span class="line">    <span class="keyword">return</span> buf.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="String、Stringbuffer与Stringbuilder的区别"><a href="#String、Stringbuffer与Stringbuilder的区别" class="headerlink" title="String、Stringbuffer与Stringbuilder的区别"></a>String、Stringbuffer与Stringbuilder的区别</h2><h3 id="在执行速度上："><a href="#在执行速度上：" class="headerlink" title="在执行速度上："></a>在执行速度上：</h3><ul>
<li>Stringbuilder-&gt;Stringbuffer-&gt;String<h3 id="String是字符串常量"><a href="#String是字符串常量" class="headerlink" title="String是字符串常量"></a>String是字符串常量</h3></li>
<li>Stringbuffer是字符串变量</li>
<li>Stringbuilder是字符串变量<ul>
<li>有可能我们会疑惑String怎么是字符串变量。看以下代码：<br>String str = adc；<br>str = str + “ef”；<br>System.out.println(str);<br>输出结果为:abcef;<blockquote>
<p>在Java虚拟机中str为adc时是一个变量，当str被重新赋值为adcef时为另一个变量，被重新分配了一次内存，上次使用的内存会被gc在适当的时候回收掉。由于这种机制导致了如果有大量的String赋值操作时，会导致运行速度的缓慢，以及内存使用量的上升。</p>
</blockquote>
</li>
</ul>
</li>
<li>一个特殊的例子<ul>
<li>你会很惊讶的发现，生成str对象速度简直太快了，而这个时候Stringbuffer居然速度上根本一点都不占优势。其实这是JVM的一个把戏，实际上：<br>String str  =  ”this is only a“ + “simple” + “test”;<br>其实就是<br>String str = “this is only a simple test”；<br>所以不需要太多的是时间。但大家这里需要注意的是，如果你的字符串是来自另外的String对象的话。速度就没那么快了，譬如：<br>String str1 = “this is only a”；<br>String str2 = “simple”;<br>String str3 = “test”;<br>String str = str1 + str2 + str3;<br>这时候JVM会规规矩矩的按照原来的方式去做。</li>
</ul>
</li>
<li>StringBuilder与StringBuffer<pre><code>StringBuilder：线程非安全的
StringBuffer：线程安全的</code></pre><blockquote>
<p>当我们在字符串缓冲区去被多个线程使用时，JVM不能保证 StringBuilder的线程是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。<br>  当然大多数情况是在单线程下进行的，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。</p>
</blockquote>
</li>
<li>小结：<br>（1）如果要操作少量的数据用 String；<br>（2）多线程操作字符串缓冲区下操作大量数据 StringBuffer；<br>（3）单线程操作字符串缓冲区下操作大量数据 StringBuilder（推荐使用）。</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20200110150851244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200110151612461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot项目小笔记</title>
    <url>/2705596892/</url>
    <content><![CDATA[<p>本文主要记录我使用 idea 搭建 springboot 项目时小功能配置<br><br></p>
<a id="more"></a>

<h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><p>连接 Mysql 数据库</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>连接 Oracle 数据库</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.oracle.ojdbc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ojdbc8<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- java.sql.SQLException: 不支持的字符集 (在类路径中添加 orai18n.jar): ZHS16GBK --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.easyproject<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>orai18n<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>12.1.0.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>数据源配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- druid数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>yml 文件配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 连接Mysql --&gt;</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/mall_vue?serverTimezone=GMT%2b8</span><br><span class="line">    username: root</span><br><span class="line">    password: 密码</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 连接Oracle --&gt;</span></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">    driver-class-name: oracle.jdbc.driver.OracleDriver</span><br><span class="line">    url: jdbc:oracle:thin:@127.0.0.1:1521:orcl</span><br><span class="line">    username: scott</span><br><span class="line">    password: 密码</span><br></pre></td></tr></table></figure>

<h2 id="pom-文件"><a href="#pom-文件" class="headerlink" title="pom 文件"></a>pom 文件</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 基本的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 热加载 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- lombok--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 打印日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="启动类上-的配置"><a href="#启动类上-的配置" class="headerlink" title="启动类上 的配置"></a>启动类上 的配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"cn.blue.mall.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MallApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MallApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Controller-上的配置"><a href="#Controller-上的配置" class="headerlink" title="Controller 上的配置"></a>Controller 上的配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/users"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoController</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Resource</span></span><br><span class="line">  <span class="keyword">private</span> UserInfoService userInfoService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Sevice-上的配置"><a href="#Sevice-上的配置" class="headerlink" title="Sevice 上的配置"></a>Sevice 上的配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Blue</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/3/5</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Service</span>(<span class="string">"userInfoService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserInfoService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserInfoMapper userInfoMapper;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="mapper-上的配置"><a href="#mapper-上的配置" class="headerlink" title="mapper 上的配置"></a>mapper 上的配置</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"cn.blue.mall.mapper.UserInfoMapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userInfoMapper"</span> <span class="attr">type</span>=<span class="string">"cn.blue.mall.bean.UserInfo"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">"ID"</span> <span class="attr">property</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"NAME"</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"EMAIL"</span> <span class="attr">property</span>=<span class="string">"email"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"PASSWORD"</span> <span class="attr">property</span>=<span class="string">"password"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"STATUS"</span> <span class="attr">property</span>=<span class="string">"status"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">"TELEPHONE"</span> <span class="attr">property</span>=<span class="string">"telephone"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- roles对应了Roles类中的 roles对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"roles"</span> <span class="attr">column</span>=<span class="string">"ROLE"</span> <span class="attr">javaType</span>=<span class="string">"cn.blue.mall.bean.Roles"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">select</span>=<span class="string">"cn.blue.mall.mapper.RolesMapper.findSetRoleByRoleId"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"Base_Column"</span>&gt;</span>ID ,NAME, PASSWORD, EMAIL, TELEPHONE, ROLE, STATUS<span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"Base_Where"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id != null and id != ''"</span>&gt;</span></span><br><span class="line">                AND ID=#&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null and name != ''"</span>&gt;</span></span><br><span class="line">                AND NAME like concat(concat('%',#&#123;name&#125;),'%')</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null and email != ''"</span>&gt;</span></span><br><span class="line">                AND EMAIL=#&#123;email&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"telephone != null and telephone != ''"</span>&gt;</span></span><br><span class="line">                AND TELEPHONE=#&#123;telephone&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"role != null"</span>&gt;</span></span><br><span class="line">                AND ROLE=#&#123;role&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"status != null"</span>&gt;</span></span><br><span class="line">                AND STATUS=#&#123;status&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">"Base_Update"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null and name != ''"</span>&gt;</span></span><br><span class="line">                NAME=#&#123;name&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"telephone != null and telephone != ''"</span>&gt;</span></span><br><span class="line">                TELEPHONE=#&#123;telephone&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null and email != ''"</span>&gt;</span></span><br><span class="line">                EMAIL=#&#123;email&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"password != null and password != ''"</span>&gt;</span></span><br><span class="line">                PASSWORD=#&#123;password&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"role != null"</span>&gt;</span></span><br><span class="line">                ROLE=#&#123;role&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"status != null"</span>&gt;</span></span><br><span class="line">                STATUS=#&#123;status&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAll"</span> <span class="attr">parameterType</span>=<span class="string">"cn.blue.mall.bean.UserInfo"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">resultMap</span>=<span class="string">"userInfoMapper"</span>&gt;</span></span><br><span class="line">        SELECT</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Base_Column"</span>/&gt;</span></span><br><span class="line">        FROM mall_users</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"Base_Where"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateStatusById"</span> <span class="attr">parameterType</span>=<span class="string">"cn.blue.mall.bean.UserInfo"</span>&gt;</span></span><br><span class="line">        UPDATE MALL_USERS</span><br><span class="line">        SET status = #&#123;userInfo.status&#125;</span><br><span class="line">        WHERE id=#&#123;userInfo.id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"cn.blue.mall.bean.UserInfo"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> <span class="attr">keyColumn</span>=<span class="string">"id"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        INSERT INTO MALL_USERS(ID, NAME, PASSWORD, EMAIL, TELEPHONE)</span><br><span class="line">        VALUES (#&#123;id&#125;, #&#123;name&#125;, #&#123;password&#125;, #&#123;email&#125;, #&#123;telephone&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteById"</span> <span class="attr">parameterType</span>=<span class="string">"string"</span>&gt;</span></span><br><span class="line">        DELETE FROM MALL_USERS</span><br><span class="line">        WHERE ID = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="PageHelper-分页"><a href="#PageHelper-分页" class="headerlink" title="PageHelper 分页"></a>PageHelper 分页</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>代码示例: 前端分页，实现只需要将对应的参数传过来即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> pageNum 当前页码</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> pageSize 当前每页数据量</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">findAll</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">            @RequestParam(name = <span class="string">"pageNum"</span>, required = <span class="keyword">false</span>, defaultValue = <span class="string">"1"</span>)</span> Integer pageNum,</span></span><br><span class="line"><span class="function">            @<span class="title">RequestParam</span><span class="params">(name = <span class="string">"pageSize"</span>, required = <span class="keyword">false</span>, defaultValue = <span class="string">"5"</span>)</span> Integer pageSize,</span></span><br><span class="line"><span class="function">            UserInfo user) </span>&#123;</span><br><span class="line">        PageHelper.startPage(pageNum, pageSize);</span><br><span class="line">        List&lt;UserInfo&gt; list = userInfoService.findAll(<span class="keyword">null</span>);</span><br><span class="line">        PageInfo&lt;UserInfo&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;&gt;(list);</span><br><span class="line">        Result r = Result.success();</span><br><span class="line">        r.add(<span class="string">"total"</span>, pageInfo.getTotal());</span><br><span class="line">        r.add(<span class="string">"data"</span>, list);</span><br><span class="line">        r.setMsg(<span class="string">"查询成功"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="SpringBoot-的-yml-文件配置"><a href="#SpringBoot-的-yml-文件配置" class="headerlink" title="SpringBoot 的 yml 文件配置"></a>SpringBoot 的 yml 文件配置</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">cn.blue:</span> <span class="string">trace</span></span><br><span class="line">    <span class="comment">#优先级从高至低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># layui模板里的时间格式配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">"GMT+8"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/rbac?serverTimezone=GMT%2b8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 开发阶段关闭thymeleaf的模板缓存</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="comment"># 在eclipse可以这么配置</span></span><br><span class="line">  <span class="comment"># mapper-locations: classpath:cn/blue/mapper/sqlmap/*.xml</span></span><br><span class="line">  <span class="comment"># 在idea中mapper文件应该放在resources文件下</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#  配置别名扫描的包</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.hm.publicraise.bean</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  头像存储位置</span></span><br><span class="line"><span class="attr">head-img-path:</span> <span class="string">classpath:/static/upload/heads</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  头像存储位置</span></span><br><span class="line"><span class="attr">raise-img-path:</span> <span class="string">classpath:/static/upload/raises</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  富文本编辑器</span></span><br><span class="line"><span class="attr">ue:</span></span><br><span class="line">  <span class="attr">server-url:</span> <span class="string">/ueditor/jsp/controller</span></span><br></pre></td></tr></table></figure>

<h2 id="ueditor-富文本编辑器"><a href="#ueditor-富文本编辑器" class="headerlink" title="ueditor 富文本编辑器"></a>ueditor 富文本编辑器</h2><ol>
<li>yml 文件配置</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  富文本编辑器</span></span><br><span class="line"><span class="attr">ue:</span></span><br><span class="line">  <span class="attr">server-url:</span> <span class="string">/ueditor/jsp/controller</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>依赖导入</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line"><span class="string">&lt;groupId&gt;cn.jasonone.ueditor&lt;/groupId&gt;</span></span><br><span class="line"><span class="string">&lt;artifactId&gt;ueditor-spring-boot-starter&lt;/artifactId&gt;</span></span><br><span class="line"><span class="string">&lt;version&gt;1.1.4&lt;/version&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>导入 ueditor</li>
</ol>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script type="text/plain" id="editor" name="sonContent"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Invalid-bound-statement-not-found-，访问不到-mapper-xml"><a href="#Invalid-bound-statement-not-found-，访问不到-mapper-xml" class="headerlink" title="Invalid bound statement(not found)，访问不到 mapper.xml"></a>Invalid bound statement(not found)，访问不到 mapper.xml</h2><p><img src="https://img-blog.csdn.net/20180820114136211?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2lkb215d2F5/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>application 配置文件中 mybatis 配置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="代码正确，无法访问-controller-层方法"><a href="#代码正确，无法访问-controller-层方法" class="headerlink" title="代码正确，无法访问 controller 层方法"></a>代码正确，无法访问 controller 层方法</h2><p><strong>其他包都得放在启动类包下</strong><br><img src="https://img-blog.csdn.net/20171201202512158?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbGQxMTcwODEzMzM1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<h2 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h2><h3 id="登录拦截器"><a href="#登录拦截器" class="headerlink" title="登录拦截器"></a>登录拦截器</h3><p>1.LoginController 主要代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 登录方法</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@PostMapping</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(UserInfo userInfo, HttpSession session)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        UserInfo user = userInfoService.findOneUser(userInfo);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//存放引用常量的位置：ApplicationConst</span></span><br><span class="line">            session.setAttribute(ApplicationConst.LOGIN_SESSION_STATUS, user);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重定向回去会调用controller，但是请求转发只会访问目录下的资源文件</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"redirect:/login"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.LoginHandlerInterceptor 登录拦截器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginHandlerInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        UserInfo user = (UserInfo) session.getAttribute(ApplicationConst.LOGIN_SESSION_STATUS);</span><br><span class="line">        <span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            response.sendRedirect(request.getContextPath() + <span class="string">"/login"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3.配置 WebMvcConfigurer 拦截器，将登录拦截器添加进去</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyWebMvcConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">"/"</span>).setViewName(<span class="string">"index"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LoginHandlerInterceptor())</span><br><span class="line">                <span class="comment">//拦截所有</span></span><br><span class="line">                .addPathPatterns(<span class="string">"/**"</span>)</span><br><span class="line">                <span class="comment">//排除资源文件和登录、注销请求</span></span><br><span class="line">                .excludePathPatterns(<span class="string">"/login"</span>, <span class="string">"/logout"</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">"/layui/**"</span>, <span class="string">"/**/*.js"</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">"/**/*.jpg"</span>, <span class="string">"/**/*.png"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>idea</tag>
        <tag>Springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>富文本编辑器ueditor</title>
    <url>/4294388788/</url>
    <content><![CDATA[<h2 id="yml文件配置"><a href="#yml文件配置" class="headerlink" title="yml文件配置"></a>yml文件配置</h2><a id="more"></a>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#  富文本编辑器</span></span><br><span class="line"><span class="attr">ue:</span></span><br><span class="line">  <span class="attr">server-url:</span> <span class="string">/ueditor/jsp/controller</span></span><br></pre></td></tr></table></figure>
<h2 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">	<span class="string">&lt;groupId&gt;cn.jasonone.ueditor&lt;/groupId&gt;</span></span><br><span class="line">	<span class="string">&lt;artifactId&gt;ueditor-spring-boot-starter&lt;/artifactId&gt;</span></span><br><span class="line">	<span class="string">&lt;version&gt;1.1.4&lt;/version&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="导入ueditor"><a href="#导入ueditor" class="headerlink" title="导入ueditor"></a>导入ueditor</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script type="text/plain" id="editor" name="sonContent"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>JSR303数据校验</title>
    <url>/293136133/</url>
    <content><![CDATA[<p>添加bean层校验规则<br><br></p>
<a id="more"></a>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"(^[a-z0-9_-]&#123;6,16&#125;$)|(^[\\u2E80-\\u9FFF]&#123;2,5&#125;)"</span>,</span><br><span class="line">    message = <span class="string">"用户名需要输入6-16位字母和数字或者2-5位中文的组合\""</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Email</span></span><br><span class="line"><span class="meta">@Pattern</span>(regexp = <span class="string">"^([a-z0-9_.-]+)@([\\da-z.-]+)\\.([a-z.]&#123;2,6&#125;)$"</span> ,</span><br><span class="line">    message = <span class="string">"邮箱格式不合法"</span>)</span><br><span class="line"><span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure>
<p>获取校验信息</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">saveEmp</span><span class="params">(@Valid Employee employee, BindingResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (result.hasErrors()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            List&lt;FieldError&gt; errors = result.getFieldErrors();</span><br><span class="line">            <span class="keyword">for</span> (FieldError fieldError : errors</span><br><span class="line">            ) &#123;</span><br><span class="line">                <span class="comment">//错误信息，错误字段</span></span><br><span class="line">                map.put(fieldError.getField(), fieldError.getDefaultMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> Result.error(<span class="number">500</span>).setMsg(<span class="string">"保存失败"</span>).add(<span class="string">"error"</span>, map);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            employeeService.saveEmp(employee);</span><br><span class="line">            <span class="keyword">return</span> Result.success().setMsg(<span class="string">"保存成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>导入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSR303数据校验--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.18.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据校验</tag>
      </tags>
  </entry>
  <entry>
    <title>ECharts</title>
    <url>/4251021762/</url>
    <content><![CDATA[<h2 id="基本示例"><a href="#基本示例" class="headerlink" title="基本示例"></a>基本示例</h2><p>1.引入ECharts需要的jar包<br><br></p>
<a id="more"></a>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;script src="https://cdn.bootcss.com/echarts/4.1.0/echarts.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../resources/echarts/dist/echarts.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../../resources/js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2.柱状图-前端</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px; height: 400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">		<span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">		<span class="comment">// 指定图表的配置项和数据</span></span></span><br><span class="line"><span class="actionscript">		<span class="keyword">var</span> option = &#123;</span></span><br><span class="line">			title : &#123;</span><br><span class="line"><span class="actionscript">				text : <span class="string">'ECharts 入门示例'</span></span></span><br><span class="line">			&#125;,</span><br><span class="line">			tooltip : &#123;&#125;,</span><br><span class="line">			legend : &#123;</span><br><span class="line"><span class="actionscript">				data : [ <span class="string">'销量'</span> ]</span></span><br><span class="line">			&#125;,</span><br><span class="line">			xAxis : &#123;</span><br><span class="line"><span class="actionscript">				data : [ <span class="string">"衬衫"</span>, <span class="string">"羊毛衫"</span>, <span class="string">"雪纺衫"</span>, <span class="string">"裤子"</span>, <span class="string">"高跟鞋"</span>, <span class="string">"袜子"</span> ]</span></span><br><span class="line">			&#125;,</span><br><span class="line">			yAxis : &#123;&#125;,</span><br><span class="line">			series : [ &#123;</span><br><span class="line"><span class="actionscript">				name : <span class="string">'销量'</span>,</span></span><br><span class="line"><span class="actionscript">				type : <span class="string">'bar'</span>,</span></span><br><span class="line"><span class="javascript">				data : [<span class="built_in">Math</span>.random(<span class="number">5</span>), <span class="built_in">Math</span>.random(<span class="number">20</span>), <span class="built_in">Math</span>.random(<span class="number">36</span>), <span class="built_in">Math</span>.random(<span class="number">10</span>), <span class="built_in">Math</span>.random(<span class="number">10</span>),<span class="built_in">Math</span>.random(<span class="number">20</span>)]</span></span><br><span class="line">			&#125; ]</span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">		<span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span></span><br><span class="line">		myChart.setOption(option);</span><br><span class="line">	<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225142840305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.折线图-前端</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px; height: 400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">			<span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">			<span class="built_in">window</span>.onload= <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">				$.ajax(&#123;</span></span><br><span class="line"><span class="actionscript">					type: <span class="string">'get'</span>,</span></span><br><span class="line"><span class="actionscript">					url : <span class="string">'/line/charts'</span>,</span></span><br><span class="line"><span class="actionscript">					dataType: <span class="string">'json'</span>,</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 					success: (data, statusText, xhr) =&gt; &#123;</span></span></span><br><span class="line"><span class="actionscript">					success:<span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//	 					$.get('data.json', function(data) &#123; //与服务器连接成功</span></span></span><br><span class="line">							myChart.setOption(option = &#123;</span><br><span class="line">								title: &#123;</span><br><span class="line"><span class="actionscript">									text: <span class="string">'ECharts 异步加载数据'</span></span></span><br><span class="line">								&#125;,</span><br><span class="line">								tooltip: &#123;&#125;,</span><br><span class="line">								legend: &#123;</span><br><span class="line"><span class="actionscript">									data: [<span class="string">'访问量'</span>]</span></span><br><span class="line">								&#125;,</span><br><span class="line">								xAxis: &#123;</span><br><span class="line"><span class="actionscript">									<span class="comment">// 横坐标值：data.name</span></span></span><br><span class="line">									data: data.categories</span><br><span class="line">								&#125;,</span><br><span class="line">								yAxis: &#123;&#125;,</span><br><span class="line">								series: [&#123;</span><br><span class="line"><span class="actionscript">									name: <span class="string">'访问量'</span>,</span></span><br><span class="line"><span class="actionscript">									type: <span class="string">'line'</span>,</span></span><br><span class="line"><span class="actionscript">									<span class="comment">// data:data.data[200,100,350,90,11]</span></span></span><br><span class="line">									data: data.data</span><br><span class="line">								&#125;]</span><br><span class="line">							&#125;);</span><br><span class="line"><span class="actionscript"><span class="comment">//	 					&#125;);</span></span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;)</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225141625443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.个性化图表样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"reset"</span> <span class="attr">onclick</span>=<span class="string">"reset()"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="function"><span class="keyword">function</span> <span class="title">reset</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">window</span>.location.reload()</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"><span class="actionscript">	<span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">	<span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line">	myChart.setOption(</span><br><span class="line">		option = &#123;</span><br><span class="line"><span class="actionscript">			backgroundColor: <span class="string">'#2c343c'</span>,</span></span><br><span class="line">			visualMap: &#123;</span><br><span class="line"><span class="actionscript">				show: <span class="literal">false</span>,</span></span><br><span class="line">				min: 80,</span><br><span class="line">				max: 600,</span><br><span class="line">				inRange: &#123;</span><br><span class="line">					colorLightness: [0, 1]</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;,</span><br><span class="line">			series: [&#123;</span><br><span class="line"><span class="actionscript">				name: <span class="string">'访问来源'</span>,</span></span><br><span class="line"><span class="actionscript">				type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">				radius: <span class="string">'55%'</span>,</span></span><br><span class="line">				data: [&#123;</span><br><span class="line">						value: 235,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'视频广告'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 274,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'联盟广告'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 310,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'邮件营销'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 335,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'直接访问'</span></span></span><br><span class="line">					&#125;,</span><br><span class="line">					&#123;</span><br><span class="line">						value: 400,</span><br><span class="line"><span class="actionscript">						name: <span class="string">'搜索引擎'</span></span></span><br><span class="line">					&#125;</span><br><span class="line">				],</span><br><span class="line"><span class="actionscript">				roseType: <span class="string">'angle'</span>,</span></span><br><span class="line">				label: &#123;</span><br><span class="line">					normal: &#123;</span><br><span class="line">						textStyle: &#123;</span><br><span class="line"><span class="actionscript">							color: <span class="string">'rgba(255, 255, 255, 0.3)'</span></span></span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				labelLine: &#123;</span><br><span class="line">					normal: &#123;</span><br><span class="line">						lineStyle: &#123;</span><br><span class="line"><span class="actionscript">							color: <span class="string">'rgba(255, 255, 255, 0.3)'</span></span></span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;,</span><br><span class="line">				itemStyle: &#123;</span><br><span class="line">					normal: &#123;</span><br><span class="line"><span class="actionscript">						color: <span class="string">'#c23531'</span>,</span></span><br><span class="line">						shadowBlur: 200,</span><br><span class="line"><span class="actionscript">						shadowColor: <span class="string">'rgba(0, 0, 0, 0.5)'</span></span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;]</span><br><span class="line">		&#125;</span><br><span class="line">	)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225143235194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5.异步加载图表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 为 ECharts 准备一个具备大小（宽高）的 DOM --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width: 600px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">fetchData</span><span class="params">(cb)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 通过 setTimeout 模拟异步加载</span></span></span><br><span class="line"><span class="actionscript">          setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">              cb(&#123;</span><br><span class="line"><span class="actionscript">                  categories: [<span class="string">"衬衫"</span>, <span class="string">"羊毛衫"</span>, <span class="string">"雪纺衫"</span>, <span class="string">"裤子"</span>, <span class="string">"高跟鞋"</span>, <span class="string">"袜子"</span>],</span></span><br><span class="line">                  data: [5, 20, 36, 10, 10, 20]</span><br><span class="line">              &#125;);</span><br><span class="line">          &#125;, 1000);</span><br><span class="line">      &#125;</span><br><span class="line">      myChart.setOption(option = &#123;</span><br><span class="line">          title: &#123;</span><br><span class="line"><span class="actionscript">              text: <span class="string">'异步数据加载示例'</span></span></span><br><span class="line">          &#125;,</span><br><span class="line">          tooltip: &#123;&#125;,</span><br><span class="line">          legend: &#123;</span><br><span class="line"><span class="actionscript">              data: [<span class="string">'销量'</span>]</span></span><br><span class="line">          &#125;,</span><br><span class="line">          xAxis: &#123;</span><br><span class="line">              data: []</span><br><span class="line">          &#125;,</span><br><span class="line">          yAxis: &#123;&#125;,</span><br><span class="line">          series: [&#123;</span><br><span class="line"><span class="actionscript">              name: <span class="string">'销量'</span>,</span></span><br><span class="line"><span class="actionscript">              type: <span class="string">'bar'</span>,</span></span><br><span class="line">              data: []</span><br><span class="line">          &#125;]</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">myChart.showLoading();</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      fetchData(<span class="function"><span class="keyword">function</span> <span class="params">(data)</span> </span>&#123;</span></span><br><span class="line">	myChart.hideLoading();</span><br><span class="line">          myChart.setOption(&#123;</span><br><span class="line">              xAxis: &#123;</span><br><span class="line">                  data: data.categories</span><br><span class="line">              &#125;,</span><br><span class="line">              series: [&#123;</span><br><span class="line"><span class="actionscript">                  <span class="comment">// 根据名字对应到相应的系列</span></span></span><br><span class="line"><span class="actionscript">                  name: <span class="string">'销量'</span>,</span></span><br><span class="line">                  data: data.data</span><br><span class="line">              &#125;]</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191225144430531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20191225144443646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="模拟疫情图"><a href="#模拟疫情图" class="headerlink" title="模拟疫情图"></a>模拟疫情图</h2><ol>
<li>引入echarts<blockquote>
<p>npm install echarts –save</p>
</blockquote>
</li>
<li>引入jsonp<blockquote>
<p>npm istall jsonp –save<br><img src="https://img-blog.csdnimg.cn/20200317202735335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt=""></p>
</blockquote>
</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"map"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 导入Echarts</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> echarts <span class="keyword">from</span> <span class="string">'echarts'</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 导入中国地图</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> <span class="string">'echarts/map/js/china'</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 引入jsonp</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> jsonp <span class="keyword">from</span> <span class="string">'jsonp'</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> option = &#123;</span></span><br><span class="line">  title: &#123;</span><br><span class="line"><span class="actionscript">    text: <span class="string">'模拟疫情地图'</span></span></span><br><span class="line">  &#125;,</span><br><span class="line">  visualMap: [</span><br><span class="line">    &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 分段型</span></span></span><br><span class="line"><span class="actionscript">      type: <span class="string">'piecewise'</span>,</span></span><br><span class="line"><span class="actionscript">      show: <span class="literal">true</span>,</span></span><br><span class="line">      splitNumber: 6,</span><br><span class="line">      pieces: [</span><br><span class="line">        &#123;</span><br><span class="line">          min: 10000</span><br><span class="line"><span class="actionscript">        &#125;, <span class="comment">// 不指定 max，表示 max 为无限大（Infinity）。</span></span></span><br><span class="line">        &#123;</span><br><span class="line">          min: 1000,</span><br><span class="line">          max: 9999</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          min: 100,</span><br><span class="line">          max: 999</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          min: 10,</span><br><span class="line">          max: 99</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          min: 1,</span><br><span class="line">          max: 9</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          min: 0,</span><br><span class="line">          max: 0</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      inRange: &#123;</span><br><span class="line"><span class="actionscript">        symbol: <span class="string">'rect'</span>,</span></span><br><span class="line"><span class="actionscript">        color: [<span class="string">'#fff'</span>, <span class="string">'#ffaa85'</span>, <span class="string">'#ff7b69'</span>, <span class="string">'#cc2929'</span>, <span class="string">'#8c0d0d'</span>, <span class="string">'#660208'</span>]</span></span><br><span class="line">      &#125;,</span><br><span class="line">      itemHeight: 10,</span><br><span class="line">      itemWidth: 20</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line"><span class="actionscript">  <span class="comment">// 鼠标悬浮的提示信息</span></span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 地图 : &#123;a&#125;（系列名称），&#123;b&#125;（区域名称），&#123;c&#125;（合并数值）, &#123;d&#125;（无）</span></span></span><br><span class="line">  tooltip: &#123;</span><br><span class="line"><span class="actionscript">    trigger: <span class="string">'item'</span>,</span></span><br><span class="line"><span class="actionscript">    formatter: <span class="string">'地区：&#123;b&#125;&lt;br/&gt;确诊：&#123;c&#125;'</span>,</span></span><br><span class="line"><span class="actionscript">    position: <span class="function"><span class="keyword">function</span><span class="params">(point, params, dom, rect, size)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 固定在顶部</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> [point[<span class="number">0</span>], <span class="string">'10%'</span>]</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  series: [</span><br><span class="line">    &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 图表的类型</span></span></span><br><span class="line"><span class="actionscript">      type: <span class="string">'map'</span>,</span></span><br><span class="line"><span class="actionscript">      map: <span class="string">'china'</span>,</span></span><br><span class="line">      label: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 显示各个省份名称</span></span></span><br><span class="line"><span class="actionscript">        show: <span class="literal">true</span>,</span></span><br><span class="line">        fontSize: 12,</span><br><span class="line"><span class="actionscript">        color: <span class="string">'black'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      itemStyle: &#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 区域的背景颜色</span></span></span><br><span class="line"><span class="actionscript">        areaColor: <span class="string">'#fff'</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="comment">// 高亮状态下</span></span></span><br><span class="line">      emphasis: &#123;</span><br><span class="line">        label: &#123;</span><br><span class="line">          fontSize: 15,</span><br><span class="line"><span class="actionscript">          color: <span class="string">'#4adbaf'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 控制鼠标滑过时的高亮样式</span></span></span><br><span class="line">        itemStyle: &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// 地图区域的多边形 图形颜色</span></span></span><br><span class="line"><span class="actionscript">          areaColor: <span class="string">'#c7fffd'</span>,</span></span><br><span class="line"><span class="actionscript">          borderColor: <span class="string">'#B03A5B'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"><span class="actionscript">      <span class="comment">// 当前视角的缩放比例</span></span></span><br><span class="line">      zoom: 1.2,</span><br><span class="line">      data: [</span><br><span class="line"><span class="actionscript">        &#123; name: <span class="string">'北京'</span>, value: <span class="number">200</span> &#125;,</span></span><br><span class="line"><span class="actionscript">        &#123; name: <span class="string">'湖北'</span>, value: <span class="number">20000</span> &#125;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">  data() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">      myChart: <span class="string">''</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">this</span>.myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'map'</span>))</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 指定图表的配置项和数据</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.myChart.setOption(option)</span></span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.getData()</span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 获得真实数据</span></span></span><br><span class="line">    getData() &#123;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 解决访问跨域问题</span></span></span><br><span class="line">      jsonp(</span><br><span class="line"><span class="actionscript">        <span class="string">'http://interface.sina.cn/news/wap/fymap2020_data.d.json?_=1580892522427'</span>,</span></span><br><span class="line">        &#123;&#125;,</span><br><span class="line">        (erros, data) =&gt; &#123;</span><br><span class="line"><span class="actionscript">          <span class="comment">// console.log(data);</span></span></span><br><span class="line"><span class="actionscript">          <span class="comment">// console.log(data.data.list)</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> lists = data.data.list.map(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">              name: item.name,</span><br><span class="line">              value: item.value</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">          option.series[0].data = lists</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.myChart.setOption(option)</span></span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#map</span> &#123;</span></span><br><span class="line">  width: 1050px;</span><br><span class="line">  height: 620px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://www.echartsjs.com/zh/option.html#title" target="_blank" rel="noopener">Echarts 官方文档</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>ECharts</tag>
      </tags>
  </entry>
  <entry>
    <title>在此处打开cmd窗口</title>
    <url>/2296539222/</url>
    <content><![CDATA[<p>具体步骤<br>第一步：新建一个txt文件，命名为OpenCmdHere.txt<br>第二步：在文件中输入如下代码，用notepad++保存,<strong><em>注意编码需要是ANSI</em></strong></p>
<a id="more"></a>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5.00</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd "</span>%V<span class="string">""</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd \"%V\""</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Drive\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd \"%V\""</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\LibraryFolder\<span class="built_in">background</span>\shell\OpenCmdHere]</span><br><span class="line">@=<span class="string">"在此处打开命令窗口"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"cmd.exe"</span></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\LibraryFolder\<span class="built_in">background</span>\shell\OpenCmdHere\command]</span><br><span class="line">@=<span class="string">"cmd.exe /s /k pushd \"%V\""</span></span><br></pre></td></tr></table></figure>
<p>第三步：更改文件后缀名为reg，弹出的提示点确认。<br>第四步：双击OpenCmdHere.reg文件运行，</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>电脑知识</tag>
      </tags>
  </entry>
  <entry>
    <title>function</title>
    <url>/3400406589/</url>
    <content><![CDATA[<h2 id="使用layer弹出层，官网下载后导入直接报错，"><a href="#使用layer弹出层，官网下载后导入直接报错，" class="headerlink" title="使用layer弹出层，官网下载后导入直接报错，"></a>使用layer弹出层，官网下载后导入直接报错，</h2><p><strong>原因：需要先引入jquery再引入layer.js</strong><br><a href="http://layer.layui.com/" target="_blank" rel="noopener">layer官网链接</a></p>
<a id="more"></a>

<p><img src="https://img-blog.csdnimg.cn/20191227145403789.png" alt="在这里插入图片描述"><br>演示代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>layer弹出层演示<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery/jquery-3.4.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"layer/layer.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>弹出一个提示层<span class="tag">&lt;/<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p2"</span>&gt;</span>弹出一个页面层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p3"</span>&gt;</span>弹出一个iframe层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p4"</span>&gt;</span>弹出一个loading层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p5"</span>&gt;</span>弹出一个tips层<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个提示层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p1'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">      layer.msg(<span class="string">'hello'</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个页面层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p2'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">      layer.open(&#123;</span><br><span class="line">        type: 1,</span><br><span class="line"><span class="actionscript">        area: [<span class="string">'600px'</span>, <span class="string">'360px'</span>],</span></span><br><span class="line"><span class="actionscript">        shadeClose: <span class="literal">true</span>, <span class="comment">//点击遮罩关闭</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        content: '\<span class="tag">&lt;<span class="name">\div</span> <span class="attr">style</span>=<span class="string">"padding:20px;"</span>&gt;</span>自定义内容\<span class="tag">&lt;<span class="name">\</span>/<span class="attr">div</span>&gt;</span>'</span></span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个iframe层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p3'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">      layer.open(&#123;</span><br><span class="line">        type: 2,</span><br><span class="line"><span class="actionscript">        title: <span class="string">'iframe父子操作'</span>,</span></span><br><span class="line"><span class="actionscript">        maxmin: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        shadeClose: <span class="literal">true</span>, <span class="comment">//点击遮罩关闭层</span></span></span><br><span class="line"><span class="actionscript">        area : [<span class="string">'800px'</span> , <span class="string">'520px'</span>],</span></span><br><span class="line"><span class="actionscript">        content: <span class="string">'test/iframe.html'</span></span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个loading层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p4'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> ii = layer.load();</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//此处用setTimeout演示ajax的回调</span></span></span><br><span class="line"><span class="actionscript">      setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">        layer.close(ii);</span><br><span class="line">      &#125;, 1000);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">//弹出一个tips层</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#p5'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">      layer.tips(<span class="string">'Hello tips!'</span>, <span class="string">'#p5'</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20191227145439393.png" alt="在这里插入图片描述"><br>##layui中Uncaught ReferenceError: cn is not defined<br>查询了很久最终发现竟然是导入layui文件时出现问题!!!!!!!<br>##RestFul风格</p>
<ul>
<li>GET:查询；</li>
<li>POST：新增；</li>
<li>PUT：修改；</li>
<li>DELETE：删除；<br><strong>若为springboot项目直接在type中写对应的类型就好,如：delete,put等,都给我们自动配置好了，只要对应后端相应的mapping.</strong></li>
</ul>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>layui</tag>
        <tag>layer</tag>
      </tags>
  </entry>
  <entry>
    <title>idea的样式颜色修改</title>
    <url>/3636932366/</url>
    <content><![CDATA[<h2 id="去除xml文件中sql语句背景色，可以只去里面最后一个"><a href="#去除xml文件中sql语句背景色，可以只去里面最后一个" class="headerlink" title="去除xml文件中sql语句背景色，可以只去里面最后一个"></a>去除xml文件中sql语句背景色，可以只去里面最后一个</h2><br>
<a id="more"></a>

<p><img src="https://img-blog.csdnimg.cn/20191225154834905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="设置警告的背景颜色"><a href="#设置警告的背景颜色" class="headerlink" title="设置警告的背景颜色"></a>设置警告的背景颜色</h2><p><img src="https://img-blog.csdnimg.cn/20191225154905850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="修改代码颜色"><a href="#修改代码颜色" class="headerlink" title="修改代码颜色"></a>修改代码颜色</h2><p><img src="https://img-blog.csdnimg.cn/20191225154916424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="IDEA去除掉虚线，波浪线，和下划线实线的方法"><a href="#IDEA去除掉虚线，波浪线，和下划线实线的方法" class="headerlink" title="IDEA去除掉虚线，波浪线，和下划线实线的方法"></a>IDEA去除掉虚线，波浪线，和下划线实线的方法</h2><ul>
<li><a href="https://blog.csdn.net/best_luxi/article/details/81253316" target="_blank" rel="noopener">https://blog.csdn.net/best_luxi/article/details/81253316</a></li>
</ul>
<h2 id="去掉IntelliJ-IDEA-中mapper-xml-文件警告"><a href="#去掉IntelliJ-IDEA-中mapper-xml-文件警告" class="headerlink" title="去掉IntelliJ IDEA 中mapper xml 文件警告"></a>去掉IntelliJ IDEA 中mapper xml 文件警告</h2><ul>
<li><a href="https://blog.csdn.net/VictorStephen/article/details/80280270" target="_blank" rel="noopener">https://blog.csdn.net/VictorStephen/article/details/80280270</a></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>知新网在线视频学习网站</title>
    <url>/3511959982/</url>
    <content><![CDATA[<p><strong>项目名称：知新网在线视频学习网站</strong></p>
<p>    项目周期：一个星期<br>    开发环境：SpringToolsuite+Mysql5+Tomcat8.5+SVN+JDK1.8+Bootstrap</p>
<a id="more"></a>

<p>    项目背景：人们的物质生活快速增长，快节奏的时代下，人们的精神生活日益溃泛。于是，我们组想开发个在线学习网站，成为供大家学习、交流的心灵港湾。喻名意为：温故而知新，可以为师矣。<br>    项目模块划分：用户模块，视频模块，论坛模块，悬赏订单模块，后台管理系统<br>    项目组员：刘杨（组长），郭涛，王综艺，李小龙<br>    技术选型：采用c3p0技术连接数据库，查询出的数据结果，通过service层、controller层传值到jsp页面显示，且前端页面使用Ajax技术实现异步交互</p>
<p>责任描述：<br>1、 与组员协商基本功能，完善对知新网功能的详细思维导图；<br>2、统一命名规范准备<br>3、协助组员完成视频上传的功能实现，优化前端页面的美观性，降低后端代码的冗余度<br>4、整合项目，调试bug，流畅运行项目所有实现的功能.最后：我们实现了知新网的登陆、注册、用户资料上传修改、在线拍照上传、视频上传播放、论坛发贴评论、悬赏订单在线解疑以及后台管理系统等， </p>
<p>项目系统设计：</p>
<ul>
<li>模板划分</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20190906011713815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center" alt=""></p>
<ul>
<li>系统工作流程</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20190906012428671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>数据库表设计：</p>
<ul>
<li>采用逻辑删除，避免数据的不可恢复性</li>
<li>用户表   教师表    用户详细表   课程表    用户学习表    评论表    论坛明细表    订单悬赏表    悬赏订单记录表<br>课程订单明细    用户收藏表    视频库表</li>
</ul>
<p>页面设计：</p>
<ul>
<li>使用Bootstrap框架、WebStorm工具</li>
</ul>
<p>部分页面展示：</p>
<ul>
<li><p>首页<br>调用阿里云的短信验证接口，实现手机号登录<img src="https://img-blog.csdnimg.cn/20190906013433219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</li>
<li><p>视频播放页面<br>采用了文件上传下载技术：导入了fastjson包，采用创建磁盘工厂类DiskFileItemFactory，解析器ServletFileUpload的办法。由于技术有限，上传时速率不够快。<br><img src="https://img-blog.csdnimg.cn/20190906013922584.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center=600%C3%97500" alt="在这里插入图片描述"></p>
</li>
<li><p>后台管理系统：<br>①采用分页，对数据实现查询分页处理；<br>②采用table里的每行对应个表单，然后遍历出来，方便管理员直接客观的修改对应数据；<br>③采用Ajax异步技术<br><img src="https://img-blog.csdnimg.cn/20190906014811827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDc2NDY1,size_16,color_FFFFFF,t_70#pic_center=600%C3%97500" alt="在这里插入图片描述">*</p>
</li>
</ul>
<p>部分代码展示：</p>
<ul>
<li>文件上传</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.创建磁盘工厂类</span></span><br><span class="line">DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line"><span class="comment">// 内存缓冲区与临时路径的关系， 加载的文件在内存缓冲区不够的情况下</span></span><br><span class="line"><span class="comment">// 把此文件加载进临时存放路径</span></span><br><span class="line">factory.setSizeThreshold(<span class="number">20</span> * <span class="number">1024</span> * <span class="number">1024</span>);</span><br><span class="line"><span class="comment">// 临时文件存放路径 如果不存在此路径，则创建</span></span><br><span class="line">File temp = <span class="keyword">new</span> File(<span class="string">"D:/temp"</span>);</span><br><span class="line"><span class="keyword">if</span> (!temp.exists()) &#123;</span><br><span class="line">	temp.mkdirs();</span><br><span class="line">&#125;</span><br><span class="line">factory.setRepository(temp);</span><br><span class="line"><span class="comment">// 2.创建解析器</span></span><br><span class="line">ServletFileUpload sfu = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line"><span class="comment">// 判断表单是否为multipart/form-data</span></span><br><span class="line"><span class="keyword">boolean</span> bl = ServletFileUpload.isMultipartContent(request);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">	<span class="comment">// 设置文件的最大字节数</span></span><br><span class="line">	sfu.setFileSizeMax(<span class="number">1024</span> * <span class="number">1024</span>); <span class="comment">// 超出限定字节 触发异常FileUploadBase$FileSizeLimitExceededException</span></span><br><span class="line">	<span class="keyword">if</span> (bl) &#123;</span><br><span class="line">		<span class="comment">// 3.解析request</span></span><br><span class="line">		List&lt;FileItem&gt; list = sfu.parseRequest(request);</span><br><span class="line">		<span class="comment">// 遍历结果集</span></span><br><span class="line">		System.out.println(list);</span><br><span class="line">		<span class="keyword">for</span> (FileItem item : list) &#123;</span><br><span class="line">			<span class="comment">// 当前对象是普通表单控件(true)还是文件表单控件(false)</span></span><br><span class="line">			<span class="keyword">if</span> (item.isFormField()) &#123;</span><br><span class="line">				<span class="comment">// 控件名</span></span><br><span class="line">				String name = item.getFieldName();</span><br><span class="line">				<span class="comment">// 得到值</span></span><br><span class="line">				String value = item.getString();</span><br><span class="line">				System.out.println(<span class="string">"key:"</span> + name + <span class="string">",value:"</span> + value);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="comment">// 控件名</span></span><br><span class="line">				String name = item.getFieldName();</span><br><span class="line">				<span class="comment">// 文件名：</span></span><br><span class="line">				String fileName = item.getName();</span><br><span class="line">				System.out.println(<span class="string">"key:"</span> + name + <span class="string">",filename:"</span> + fileName);</span><br><span class="line">				<span class="comment">// 保存文件数据</span></span><br><span class="line">				String path = <span class="keyword">this</span>.getServletContext().getRealPath(<span class="string">"/"</span>) + <span class="string">"images\\HeadPortrait"</span>;</span><br><span class="line">				System.out.println(<span class="string">"path"</span>+path);</span><br><span class="line">				File root = <span class="keyword">new</span> File(path);</span><br><span class="line">				<span class="keyword">if</span> (!root.exists()) &#123;</span><br><span class="line">					<span class="comment">// 上传的根路径不存在则新建</span></span><br><span class="line">					root.mkdirs();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 文件名冲突 D:/image/页码列表处理.jpg</span></span><br><span class="line">				<span class="keyword">int</span> lastIndex = fileName.lastIndexOf(<span class="string">"\\"</span>);</span><br><span class="line">				<span class="keyword">if</span> (lastIndex != -<span class="number">1</span>) &#123;</span><br><span class="line">					fileName = fileName.substring(lastIndex + <span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 文件名重写生成</span></span><br><span class="line">				fileName = UUID.randomUUID().toString().replace(<span class="string">"-"</span>, <span class="string">""</span>) + fileName;</span><br><span class="line">				System.out.println(<span class="string">"新生成的文件名："</span> + fileName);</span><br><span class="line">				basePath = <span class="string">"images\\HeadPortrait"</span>+<span class="string">"\\"</span>+fileName;</span><br><span class="line">				<span class="comment">// 开始上传</span></span><br><span class="line">				File load = <span class="keyword">new</span> File(root, fileName);</span><br><span class="line">				item.write(load);</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure>



<ul>
<li>分页的jsp代码<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">	&lt;a href=<span class="string">"&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3'/&gt;"</span></span><br><span class="line">		target="mainFrame"&gt;全部视频&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;table border=<span class="string">"1"</span> width=<span class="string">"100%"</span> cellspacing=<span class="string">"0"</span>&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">		&lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程图片&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程名称&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程类型&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程评分&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程价格&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;课程状态&lt;/th&gt;</span><br><span class="line">		&lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">	&lt;/tr&gt;</span><br><span class="line">	&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty page&#125;"</span>&gt;</span><br><span class="line">		&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty page.list&#125;"</span>&gt;</span><br><span class="line">			&lt;c:forEach items=<span class="string">"$&#123;page.list&#125;"</span> <span class="keyword">var</span>=<span class="string">"allList"</span> varStatus=<span class="string">"status"</span>&gt;</span><br><span class="line">				&lt;form action=<span class="string">"&lt;c:url value='/VideoServlet?method=updateVideo'/&gt;"</span></span><br><span class="line">					method=<span class="string">"post"</span>&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;$&#123;status.index+1&#125;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseId&#125;"</span></span><br><span class="line">							name=<span class="string">"courseId"</span></span><br><span class="line">							style="border: none; width: 20px;; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;img src=<span class="string">"$&#123;allList.courseImage&#125;"</span> width=<span class="string">"100"</span></span><br><span class="line">							height="120" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td style=<span class="string">"width: 20px"</span>&gt;&lt;input type=<span class="string">"text"</span></span><br><span class="line">							value=<span class="string">"$&#123;allList.courseName&#125;"</span> name=<span class="string">"courseName"</span></span><br><span class="line">							style="border: none; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseType&#125;"</span></span><br><span class="line">							name="courseType" style="border: none; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseGrade&#125;"</span></span><br><span class="line">							name=<span class="string">"courseGrade"</span></span><br><span class="line">							style="border: none; width: 40px; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.coursePrice&#125;"</span></span><br><span class="line">							name=<span class="string">"coursePrice"</span></span><br><span class="line">							style="border: none; width: 180px; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type=<span class="string">"text"</span> value=<span class="string">"$&#123;allList.courseStatus&#125;"</span></span><br><span class="line">							name=<span class="string">"courseStatus"</span></span><br><span class="line">							style="border: none; width: 10px; text-align: center;" /&gt;&lt;/td&gt;</span><br><span class="line">						&lt;td&gt;&lt;input type="submit" value="修改" /&gt;&lt;/td&gt;</span><br><span class="line">					&lt;/tr&gt;</span><br><span class="line">				&lt;/form&gt;</span><br><span class="line">			&lt;/c:forEach&gt;</span><br><span class="line">		&lt;/c:if&gt;</span><br><span class="line">	&lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">	&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;not empty page&#125;"</span>&gt;</span><br><span class="line">		&lt;p&gt;</span><br><span class="line">			当前:$&#123;page.currentPageNo&#125;|总$&#123;page.countPage&#125;页 &lt;a</span><br><span class="line">				href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=1'/&gt;"&gt;首页&lt;/a&gt;</span><br><span class="line">			&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page.currentPageNo!=1&#125;"</span>&gt;</span><br><span class="line">				&lt;a</span><br><span class="line">					href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=$&#123;page.currentPageNo-1&#125;'/&gt;"&gt;上一页&lt;/a&gt;</span><br><span class="line">			&lt;/c:if&gt;</span><br><span class="line">			&lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;page.currentPageNo!=page.countPage&#125;"</span>&gt;</span><br><span class="line">				&lt;a</span><br><span class="line">					href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=$&#123;page.currentPageNo+1&#125;'/&gt;"&gt;下一页&lt;/a&gt;</span><br><span class="line">			&lt;/c:if&gt;</span><br><span class="line">			&lt;a</span><br><span class="line">				href="&lt;c:url value='/VideoServlet?method=findAll&amp;pageSize=3&amp;currentPageNo=$&#123;page.countPage&#125;'/&gt;"&gt;尾页&lt;/a&gt;</span><br><span class="line">		&lt;/p&gt;</span><br><span class="line">	&lt;/c:if&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>
dao层接口方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将用户输入的信息添加到个人中心的我的主页</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userDetailId用户表id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId用户明细表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> UserDetail用户详情表对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">UserDetail <span class="title">addMyHomepage</span><span class="params">(<span class="keyword">int</span> userDetailId, UserDetail userId)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改密码的方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> oldPassword</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId      用户表的id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否修改成功</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">updatePwd</span><span class="params">(String oldPassword, String password, <span class="keyword">int</span> userId)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户表id查找明细表</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userOfId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> UserDetail</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">UserDetail <span class="title">selectUserDetailByUId</span><span class="params">(<span class="keyword">int</span> userOfId)</span></span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>项目</category>
      </categories>
  </entry>
  <entry>
    <title>Markdown 示范</title>
    <url>/2503787033/</url>
    <content><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>使用标题时需要使用#号</p>
<a id="more"></a>

<h2 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h2><p>这是第一个段落内容</p>
<p>这是第二个段落内容</p>
<p>字体：粗文本使用前后分别两个 * 号</p>
<h2 id="区块引用，使用"><a href="#区块引用，使用" class="headerlink" title="区块引用，使用"></a>区块引用，使用</h2><blockquote>
<p>这是一段引用段落，将会被高亮显示</p>
</blockquote>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'RUNOOB'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>这是一个链接 <a href="https://www.runoob.com/markdown/md-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=1752749994,1753922299&fm=26&gp=0.jpg" alt="风景"></p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><hr>
<hr>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<h2 id="列表嵌套："><a href="#列表嵌套：" class="headerlink" title="列表嵌套："></a>列表嵌套：</h2><ol>
<li>第一项：<ul>
<li>第一项嵌套的第一个元素</li>
<li>第一项嵌套的第二个元素</li>
</ul>
</li>
<li>第二项：<ul>
<li>第二项嵌套的第一个元素</li>
<li>第二项嵌套的第二个元素</li>
</ul>
</li>
</ol>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody></table>
<hr>
<div align="middle">
    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1362921283&auto=0&height=66"></iframe>
</div>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
</search>
